bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Integer(0);  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Integer(0);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Integer(0);	  Incrementor    evaluations    =    new    Integer();    	non-compiled	[CE]  incompatible  types	73	None	replace
2	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Integer(name);  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Integer(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Integer(name);	  Incrementor    evaluations    =    new    Integer();    	non-compiled	[CE]  incompatible  types	73	None	replace
3	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Integer(1);  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Integer(1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Integer(1);	  Incrementor    evaluations    =    new    Integer();    	non-compiled	[CE]  incompatible  types	73	None	replace
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  ArrayList  <  Integer>  events  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	ArrayList  <  Integer>  events  =  new  java.util.ArrayList  <  Integer>();	  this.events    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  NullPointerException  	41	1	replace
5	[BUG]  [BUGGY]  ArrayList  <  Integer>  events  =  new  java.util.ArrayList  <  Integer>();  [FE]  NullPointerException  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  ArrayList  <  Integer>  events  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	ArrayList  <  Integer>  events  =  new  java.util.ArrayList  <  Integer>();	  this.events    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  NullPointerException  	41	1	replace
6	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.getExpansion();  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansion  =  ExpandableStatefulODE.getExpansion();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansion  =  ExpandableStatefulODE.getExpansion();	  this.expansion    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expansion	25	None	replace
7	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.getInstance(name);  [CE]  cannot  find  symbol  expansion  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansion  =  ExpandableStatefulODE.getInstance(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansion  =  ExpandableStatefulODE.getInstance(name);	  this.expansion    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expansion	25	None	replace
8	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  +  2);  [CE]  cannot  find  symbol  expr  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  +  2);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name  +  2);	  this.expr    =    ExpandableStatefulODE.create(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  expr	3	None	replace
9	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  /  1);  [CE]  cannot  find  symbol  expr  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  /  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name  /  1);	  this.expr    =    ExpandableStatefulODE.create(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  expr	3	None	replace
10	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.create(name  +  1);  [CE]  cannot  find  symbol  expansion  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansion  =  ExpandableStatefulODE.create(name  +  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansion  =  ExpandableStatefulODE.create(name  +  1);	  this.expr    =    ExpandableStatefulODE.create(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  expansion	3	None	replace
11	[BUG]  [BUGGY]  this.eventsInitialization  =  new  LinkedList  <  Incrementor>();  [CE]  cannot  find  symbol  eventsInitialization  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsInitialization  =  new  LinkedList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsInitialization  =  new  LinkedList  <  Incrementor>();	  this.eventsInitialization    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  eventsInitialization	77	None	replace
12	[BUG]  [BUGGY]  this.eventsInitializer  =  new  ArrayList  <  Incrementor>();  [CE]  cannot  find  symbol  eventsInitializer  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsInitializer  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsInitializer  =  new  ArrayList  <  Incrementor>();	  this.eventsInitialization    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  eventsInitializer	77	None	replace
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	compilable	  [FE]  NullPointerException  	75	1	add
14	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	compilable	  [FE]  NullPointerException  	75	1	add
15	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [CE]  no  suitable  constructor  found  for  ArrayList(StepHandler)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(StepHandler)	75	None	add
16	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  StepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [CE]  cannot  find  symbol  StepHandlers  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  StepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    StepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	75	None	add
17	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  steps  =  new  ArrayList  <  StepHandler>(stepHandlers);  [CE]  cannot  find  symbol  steps  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  steps  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    steps  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol  steps	75	None	add
18	[BUG]  [BUGGY]  This.events  =  new  LinkedList  <  Integer>();  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.events  =  new  LinkedList  <  Integer>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.events  =  new  LinkedList  <  Integer>();	  This.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  This	78	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Integer>  events  =  new  ArrayList  <  Integer>();  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Iterator  <  Integer>  events  =  new  ArrayList  <  Integer>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Iterator  <  Integer>  events  =  new  ArrayList  <  Integer>();	  This.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  incompatible  types	78	None	replace
20	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Integer  evaluations  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Integer  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Integer    evaluations    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	32	None	replace
21	[BUG]  [BUGGY]  int  evaluations  =  new  Integer();  [CE]  no  suitable  constructor  found  for  Integer()  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  int  evaluations  =  new  Integer();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	int  evaluations  =  new  Integer();	          Incrementor    evaluations    =    new    Incrementor();    Integer    evaluations    =    new    Incrementor();    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer()	32	None	replace
22	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  [CE]  cannot  find  symbol  events  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  events	86	None	replace
23	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Collection  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Collection  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	86	1	replace
24	[BUG]  [BUGGY]  Collection  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Collection  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Collection  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	86	1	replace
25	[BUG]  [BUGGY]  Iterator  <  Incrementor>  it  =  this.events.iterator();  [CE]  cannot  find  symbol  events  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Iterator  <  Incrementor>  it  =  this.events.iterator();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Iterator  <  Incrementor>  it  =  this.events.iterator();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  events	86	None	replace
26	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  Integer>emptyList();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  Integer>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.  <  Integer>emptyList();	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types	45	None	replace
27	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  String>emptyList();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  String>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.  <  String>emptyList();	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types	45	None	replace
28	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);  [CE]  cannot  find  symbol  expr  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);	  this.expr    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expr	1	None	replace
29	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expansion);  [CE]  cannot  find  symbol  expr  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expansion);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  expansion);	  this.expr    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expr	1	None	replace
30	[BUG]  [BUGGY]  StepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	6	None	replace
31	[BUG]  [BUGGY]  stepStart  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepStart  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepStart  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	6	None	replace
32	[BUG]  [BUGGY]  stepsInitialized  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepsInitialized  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepsInitialized  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	6	None	replace
33	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	61	1	add
35	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	61	1	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	61	1	add
37	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	61	1	add
38	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
39	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
40	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  ExpandableStatefulODE>();  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  ExpandableStatefulODE>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.stepHandlers  =  new  ArrayList  <  ExpandableStatefulODE>();	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  incompatible  types	58	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	compilable	  [FE]  AssertionError  	58	1	replace
42	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	compilable	  [FE]  AssertionError  	58	1	replace
43	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  Integer>();  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  Integer>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.stepHandlers  =  new  ArrayList  <  Integer>();	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  incompatible  types	58	None	replace
44	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);  [CE]  cannot  find  symbol  expr  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);	  this.expr    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expr	2	None	replace
45	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);  [CE]  cannot  find  symbol  expr  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);	  this.expr    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expr	2	None	replace
46	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Incrementor  assessments  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
47	[BUG]  [BUGGY]  Incrementor  assessments  =  new  Incrementor();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  assessments  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
48	[BUG]  [BUGGY]  null  evaluations  =  new  Incrementor();  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  null  evaluations  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	null  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	non-compiled	[CE]  not  a  statement	31	None	replace
49	[BUG]  [BUGGY]  Integer  evaluations  =  new  Integer();  [CE]  no  suitable  constructor  found  for  Integer()  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Integer  evaluations  =  new  Integer();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Integer  evaluations  =  new  Integer();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer()	31	None	replace
50	[BUG]  [BUGGY]  steps  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  steps  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	steps  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    steps    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	72	None	replace
51	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandler  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandler  stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    steps    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	72	None	replace
52	[BUG]  [BUGGY]  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>	47	None	replace
53	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newArrayList();  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  Lists  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Lists.newArrayList();  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Lists.newArrayList();  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Lists	47	None	replace
54	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.length());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Incrementor  evaluations  =  new  Incrementor(name.length());	  Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	53	1	replace
55	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.length());  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.length());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name.length());	  Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	53	1	replace
56	[BUG]  [BUGGY]  this.stepHandlers  =  new  HashMap  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  HashMap  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.stepHandlers  =  new  HashMap  <  Incrementor>();	  this.stepHandlers    =    new    TreeMap    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
57	[BUG]  [BUGGY]  this.expansionable  =  expandable;  [CE]  cannot  find  symbol  expansionable  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansionable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansionable  =  expandable;	  this.expandable    =    expansionable;    	non-compiled	[CE]  cannot  find  symbol  expansionable	67	None	replace
58	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
59	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
60	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
61	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(2);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
62	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
63	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
64	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expanable!=  null)  {  setMaxEvaluations(1);  }  [CE]  cannot  find  symbol  expanable  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expanable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expanable!=  null)  {  setMaxEvaluations(1);  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	59	None	add
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	59	1	add
66	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	59	1	add
67	[BUG]  [BUGGY]  this.eventsStates  =  Collections.newArrayList();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.newArrayList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.newArrayList();	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
68	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	30	None	add
69	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)	30	None	add
70	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)	30	None	add
71	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Integer  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Integer  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Integer  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	30	None	add
72	[BUG]  [BUGGY]  this.events  =  new  LinkedHashSet  <  EventStatement>();  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  new  LinkedHashSet  <  EventStatement>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  new  LinkedHashSet  <  EventStatement>();	  this.events    =    new    HashSet    <    EventStatement>();    	non-compiled	[CE]  cannot  find  symbol  events	84	None	replace
73	[BUG]  [BUGGY]  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  This	81	None	replace
74	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.EMPTYList();	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
75	[BUG]  [BUGGY]  this.events  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Collections.EMPTY_LIST?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.events    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  events	36	None	replace
76	[BUG]  [BUGGY]  this.events  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  events  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Collections.EMPTY_LIST  |  Collections.EMPTY_LIST;	  this.events    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  events	36	None	replace
77	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	87	None	replace
78	[BUG]  [BUGGY]  this.eventsStates  =  new  Incrementor();  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	87	None	replace
79	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	64	None	replace
80	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    	compilable	  [FE]  NullPointerException  	64	1	replace
81	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    	compilable	  [FE]  NullPointerException  	64	1	replace
82	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  ExpandableStatefulODE;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  ExpandableStatefulODE;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	64	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	42	1	add
84	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	42	1	add
85	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	42	None	add
86	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  these.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  these  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  these.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    these.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  these	42	None	add
87	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    Collection  <  EventState>  eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
88	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    Collection  <  EventState>  eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
89	[BUG]  [BUGGY]  INCrementor  evaluations  =  new  Incrementor();  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  INCrementor  evaluations  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	INCrementor  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    INCrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
90	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  INCrementor();  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  INCrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  INCrementor();	          Incrementor    evaluations    =    new    Incrementor();    INCrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
91	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	33	None	add
92	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [CE]  variable  appraisals  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();	  	non-compiled	[CE]  variable  appraisals  is  already  defined  in  constructor  AbstractIntegrator(String)	33	None	add
93	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [CE]  variable  appraisals  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();	  	non-compiled	[CE]  variable  appraisals  is  already  defined  in  constructor  AbstractIntegrator(String)	33	None	add
94	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Integer  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Integer  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Integer  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	33	None	add
95	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraises  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraises  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraises  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	33	None	add
96	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  new  ExpandableStatefulODE(name);	  this.expandable    =    new    ExpandableStatefulODE();    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	50	None	replace
97	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  true);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  true);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  new  ExpandableStatefulODE(name,  true);	  this.expandable    =    new    ExpandableStatefulODE();    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	50	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  AssertionError  	23	1	add
99	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  AssertionError  	23	1	add
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  AssertionError  	23	1	add
101	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  AssertionError  	23	1	add
102	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  This  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    This.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	23	None	add
103	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  ArrayList  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  ArrayList  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    ArrayList  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  ';'  expected	23	None	add
104	[BUG]  [BUGGY]  This.events  =  new  LinkedList  <  Incrementor>();  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.events  =  new  LinkedList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.events  =  new  LinkedList  <  Incrementor>();	  This.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  This	85	None	replace
105	[BUG]  [BUGGY]  Iterator  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Iterator  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Iterator  <  Incrementor>  events  =  new  ArrayList  <  Incrementor>();	  This.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  incompatible  types	85	None	replace
106	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	95	None	replace
107	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.length);  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.length);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.length);	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.length);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
108	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(events.size);  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(events.size);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(events.size);	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.length);    	non-compiled	[CE]  cannot  find  symbol  events	16	None	replace
109	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Integrator  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Integrator    evaluations    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
110	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(isLastStep)  {  expandable  =  new  ExpandableStatefulODE();  }  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(isLastStep)  {  expandable  =  new  ExpandableStatefulODE();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(isLastStep)  {  expandable  =  new  ExpandableStatefulODE();  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    if(isLastStep)    {    expandable    =    new    ExpandableStatefulODE();    }    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	82	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;	  	compilable	  [FE]  AssertionError  	55	1	add
112	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  expandable;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;	  	compilable	  [FE]  AssertionError  	55	1	add
113	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  this.expandable  =  expandable;  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  ExpandableStatefulODE;  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	55	None	add
114	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  This.expandable  =  expandable;  this.expandable  =  expandable;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  This.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    This.expandable  =  expandable;  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  This	55	None	add
115	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	55	None	add
116	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  HashSet  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  HashSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  HashSet  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    LinkedList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
117	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
118	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
119	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0,  0);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0,  0);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0,  0);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
120	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
121	[BUG]  [BUGGY]  stepsInitialized  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepsInitialized  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepsInitialized  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepsInitialized    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	8	None	replace
122	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  TreeList  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
123	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.size());    	compilable	  [FE]  NullPointerException  	15	1	replace
124	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.size());    	compilable	  [FE]  NullPointerException  	15	1	replace
125	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.size());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
126	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>(events.size());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>(events.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>(events.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.size());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers    =    new    TreeSet    <    StepHandler>();    	compilable	  [FE]  AssertionError  	5	1	replace
128	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers    =    new    TreeSet    <    StepHandler>();    	compilable	  [FE]  AssertionError  	5	1	replace
129	[BUG]  [BUGGY]  This.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  This	46	None	replace
130	[BUG]  [BUGGY]  Collection  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Collection  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Collection  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();	          Incrementor    evaluations    =    new    Incrementor();    Collection    <    Incrementor>    evaluations    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	68	None	replace
131	[BUG]  [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Collection  <  Incrementor>  evaluations  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Collection  <  Incrementor>  evaluations  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Collection  <  Incrementor>  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Collection    <    Incrementor>    evaluations    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	68	None	replace
132	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();	          Incrementor    evaluations    =    new    Incrementor();    Collection    <    Incrementor>    evaluations    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
133	[BUG]  [BUGGY]  this.events  =  new  TreeList  <  Incrementor>();  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  new  TreeList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  new  TreeList  <  Incrementor>();	  this.events    =    new    TreeSet    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  events	10	None	replace
134	[BUG]  [BUGGY]  this.expr  =  expansionable.getInstance();  [CE]  cannot  find  symbol  expr  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  expansionable.getInstance();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  expansionable.getInstance();	  this.expr    =    expandable.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expr	26	None	replace
135	[BUG]  [BUGGY]  this.expr  =  expandedable.getInstance();  [CE]  cannot  find  symbol  expr  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  expandedable.getInstance();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  expandedable.getInstance();	  this.expr    =    expandable.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expr	26	None	replace
136	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  HashMap  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  HashMap  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  HashMap  <  StepHandler>();	  StepHandlers    stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
137	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(this.stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(this.stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(this.stepSize);	  StepHandlers    stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	93	1	add
139	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	93	1	add
140	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	93	1	add
142	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	93	1	add
143	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  expanable  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	93	None	add
144	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  This  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  This	93	None	add
145	[BUG]  [BUGGY]  this.events  =  new  TreeList  <  EventStatement>();  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  new  TreeList  <  EventStatement>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  new  TreeList  <  EventStatement>();	  this.events    =    new    TreeSet    <    EventStatement>();    	non-compiled	[CE]  cannot  find  symbol  events	66	None	replace
146	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
147	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
148	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
149	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
150	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
151	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
152	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
153	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	88	1	replace
154	[BUG]  [BUGGY]  this.events  =  Lists.newArrayList();  [CE]  cannot  find  symbol  events  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Lists.newArrayList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Lists.newArrayList();	  this.events    =    Lists.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	37	None	replace
155	[BUG]  [BUGGY]  this.events  =  Lists.EMPTY_LIST;  [CE]  cannot  find  symbol  events  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Lists.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Lists.EMPTY_LIST;	  this.events    =    Lists.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	37	None	replace
156	[BUG]  [BUGGY]  This.eventsInitialized  =  new  LinkedList  <  Incrementor>();  [CE]  cannot  find  symbol  This  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.eventsInitialized  =  new  LinkedList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.eventsInitialized  =  new  LinkedList  <  Incrementor>();	  This.eventsInitialized    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  This	39	None	replace
157	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  expandable);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)	51	None	replace
158	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)	51	None	replace
159	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expansionable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  expansionable);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  cannot  find  symbol  expansionable	51	None	replace
160	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();	  this.eventsStates    =    Collections.EMPTY_LIST;    	compilable	  [FE]  NullPointerException  	21	1	replace
161	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();	  this.eventsStates    =    Collections.EMPTY_LIST;    	compilable	  [FE]  NullPointerException  	21	1	replace
162	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.create();  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansion  =  ExpandableStatefulODE.create();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansion  =  ExpandableStatefulODE.create();	  this.expr    =    ExpandableStatefulODE.create();    	non-compiled	[CE]  cannot  find  symbol  expansion	96	None	replace
163	[BUG]  [BUGGY]  this.expr  =  expandable.create();  [CE]  cannot  find  symbol  expr  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  expandable.create();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  expandable.create();	  this.expr    =    ExpandableStatefulODE.create();    	non-compiled	[CE]  cannot  find  symbol  expr	96	None	replace
164	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  isLastStep);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  isLastStep);	  Incrementor    evaluations    =    new    Incrementor(name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)	54	None	replace
165	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  name.toLowerCase());  [CE]  no  suitable  constructor  found  for  Incrementor(String,String)  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  name.toLowerCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  name.toLowerCase());	  Incrementor    evaluations    =    new    Incrementor(name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,String)	54	None	replace
166	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  true);  [CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  true);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  true);	  Incrementor    evaluations    =    new    Incrementor(name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)	54	None	replace
167	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  expandable);  [CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)  [FE]                  NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  expandable);	  Incrementor    evaluations    =    new    Incrementor(name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)	54	None	replace
168	[BUG]  [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(name);  [CE]  method  unmodifiableCollection  in  class  Collections  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.unmodifiableCollection(name);	  this.eventsStates    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  method  unmodifiableCollection  in  class  Collections  cannot  be  applied  to  given  types;	89	None	replace
169	[BUG]  [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(false);  [CE]  method  unmodifiableCollection  in  class  Collections  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(false);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.unmodifiableCollection(false);	  this.eventsStates    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  method  unmodifiableCollection  in  class  Collections  cannot  be  applied  to  given  types;	89	None	replace
170	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(null);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates  =  Collections.unmodifiableCollection(null);	  this.eventsStates    =    Collections.unmodifiableCollection();    	compilable	  [FE]  NullPointerException  	89	1	replace
171	[BUG]  [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(null);  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(null);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.unmodifiableCollection(null);	  this.eventsStates    =    Collections.unmodifiableCollection();    	compilable	  [FE]  NullPointerException  	89	1	replace
172	[BUG]  [BUGGY]  these.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  these  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  these.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	these.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    these.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  these	48	None	replace
173	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	compilable	  [FE]  NullPointerException  	62	1	replace
174	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	compilable	  [FE]  NullPointerException  	62	1	replace
175	[BUG]  [BUGGY]  this.events  =  Collections.EMPTY_LIST.clone();  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Collections.EMPTY_LIST.clone();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Collections.EMPTY_LIST.clone();	  this.events    =    Collections.EMPTY_LIST.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	74	None	replace
176	[BUG]  [BUGGY]  this.events  =  Lists.EMPTY_LIST.emptyList();  [CE]  cannot  find  symbol  events  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Lists.EMPTY_LIST.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Lists.EMPTY_LIST.emptyList();	  this.events    =    Collections.EMPTY_LIST.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	74	None	replace
177	[BUG]  [BUGGY]  This.events  =  new  LinkedList  <  EventStatement>();  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.events  =  new  LinkedList  <  EventStatement>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.events  =  new  LinkedList  <  EventStatement>();	  This.events    =    new    ArrayList    <    EventStatement>();    	non-compiled	[CE]  cannot  find  symbol  This	92	None	replace
178	[BUG]  [BUGGY]  Iterator  <  EventStatement>  events  =  new  ArrayList  <  EventStatement>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Iterator  <  EventStatement>  events  =  new  ArrayList  <  EventStatement>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Iterator  <  EventStatement>  events  =  new  ArrayList  <  EventStatement>();	  This.events    =    new    ArrayList    <    EventStatement>();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	44	1	add
180	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	44	1	add
181	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	44	None	add
182	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  these.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  these  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  these.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    these.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  these	44	None	add
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	44	1	add
184	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	44	1	add
185	[BUG]  [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [CE]  cannot  find  symbol  Lists  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Lists.  <  EventState>emptyList();	  this.eventsStates    =    Collections.    <    EventState>emptyList();    	non-compiled	[CE]  cannot  find  symbol  Lists	24	None	replace
186	[BUG]  [BUGGY]  stepsInitialized  =  new  TreeMap  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepsInitialized  =  new  TreeMap  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepsInitialized  =  new  TreeMap  <  StepHandler>();	  stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	91	None	replace
187	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedHashSet  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  LinkedHashSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  LinkedHashSet  <  StepHandler>();	  stepHandlers    =    new    HashSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
188	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  Lists  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Lists.newLinkedList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Lists.newLinkedList();	  this.eventsStates    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	22	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  AssertionError  	20	1	add
190	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  AssertionError  	20	1	add
191	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  This  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    This.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  cannot  find  symbol  This	20	None	add
192	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collection  <  EventState>  eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    Collection  <  EventState>  eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	20	1	add
193	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collection  <  EventState>  eventsStates  =  Collections.EMPTY_LIST;  [FE]  UnsupportedOperationException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collection  <  EventState>  eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    Collection  <  EventState>  eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	20	1	add
194	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	20	1	add
195	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	20	1	add
196	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates,  isLastStep);  [CE]  no  suitable  constructor  found  for  ArrayList(Collection<EventState>,boolean)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates,  isLastStep);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(eventsStates,  isLastStep);	  stepHandlers    =    new    ArrayList    <    StepHandler>(eventsStates);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Collection<EventState>,boolean)	14	None	replace
197	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>(eventsStates);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>(eventsStates);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>(eventsStates);	  stepHandlers    =    new    ArrayList    <    StepHandler>(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
198	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	63	1	add
199	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	63	1	add
200	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
201	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  This	63	None	add
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	63	1	add
203	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	63	1	add
204	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  expanable  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	63	None	add
205	[BUG]  [BUGGY]  this.expandable  =  ExpandableStateful;  [CE]  cannot  find  symbol  ExpandableStateful  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  ExpandableStateful;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  ExpandableStateful;	  this.expandable    =    ExpandableStatefulODE;    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	49	None	replace
206	[BUG]  [BUGGY]  StepHandler>  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandler  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandler>  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandler>  stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandler>    stepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  StepHandler	7	None	replace
207	[BUG]  [BUGGY]  StepHandler[]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandler[]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandler[]  stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandler>    stepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	7	None	replace
208	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
209	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
210	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
211	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
212	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expanable!=  null)  {  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  expanable  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expanable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expanable!=  null)  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	57	None	add
213	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
214	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
215	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	57	1	add
216	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	57	1	add
217	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(eventsStates);  [CE]  no  suitable  constructor  found  for  TreeSet(Collection<EventState>)  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(eventsStates);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>(eventsStates);	  stepHandlers    =    new    TreeSet    <    StepHandler>(events);    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeSet(Collection<EventState>)	97	None	replace
218	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(events.size());  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(events.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>(events.size());	  stepHandlers    =    new    TreeSet    <    StepHandler>(events);    	non-compiled	[CE]  cannot  find  symbol  events	97	None	replace
219	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(stepSize);  [CE]  no  suitable  constructor  found  for  TreeSet(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>(stepSize);	  stepHandlers    =    new    TreeSet    <    StepHandler>(events);    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeSet(double)	97	None	replace
220	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Incrementor  appraisals  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
221	[BUG]  [BUGGY]  Incrementor  appraisals  =  new  Incrementor();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  appraisals  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
222	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	stepHandlers        =        new        TreeSet        <        StepHandler>();        stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	4	1	add
223	[BUG]  [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers        =        new        TreeSet        <        StepHandler>();        stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	4	1	add
224	[BUG]  [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  StepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers        =        new        TreeSet        <        StepHandler>();        stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	4	None	add
225	[BUG]  [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  stepsInitialized  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  stepsInitialized  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers        =        new        TreeSet        <        StepHandler>();        stepHandlers    =    new    TreeSet    <    StepHandler>();    stepsInitialized  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	4	None	add
226	[BUG]  [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  steps  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  steps  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers        =        new        TreeSet        <        StepHandler>();        stepHandlers    =    new    TreeSet    <    StepHandler>();    steps  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  steps	4	None	add
227	[BUG]  [BUGGY]  this.events  =  Collections.EMPTY_LIST.cloneArray();  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Collections.EMPTY_LIST.cloneArray();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Collections.EMPTY_LIST.cloneArray();	  this.events    =    Collections.EMPTY_LIST.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	74	None	replace
228	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(stepSize);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(stepSize);	  StepHandlers    stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
229	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>().stepHandlers;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>().stepHandlers;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>().stepHandlers;	  StepHandlers    stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
230	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expanable  =  expandable;  this.expandable  =  expandable;  [CE]  cannot  find  symbol  expanable  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expanable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expanable  =  expandable;  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  expanable	55	None	add
231	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    steps    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>	80	None	replace
232	[BUG]  [BUGGY]  this.steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    steps    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  steps	80	None	replace
233	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  steps  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    steps    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  steps	80	None	replace
234	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
235	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
236	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
237	[BUG]  [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
238	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
239	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	34	1	replace
240	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  ExpandableStatefulODE);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  ExpandableStatefulODE);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  ExpandableStatefulODE);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	51	None	replace
241	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep  -  1);  [CE]  cannot  find  symbol  expr  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep  -  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  isLastStep  -  1);	  this.expr    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expr	2	None	replace
242	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(2);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	44	1	add
244	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	44	1	add
245	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    	compilable	  [FE]  NullPointerException  	60	1	replace
246	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    	compilable	  [FE]  NullPointerException  	60	1	replace
247	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    	compilable	  [FE]  NullPointerException  	60	1	replace
248	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    	compilable	  [FE]  NullPointerException  	60	1	replace
249	[BUG]  [BUGGY]  This.stepHandlers  =  new  java.util.ArrayList  <  Incrementor>();  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.stepHandlers  =  new  java.util.ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.stepHandlers  =  new  java.util.ArrayList  <  Incrementor>();	  this.stepHandlers    =    new    java.util.ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  This	18	None	replace
250	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	86	None	replace
251	[BUG]  [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	86	None	replace
252	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	59	1	add
253	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	59	1	add
254	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    Set  <  Increment>  stepHandlers  =  Sets.newHashSet();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
255	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  if(expandable!=  null)  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    if(expandable!=  null)  {  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
256	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  if(expandable!=  null)  {  setMaxEvaluations(2);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  if(expandable!=  null)  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    if(expandable!=  null)  {  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
257	[BUG]  [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	replace
258	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	replace
259	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepStart  =  Double.NaN;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.stepStart  =  Double.NaN;	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	compilable	  [FE]  NullPointerException  	94	1	replace
260	[BUG]  [BUGGY]  this.stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepStart  =  Double.NaN;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.stepStart  =  Double.NaN;	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	compilable	  [FE]  NullPointerException  	94	1	replace
261	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  ExpandableStatefulODE>();  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.steps  =  new  ArrayList  <  ExpandableStatefulODE>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.steps  =  new  ArrayList  <  ExpandableStatefulODE>();	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  cannot  find  symbol  steps	94	None	replace
262	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }  [CE]  no  suitable  method  found  for  setMaxEvaluations()  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations();    }    	non-compiled	[CE]  no  suitable  method  found  for  setMaxEvaluations()	95	None	replace
263	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  0);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	53	None	replace
264	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(events.length);  [CE]  cannot  find  symbol  events  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(events.length);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>(events.length);	  stepHandlers    =    new    TreeSet    <    StepHandler>(events);    	non-compiled	[CE]  cannot  find  symbol  events	97	None	replace
265	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(size);  [CE]  cannot  find  symbol  size  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>(size);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>(size);	  stepHandlers    =    new    TreeSet    <    StepHandler>(events);    	non-compiled	[CE]  cannot  find  symbol  size	97	None	replace
266	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	29	None	replace
267	[BUG]  [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	29	None	replace
268	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
269	[BUG]  [BUGGY]  this.states  =  new  ArrayList  <  ExpandableStatefulODE>();  [CE]  cannot  find  symbol  states  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.states  =  new  ArrayList  <  ExpandableStatefulODE>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.states  =  new  ArrayList  <  ExpandableStatefulODE>();	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  cannot  find  symbol  states	58	None	replace
270	[BUG]  [BUGGY]  Iterator  <  Incrementor>  eventsInitialized  =  new  ArrayList  <  Incrementor>();  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Iterator  <  Incrementor>  eventsInitialized  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Iterator  <  Incrementor>  eventsInitialized  =  new  ArrayList  <  Incrementor>();	  This.eventsInitialized    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  incompatible  types	39	None	replace
271	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(expandable  ==  null)  {  if(isLastStep)  {  expandable  =  new  ExpandableStatefulODE();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(expandable  ==  null)  {  if(isLastStep)  {  expandable  =  new  ExpandableStatefulODE();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(expandable  ==  null)  {  if(isLastStep)  {  expandable  =  new  ExpandableStatefulODE();  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    if(isLastStep)    {    expandable    =    new    ExpandableStatefulODE();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
272	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyArray();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyArray();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.  <  EventState>emptyArray();	  this.eventsStates    =    Collections.    <    EventState>emptyList();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
273	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
274	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
275	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
276	[BUG]  [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
277	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
278	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	31	1	replace
279	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(null);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  new  ExpandableStatefulODE(null);	  this.expandable    =    new    ExpandableStatefulODE();    	compilable	  [FE]  NullPointerException  	50	1	replace
280	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(null);  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(null);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  new  ExpandableStatefulODE(null);	  this.expandable    =    new    ExpandableStatefulODE();    	compilable	  [FE]  NullPointerException  	50	1	replace
281	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(false);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(false);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  new  ExpandableStatefulODE(false);	  this.expandable    =    new    ExpandableStatefulODE();    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	50	None	replace
282	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_LIST  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    Collections.EMPTY_LIST  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_LIST	20	None	add
283	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  not  a  statement	20	None	add
284	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  INCrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  INCrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  INCrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	30	None	add
285	[BUG]  [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(expr);  [CE]  cannot  find  symbol  expr  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(expr);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.unmodifiableCollection(expr);	  this.eventsStates    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  cannot  find  symbol  expr	89	None	replace
286	[BUG]  [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(expandable);  [CE]  method  unmodifiableCollection  in  class  Collections  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.unmodifiableCollection(expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.unmodifiableCollection(expandable);	  this.eventsStates    =    Collections.unmodifiableCollection();    	non-compiled	[CE]  method  unmodifiableCollection  in  class  Collections  cannot  be  applied  to  given  types;	89	None	replace
287	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  evaluation  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [CE]  variable  appraisals  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Incrementor  evaluation  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Incrementor  evaluation  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();	  	non-compiled	[CE]  variable  appraisals  is  already  defined  in  constructor  AbstractIntegrator(String)	33	None	add
288	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Collection  <  Incrementor>  steps  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Collection  <  Incrementor>  steps  =  new  ArrayList  <  Incrementor>();	  	compilable	  [FE]  NullPointerException  	33	1	add
289	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Collection  <  Incrementor>  steps  =  new  ArrayList  <  Incrementor>();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  appraisals  =  new  Incrementor();  Collection  <  Incrementor>  steps  =  new  ArrayList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    appraisals    =    new    Incrementor();    Collection  <  Incrementor>  steps  =  new  ArrayList  <  Incrementor>();	  	compilable	  [FE]  NullPointerException  	33	1	add
290	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	compilable	  [FE]  NullPointerException  	62	1	replace
291	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	compilable	  [FE]  NullPointerException  	62	1	replace
292	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expansionable;  }  else  {  isLastStep  =  false;  }  [CE]  cannot  find  symbol  expansionable  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expansionable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expansionable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	62	None	replace
293	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeList  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.stepHandlers  =  new  TreeList  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.stepHandlers  =  new  TreeList  <  Incrementor>();	  this.stepHandlers    =    new    TreeSet    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
294	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
295	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
296	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
297	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	57	1	add
298	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	57	1	add
299	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    Set  <  Increment>  stepHandlers  =  Sets.newHashSet();	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
300	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
301	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
302	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  ArrayList  <  EventState>  eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>	47	None	replace
303	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  ArrayList  <  Incrementor>  stepHandlers  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<Incrementor>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  ArrayList  <  Incrementor>  stepHandlers  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    ArrayList  <  Incrementor>  stepHandlers  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<Incrementor>	42	None	add
304	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.sort(this.eventsStates);  this.eventsStates  =  Collections.emptyList();  [CE]  no  suitable  method  found  for  sort(Collection<EventState>)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.sort(this.eventsStates);  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    Collections.sort(this.eventsStates);  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  no  suitable  method  found  for  sort(Collection<EventState>)	42	None	add
305	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.createInteger();  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansion  =  ExpandableStatefulODE.createInteger();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansion  =  ExpandableStatefulODE.createInteger();	  this.expansion    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expansion	25	None	replace
306	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.instance;  [CE]  cannot  find  symbol  expansion  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansion  =  ExpandableStatefulODE.instance;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansion  =  ExpandableStatefulODE.instance;	  this.expansion    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expansion	25	None	replace
307	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
308	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
309	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
310	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  expansionable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name.toLowerCase(),  expansionable);	  Incrementor    evaluations    =    new    Incrementor(name.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol  expansionable	54	None	replace
311	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable.toLowerCase());  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable.toLowerCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  expandable.toLowerCase());	  Incrementor    evaluations    =    new    Incrementor(name.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
312	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Iterator  <  EventState>  stepHandlers  =  Collections.  <  EventState>emptyList();  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Iterator  <  EventState>  stepHandlers  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    Iterator  <  EventState>  stepHandlers  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  incompatible  types	23	None	add
313	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(this.events.size());  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(this.events.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(this.events.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.size());    	non-compiled	[CE]  cannot  find  symbol  events	15	None	replace
314	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(Events.size());  [CE]  cannot  find  symbol  Events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(Events.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(Events.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.size());    	non-compiled	[CE]  cannot  find  symbol  Events	15	None	replace
315	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  StepHandler[]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [CE]  no  suitable  constructor  found  for  ArrayList(StepHandler[])  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  StepHandler[]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    StepHandler[]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(StepHandler[])	75	None	add
316	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  +  1  -  1);  [CE]  cannot  find  symbol  expr  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  +  1  -  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name  +  1  -  1);	  this.expr    =    ExpandableStatefulODE.create(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  expr	3	None	replace
317	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulEOF;  [CE]  cannot  find  symbol  ExpandableStatefulEOF  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  ExpandableStatefulEOF;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  ExpandableStatefulEOF;	  this.expandable    =    ExpandableStatefulODE;    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulEOF	49	None	replace
318	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvaluations(-1);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvaluations(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor();  setEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
319	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expansionable);  [CE]  cannot  find  symbol  expr  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expansionable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  expansionable);	  this.expr    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expr	1	None	replace
320	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.length);  [CE]  cannot  find  symbol  length  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.length);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.length);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  length	76	None	replace
321	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    	compilable	  [FE]  NullPointerException  	76	1	replace
322	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.size());  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.size());  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers.size());	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    	compilable	  [FE]  NullPointerException  	76	1	replace
323	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
324	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
325	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsInitialized.length);  [CE]  cannot  find  symbol  eventsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(eventsInitialized.length);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(eventsInitialized.length);	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.length);    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	16	None	replace
326	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	81	1	replace
327	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	81	1	replace
328	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	81	1	replace
329	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	81	1	replace
330	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList()	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  ';'  expected	81	None	replace
331	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	Collection  <  EventState>  eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	47	1	replace
332	[BUG]  [BUGGY]  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Collection  <  EventState>  eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	47	1	replace
333	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  List  <  EventState>  eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	List  <  EventState>  eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	47	1	replace
334	[BUG]  [BUGGY]  List  <  EventState>  eventsStates  =  Collections.emptyList();  [FE]  NullPointerException  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  List  <  EventState>  eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	List  <  EventState>  eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	47	1	replace
335	[BUG]  [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>(events);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>(events);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  TreeMap  <  StepHandler>(events);	  stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
336	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
337	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
338	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
339	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
340	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	57	1	add
341	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  ArrayList  <  EventState>  steps  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  ArrayList  <  EventState>  steps  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    ArrayList  <  EventState>  steps  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  incompatible  types	20	None	add
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  AssertionError  	20	1	add
343	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;this.eventsStates  =  Collections.EMPTY_LIST;  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  AssertionError  	20	1	add
344	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  ArrayList  <  EventState>  events  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  ArrayList  <  EventState>  events  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    ArrayList  <  EventState>  events  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  incompatible  types	20	None	add
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers    =    new    TreeSet    <    StepHandler>();    	compilable	  [FE]  AssertionError  	5	1	replace
346	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers    =    new    TreeSet    <    StepHandler>();    	compilable	  [FE]  AssertionError  	5	1	replace
347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers    =    new    TreeSet    <    StepHandler>();    	compilable	  [FE]  AssertionError  	5	1	replace
348	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers    =    new    TreeSet    <    StepHandler>();    	compilable	  [FE]  AssertionError  	5	1	replace
349	[BUG]  [BUGGY]  This.stepHandlers  =  new  TreeMap  <  Incrementor>();  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  This.stepHandlers  =  new  TreeMap  <  Incrementor>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	This.stepHandlers  =  new  TreeMap  <  Incrementor>();	  this.stepHandlers    =    new    TreeMap    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  This	90	None	replace
350	[BUG]  [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [CE]  cannot  find  symbol  events  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name  ==  null)  {  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  events	86	None	replace
351	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [CE]  cannot  find  symbol  events  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  this.events  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.events    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  events	86	None	replace
352	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	45	1	replace
353	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	45	1	replace
354	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	45	1	replace
355	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	45	1	replace
356	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	45	1	replace
357	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	45	1	replace
358	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
359	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
360	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expansionable;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expansionable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expansionable;  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
361	[BUG]  [BUGGY]  this.events  =  Collections.EMPTY_LIST,  new  Incrementor();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Collections.EMPTY_LIST,  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Collections.EMPTY_LIST,  new  Incrementor();	  this.events    =    Collections.EMPTY_LIST.emptyList();    	non-compiled	[CE]  ';'  expected	74	None	replace
362	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	compilable	  [FE]  NullPointerException  	58	1	replace
363	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	compilable	  [FE]  NullPointerException  	58	1	replace
364	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expansionable;  this.expandable  =  expandable;  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expansionable;  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  expansionable;  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  expansionable	55	None	add
365	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  1);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	53	None	replace
366	[BUG]  [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>(events);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>(events);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  TreeList  <  StepHandler>(events);	  stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
367	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  appraisals.add(Integer.valueOf(name.charAt(0)));  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  appraisals.add(Integer.valueOf(name.charAt(0)));  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  appraisals.add(Integer.valueOf(name.charAt(0)));  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    appraisals    =    new    Incrementor();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
368	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  init();  }  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  init();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  init();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
369	[BUG]  [BUGGY]  Collection  <  Incrementor>  evaluations  =  new  Incrementor();  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Collection  <  Incrementor>  evaluations  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Collection  <  Incrementor>  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Collection    <    Incrementor>    evaluations    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	68	None	replace
370	[BUG]  [BUGGY]  int  evaluations  =  new  Incrementor();  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  int  evaluations  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	int  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Integer    evaluations    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	32	None	replace
371	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
372	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
373	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
374	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
375	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
376	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
377	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
378	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	59	1	add
379	[BUG]  [BUGGY]  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }  [CE]  cannot  find  symbol  expansionable  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations();  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	95	None	replace
380	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    steps    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>	80	None	replace
381	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    steps    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	80	1	replace
382	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();  }  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    steps    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	80	1	replace
383	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    ArrayList    <    EventState>    steps    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>	80	None	replace
384	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  ArrayList  <  Integer>  events  =  new  ArrayList  <  Integer>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	ArrayList  <  Integer>  events  =  new  ArrayList  <  Integer>();	  this.events    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  NullPointerException  	41	1	replace
385	[BUG]  [BUGGY]  ArrayList  <  Integer>  events  =  new  ArrayList  <  Integer>();  [FE]  NullPointerException  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  ArrayList  <  Integer>  events  =  new  ArrayList  <  Integer>();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	ArrayList  <  Integer>  events  =  new  ArrayList  <  Integer>();	  this.events    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  NullPointerException  	41	1	replace
386	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  collections  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  collections	44	None	add
387	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.instance();  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expansion  =  ExpandableStatefulODE.instance();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expansion  =  ExpandableStatefulODE.instance();	  this.expansion    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expansion	25	None	replace
388	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(this);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(this);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  new  ExpandableStatefulODE(this);	  this.expandable    =    new    ExpandableStatefulODE();    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	50	None	replace
389	[BUG]  [BUGGY]  this.events  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.events  =  Collections.  <  EventState>emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.events  =  Collections.  <  EventState>emptyList();	  this.events    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  events	36	None	replace
390	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Integer(name.intValue());  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Incrementor  evaluations  =  new  Integer(name.intValue());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Incrementor  evaluations  =  new  Integer(name.intValue());	  Incrementor    evaluations    =    new    Integer();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
391	[BUG]  [BUGGY]  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
392	[BUG]  [BUGGY]  Set  <  Incrementor>  stepHandlers  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  Set  <  Incrementor>  stepHandlers  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	Set  <  Incrementor>  stepHandlers  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
393	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  events  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  ArrayList  <  EventState>  events  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    ArrayList  <  EventState>  events  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  ArrayList<EventState>	42	None	add
394	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expandable  +  1);  [CE]  cannot  find  symbol  expr  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expandable  +  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  expandable  +  1);	  this.expr    =    ExpandableStatefulODE.create(name    +    1);    	non-compiled	[CE]  cannot  find  symbol  expr	3	None	replace
395	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluation  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluation  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluation  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)	30	None	add
396	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(eventsStates);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(eventsStates);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(eventsStates);	  StepHandlers    stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
397	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(events);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(events);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  TreeMap  <  StepHandler>(events);	  StepHandlers    stepHandlers    =    new    TreeMap    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
398	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(this.events.length);  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(this.events.length);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(this.events.length);	  stepHandlers    =    new    ArrayList    <    StepHandler>(events.length);    	non-compiled	[CE]  cannot  find  symbol  events	16	None	replace
399	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  expanable  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	93	None	add
400	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	93	None	add
401	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expansionable;  }  [CE]  cannot  find  symbol  expansionable  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expansionable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expansionable;  }	  	non-compiled	[CE]  cannot  find  symbol  expansionable	93	None	add
402	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(new  ArrayList  <  EventState>());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.eventsStates  =  Collections.synchronizedList(new  ArrayList  <  EventState>());	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	43	1	replace
403	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(new  ArrayList  <  EventState>());  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(new  ArrayList  <  EventState>());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.synchronizedList(new  ArrayList  <  EventState>());	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  NullPointerException  	43	1	replace
404	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(new  LinkedList  <  EventState>());  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(new  LinkedList  <  EventState>());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.eventsStates  =  Collections.synchronizedList(new  LinkedList  <  EventState>());	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
405	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  [CE]  cannot  find  symbol  assessments  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  assessments	31	None	replace
406	[BUG]  [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  [CE]  cannot  find  symbol  assessments  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	if(name!=  null)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  assessments	31	None	replace
407	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
408	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
409	[BUG]  [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  StepHandler  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  stepHandlers    =    new    TreeSet    <    StepHandler>();    stepHandlers  =  new  TreeSet  <  StepHandler>();  StepHandler  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	stepHandlers        =        new        TreeSet        <        StepHandler>();        stepHandlers    =    new    TreeSet    <    StepHandler>();    StepHandler  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  incompatible  types	4	None	add
410	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>(events);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>(events);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	StepHandlers  stepHandlers  =  new  TreeSet  <  StepHandler>(events);	  StepHandlers    stepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
411	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	add	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	compilable	  [FE]  NullPointerException  	94	1	replace
412	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	compilable	  [FE]  NullPointerException  	94	1	replace
413	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	94	None	replace
414	[BUG]  [BUGGY]  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [CE]  cannot  find  symbol  expansionable  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;      [BUGGY]  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	87	87	1	replace	this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	60	None	replace
