bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
2	[BUG]  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
3	[BUG]  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  UnsupportedOccurredException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  UnsupportedOccurredException( " ");  }  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  throw  new  UnsupportedOccurredException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
4	[BUG]  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  break;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  break;  }  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(final  IncrementError  exception  :  equations.values())  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
5	[BUG]  [BUGGY]    this.expandable  =  equations.elements();  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    this.expandable  =  equations.elements();  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    this.expandable  =  equations.elements();		non-compiled	[CE]  cannot  find  symbol	40	None	add
6	[BUG]  [BUGGY]  this.expandable  =  equations.expandable;  [CE]  cannot  find  symbol  expandable  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations.expandable;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations.expandable;	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol  expandable	39	None	replace
7	[BUG]  [BUGGY]  this.expandable  =  equations.equals(equations.size());  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations.equals(equations.size());  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations.equals(equations.size());	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol	39	None	replace
8	[BUG]  [BUGGY]  this.expandable  =  equations.elements;  [CE]  cannot  find  symbol  elements  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations.elements;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations.elements;	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol  elements	39	None	replace
9	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expan		non-compiled	[CE]  ')'  expected	40	None	add
10	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(expand		non-compiled	[CE]  ')'  expected	40	None	add
11	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equinoxes.get(i);  if(		non-compiled	[CE]  ')'  expected	40	None	add
12	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equiries.get(i);  if(expan  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equiries.get(i);  if(expan  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equiries.get(i);  if(expan		non-compiled	[CE]  ')'  expected	40	None	add
13	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalents.get(i);  if(expan  [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalents.get(i);  if(expan  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  expandable  =(ExpandableStatefulODE)equivalents.get(i);  if(expan		non-compiled	[CE]  ')'  expected	40	None	add
14	[BUG]  [BUGGY]  this.expandable  =  equations!=  null?  null  :  equations.expandable;  [CE]  cannot  find  symbol  expandable  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations!=  null?  null  :  equations.expandable;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations!=  null?  null  :  equations.expandable;	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol  expandable	39	None	replace
15	[BUG]  [BUGGY]  this.expandable  =  equations  ==  null?  null  :  equations.expandable;  [CE]  cannot  find  symbol  expandable  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations  ==  null?  null  :  equations.expandable;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations  ==  null?  null  :  equations.expandable;	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol  expandable	39	None	replace
16	[BUG]  [BUGGY]  this.expandable  =  equations  ==  null?  null  :  equations.values();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations  ==  null?  null  :  equations.values();  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations  ==  null?  null  :  equations.values();	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol	39	None	replace
17	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equinoxes.get(i);  if(  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equinoxes.get(i);  if(  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equinoxes.get(i);  if(		non-compiled	[CE]  ')'  expected	40	None	add
18	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equivalences.get(i);  if(  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equivalences.get(i);  if(  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equivalences.get(i);  if(		non-compiled	[CE]  ')'  expected	40	None	add
19	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equivalents.get(i);  if(  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equivalents.get(i);  if(  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equivalents.get(i);  if(		non-compiled	[CE]  ')'  expected	40	None	add
20	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)this.events.get(i);  if(  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)this.events.get(i);  if(  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)this.events.get(i);  if(		non-compiled	[CE]  ')'  expected	40	None	add
21	[BUG]  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equinoxes.get(i);  if  [CE]  '('  expected  [FE]            AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equinoxes.get(i);  if  [BUGGY]  this.expandable  =  equations;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	    if(equations!=  null)  {  for(int  i  =  0;  i  <  equations.size();  ++i)  {  ExpandableStatefulODE  equations  =(ExpandableStatefulODE)equinoxes.get(i);  if		non-compiled	[CE]  '('  expected	40	None	add
22	[BUG]  [BUGGY]  this.expandable  =  equations!=  null?  equations  :  new  ExpandableStatefulODE(equations.size());  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations!=  null?  equations  :  new  ExpandableStatefulODE(equations.size());  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations!=  null?  equations  :  new  ExpandableStatefulODE(equations.size());	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol	39	None	replace
23	[BUG]  [BUGGY]  this.expandable  =  equations!=  null?  equations  :  ExpandableStatefulODE.EMPTY;  [CE]  cannot  find  symbol  EMPTY  [FE]      AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations!=  null?  equations  :  ExpandableStatefulODE.EMPTY;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations!=  null?  equations  :  ExpandableStatefulODE.EMPTY;	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol  EMPTY	39	None	replace
24	[BUG]  [BUGGY]  this.expandable  =  equations  ==  ExpandableStatefulODE;  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]        AssertionError  [CONTEXT]  protected  void  setEquations(final  ExpandableStatefulODE  equations)  {  [BUGGY]  this.expandable  =  equations  ==  ExpandableStatefulODE;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setEquations  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  [VARIABLES]  ExpandableStatefulODE  equations  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	192	192	1	replace	this.expandable  =  equations  ==  ExpandableStatefulODE;	this.expandable  =  equations;  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	39	None	replace
