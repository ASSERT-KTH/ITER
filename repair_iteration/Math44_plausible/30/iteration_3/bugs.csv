bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extension.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extension.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extension.computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
3	[BUG]  [BUGGY]  luates.add(i,  expandableODE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luates.add(i,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(i,  expandableODE);	  luates.add(i,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
4	[BUG]  [BUGGY]  luates.add(expandable,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luates.add(expandable,  i);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(expandable,  i);	  luates.add(i,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
5	[BUG]  [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansionable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	70	None	replace
6	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansionable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	70	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expansion[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expansion[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  expansion[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
11	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  expandable,  y);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandable,  y);	  evaluateDerivatives(t,    expandable,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  y,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  expandable,  y,  t);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandable,  y,  t);	  evaluateDerivatives(t,    expandable,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  validateDerivatives(t,  expandable,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  validateDerivatives(t,  expandable,  y);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	validateDerivatives(t,  expandable,  y);	  evaluateDerivatives(t,    expandable,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable,  i  +  1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable,  i  +  1);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i  +  1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i  +  1);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  2);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  2);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  2);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
21	[BUG]  [BUGGY]  evaluates.add(i,  expandableODE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(i,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(i,  expandableODE);	  evaluates.add(i,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  evaluates.add(expandable,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(expandable,  i);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(expandable,  i);	  evaluates.add(i,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  EscapingStrategy.checkState(expandable!=  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  EscapingStrategy.checkState(expandable!=  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expandable!=  null);	  EscapingStrategy.checkState(expansions    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  EscapingStrategy.checkState(expandable  ==  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  EscapingStrategy.checkState(expandable  ==  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expandable  ==  null);	  EscapingStrategy.checkState(expansions    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  Integer  y  =  evaluations.get(y);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluations.get(y);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluations.get(y);	  Integer    y    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
26	[BUG]  [BUGGY]  Integer  y  =  evaluations.get(yDot);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluations.get(yDot);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluations.get(yDot);	  Integer    y    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
27	[BUG]  [BUGGY]  Integer  y  =  evaluations.get(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluations.get(0);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluations.get(0);	  Integer    y    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
28	[BUG]  [BUGGY]  Integer  y  =  evaluates.get(y);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluates.get(y);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluates.get(y);	  Integer    y    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansion[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansion[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansion[i],  expandable,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expanse[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandableODE,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandableODE,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandableODE,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expanse[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1,  isLastStep);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1,  isLastStep);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1,  isLastStep);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
36	[BUG]  [BUGGY]  For(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  '.class'  expected	33	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
41	[BUG]  [BUGGY]  luate(t,  y,  yDot,  expandable);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luate(t,  y,  yDot,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luate(t,  y,  yDot,  expandable);	  luate(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
42	[BUG]  [BUGGY]  luate(t,  y,  expandable);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luate(t,  y,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luate(t,  y,  expandable);	  luate(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  luate(t,  y,  yDot,  expansion);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luate(t,  y,  yDot,  expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luate(t,  y,  yDot,  expansion);	  luate(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  null);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  null);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	38	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	38	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	7	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
52	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	60	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanded[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanded[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanded[i],  expandable,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  evaluateDerivatives(t,  expansionable,  y,  yDot);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  expansionable,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expansionable,  y,  yDot);	  evaluateDerivatives(t,    expandable,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  expandableODE,  yDot);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  y,  expandableODE,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  expandableODE,  yDot);	  evaluateDerivatives(t,    expandable,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
67	[BUG]  [BUGGY]  Context.checkState(expansions!=  null);  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Context.checkState(expansions!=  null);  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Context.checkState(expansions!=  null);  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  expanse[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
72	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	88	None	replace
73	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	88	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  yDot[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
76	[BUG]  [BUGGY]  Context.checkState(expansions!=  null);  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Context.checkState(expansions!=  null);  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Context.checkState(expansions!=  null);  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  x[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  x[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  x[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    x[i],    x[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    x[i],    x[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
80	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    x[i],    x[i]);    }    	non-compiled	[CE]  '.class'  expected	74	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
82	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	100	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
86	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	22	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansion[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansion[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansion[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    	non-compiled	[CE]  >  expected	72	None	replace
89	[BUG]  [BUGGY]  null  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  null  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	null  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    	non-compiled	[CE]  not  a  statement	72	None	replace
90	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    	non-compiled	[CE]  >  expected	72	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
92	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	68	None	replace
93	[BUG]  [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	68	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expanded[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expanded[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
101	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  >  expected	41	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
105	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	58	None	replace
106	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  >  expected	54	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	37	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
109	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  >  expected	67	None	replace
110	[BUG]  [BUGGY]  null  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  null  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	null  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  not  a  statement	67	None	replace
111	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  yDot,  expandable);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  expandable,  yDot,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandable,  yDot,  expandable);	  evaluateDerivatives(t,    y,    yDot,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
112	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  yDot,  expandableODE);	  evaluateDerivatives(t,    y,    yDot,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
113	[BUG]  [BUGGY]  Integer  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  >  expected	106	None	replace
114	[BUG]  [BUGGY]  null  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  null  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	null  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  not  a  statement	106	None	replace
115	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  >  expected	106	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot,  isLastStep);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot,  isLastStep);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot,  isLastStep);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]!=    ')'    	non-compiled	[CE]  ')'  expected	39	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]!=  ')'  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]!=  ')'  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]!=  ')'	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]!=    ')'    	non-compiled	[CE]  ')'  expected	39	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  ')'  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  ')'  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  ')'	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]!=    ')'    	non-compiled	[CE]  ')'  expected	39	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  ==  ')'  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  ==  ')'  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  ==  ')'	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]!=    ')'    	non-compiled	[CE]  ')'  expected	39	None	replace
122	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluationsInitialized();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  getEvaluationsInitialized();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  getEvaluationsInitialized();	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
123	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[0]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[0]);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
124	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(evaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(evaluations);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
125	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	56	None	replace
126	[BUG]  [BUGGY]  Integrator  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integrator  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integrator  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	56	None	replace
127	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  expandableODE);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  y,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  expandableODE);	  evaluateDerivatives(t,    y,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
128	[BUG]  [BUGGY]  validateDerivatives(t,  y,  expandable);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  validateDerivatives(t,  y,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	validateDerivatives(t,  y,  expandable);	  evaluateDerivatives(t,    y,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expansion[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expansion[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expansion[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot,  isLastStep);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot,  isLastStep);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot,  isLastStep);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
135	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    yDot);    }    	non-compiled	[CE]  >  expected	25	None	replace
136	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	5	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
139	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  >  expected	24	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
141	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	23	None	replace
142	[BUG]  [BUGGY]  Evaluations.incrementCount(expandable.computeDerivatives(t,  y,  yDot));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.incrementCount(expandable.computeDerivatives(t,  y,  yDot));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount(expandable.computeDerivatives(t,  y,  yDot));	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
143	[BUG]  [BUGGY]  Evaluations.incrementCount(expandable.computeDerivatives(t,  y,  yDot),  maxCheckInterval);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.incrementCount(expandable.computeDerivatives(t,  y,  yDot),  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount(expandable.computeDerivatives(t,  y,  yDot),  maxCheckInterval);	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
144	[BUG]  [BUGGY]  Evaluations.incrementCount(expandable.calculateDerivatives(t,  y,  yDot));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.incrementCount(expandable.calculateDerivatives(t,  y,  yDot));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount(expandable.calculateDerivatives(t,  y,  yDot));	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
145	[BUG]  [BUGGY]  Integer  y  =  evaluates.get(yDot);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluates.get(yDot);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluates.get(yDot);	  Integer    y    =    evaluates.get(i);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
146	[BUG]  [BUGGY]  Integer  y  =  evaluates.get(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluates.get(0);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluates.get(0);	  Integer    y    =    evaluates.get(i);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
147	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	103	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
150	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	21	None	replace
151	[BUG]  [BUGGY]  luates.add(t,  expandableODE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luates.add(t,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(t,  expandableODE);	  luates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
156	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  '.class'  expected	98	None	replace
157	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandableODE,  i);  }  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandableODE,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandableODE,  i);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  '.class'  expected	98	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i,    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i,    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i,  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i,  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i,  expandableODE);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i,    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
171	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  x[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0,    isLastStep    =    expandable.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep  +  1;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep  +  1;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep  +  1;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep    =    expandable.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expandableODE.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  expandableODE.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expandableODE.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep    =    expandable.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  x[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  x[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  x[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  x[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  x[i],  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  x[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    y.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
182	[BUG]  [BUGGY]  For(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    y.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  '.class'  expected	105	None	replace
183	[BUG]  [BUGGY]  For(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable);  }  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    y.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  '.class'  expected	105	None	replace
184	[BUG]  [BUGGY]  Integer  i  =  evaluations.get(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.get(0);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.get(0);	  Integer    i    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
185	[BUG]  [BUGGY]  Integer  i  =  evaluations.get(y);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.get(y);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.get(y);	  Integer    i    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
186	[BUG]  [BUGGY]  Integer  i  =  evaluations.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.get(i  +  1);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.get(i  +  1);	  Integer    i    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isFirstStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isFirstStep;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isFirstStep;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isFirstStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isFirstStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0,  isCount  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isCount  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isCount  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isFirstStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expansionable);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expansionable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expansionable);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
192	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [CE]  '.class'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expansionable);    }    	non-compiled	[CE]  '.class'  expected	96	None	replace
193	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
194	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	  for(int    i    =    0,    isLastStep    =    yDot.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
195	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep  +  1;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep  +  1;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep  +  1;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	  for(int    i    =    0,    isLastStep    =    yDot.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	  for(int    i    =    0,    isLastStep    =    yDot.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandableODE);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
198	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	52	None	replace
199	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	71	None	replace
200	[BUG]  [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	71	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isFirstStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
205	[BUG]  [BUGGY]  if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	113	None	replace
206	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	1	None	replace
207	[BUG]  [BUGGY]  double  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  double  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	double  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
208	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
209	[BUG]  [BUGGY]  null  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  null  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	null  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  not  a  statement	69	None	replace
210	[BUG]  [BUGGY]  Integer[]  evaluations  =  expandedable.getEvaluations();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  expandedable.getEvaluations();  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  expandedable.getEvaluations();	  Integer[]    evaluations    =    expandable.getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
211	[BUG]  [BUGGY]  Integer[]  evaluations  =  expansionable.getEvaluations();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  expansionable.getEvaluations();  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  expansionable.getEvaluations();	  Integer[]    evaluations    =    expandable.getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluates.add(i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluates.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluates.add(i);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
216	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  >  expected	43	None	replace
217	[BUG]  [BUGGY]  validateDerivatives(t,  y,  expandable,  yDot);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  validateDerivatives(t,  y,  expandable,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	validateDerivatives(t,  y,  expandable,  yDot);	  evaluateDerivatives(t,    y,    expandable,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
218	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  expansionable,  yDot);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  y,  expansionable,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  expansionable,  yDot);	  evaluateDerivatives(t,    y,    expandable,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
220	[BUG]  [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	66	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansion[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansion[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansion[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
225	[BUG]  [BUGGY]  Integer  i  =  evaluations.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.size()  +  1;  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.size()  +  1;	  Integer    i    =    evaluations.size();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
226	[BUG]  [BUGGY]  Integer  i  =  evaluations.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.size()  -  1;  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.size()  -  1;	  Integer    i    =    evaluations.size();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
227	[BUG]  [BUGGY]  Integer  i  =  evaluations.size()  -  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.size()  -  2;  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.size()  -  2;	  Integer    i    =    evaluations.size();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
228	[BUG]  [BUGGY]  EscapingStrategy.checkState(expansions  >=  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  EscapingStrategy.checkState(expansions  >=  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expansions  >=  null);	  EscapingStrategy.checkState(expansions!=    null);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
229	[BUG]  [BUGGY]  evaluates.add(t,  expandableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(t,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(t,  expandableODE);	  evaluates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
230	[BUG]  [BUGGY]  evaluates.add(t,  expandable,  yDot);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(t,  expandable,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(t,  expandable,  yDot);	  evaluates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
231	[BUG]  [BUGGY]  evaluates.add(t,  expandable,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(t,  expandable,  y);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(t,  expandable,  y);	  evaluates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
232	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    0;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
233	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isFirstStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    0;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
234	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  >  expected	9	None	replace
235	[BUG]  [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	68	None	replace
236	[BUG]  [BUGGY]  Integer  y  =  evaluations.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluations.get(i  +  1);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluations.get(i  +  1);	  Integer    y    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i  +  1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i  +  1);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
238	[BUG]  [BUGGY]  Evaluations.incrementCount(expable);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.incrementCount(expable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount(expable);	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
239	[BUG]  [BUGGY]  Evaluations.incrementCount(expansion);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.incrementCount(expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount(expansion);	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
240	[BUG]  [BUGGY]  Evaluations.incrementCount(expandable);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.incrementCount(expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount(expandable);	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
241	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	20	None	replace
242	[BUG]  [BUGGY]  Integer  i  =  evaluations.get(expable);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.get(expable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.get(expable);	  Integer    i    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
243	[BUG]  [BUGGY]  Integer  i  =  evaluations.get(expansion);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluations.get(expansion);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.get(expansion);	  Integer    i    =    evaluations.get(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
244	[BUG]  [BUGGY]  luate(t,  expandable,  yDot);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luate(t,  expandable,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luate(t,  expandable,  yDot);	  luate(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
245	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  yDot,  expansionable);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  expandable,  yDot,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandable,  yDot,  expansionable);	  evaluateDerivatives(t,    y,    yDot,    expansionable);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
246	[BUG]  [BUGGY]  if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }	  if(expable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	113	None	replace
247	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
248	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanded[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanded[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanded[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
249	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	52	None	replace
250	[BUG]  [BUGGY]  luates.add(i,  expansionable);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luates.add(i,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(i,  expansionable);	  luates.add(i,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
251	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[reversed.size()  ]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[reversed.size()  ]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[reversed.size()  ]);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
252	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  arrays.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  arrays.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  arrays.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
253	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
255	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  yDot[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanse[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanse[i],  yDot[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanse[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expandableODE);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  expandableODE);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
260	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	44	None	replace
261	[BUG]  [BUGGY]  Integer[]  evaluations  =  equations.getEvaluations();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  equations.getEvaluations();  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  equations.getEvaluations();	  Integer[]    evaluations    =    expandable.getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
262	[BUG]  [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	66	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
264	[BUG]  [BUGGY]  EscapingStrategy.checkState(expable!=  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  EscapingStrategy.checkState(expable!=  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expable!=  null);	  EscapingStrategy.checkState(expansions    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
265	[BUG]  [BUGGY]  EscapingStrategy.checkState(expable  ==  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  EscapingStrategy.checkState(expable  ==  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expable  ==  null);	  EscapingStrategy.checkState(expansions    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
266	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	2	None	replace
267	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  expansionable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expansionable);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
268	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
269	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandedable,  y,  yDot);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  expandedable,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandedable,  y,  yDot);	  evaluateDerivatives(t,    expandable,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
271	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  yDot);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  yDot);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
274	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
275	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendedable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendedable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendedable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
276	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extension.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extension.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extension.computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
277	[BUG]  [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansionable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	70	None	replace
278	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	55	None	replace
279	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  '.class'  expected	41	None	replace
280	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
281	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  ExpandableStatefulODE[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  ExpandableStatefulODE[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  ExpandableStatefulODE[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
282	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionableODE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionableODE);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isFirstStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isFirstStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
284	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expansionable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	3	None	replace
285	[BUG]  [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	71	None	replace
286	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	101	None	replace
287	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	101	None	replace
288	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expansionable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expansionable[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expansionable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expanded[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
289	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  >  expected	10	None	replace
290	[BUG]  [BUGGY]  Integer  y  =  evaluates.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  y  =  evaluates.get(i  +  1);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluates.get(i  +  1);	  Integer    y    =    evaluates.get(i);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  expandable,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
292	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  expandable,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
293	[BUG]  [BUGGY]  luateDerivatives(t,  y[i],  expandable,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luateDerivatives(t,  y[i],  expandable,  i  +  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luateDerivatives(t,  y[i],  expandable,  i  +  1);	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
294	[BUG]  [BUGGY]  luateDerivatives(t,  y,  expandable,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luateDerivatives(t,  y,  expandable,  i  +  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luateDerivatives(t,  y,  expandable,  i  +  1);	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
295	[BUG]  [BUGGY]  Integer  i  =  evaluateDerivatives.values().get(expansion);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer  i  =  evaluateDerivatives.values().get(expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluateDerivatives.values().get(expansion);	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  xx[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  xx[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  xx[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
297	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    	non-compiled	[CE]  >  expected	72	None	replace
298	[BUG]  [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    	non-compiled	[CE]  >  expected	72	None	replace
299	[BUG]  [BUGGY]  evaluates.add(expable,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(expable,  i);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(expable,  i);	  evaluates.add(i,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
300	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
301	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep  +  2;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep  +  2;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep  +  2;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep    =    expandable.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
303	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expansionable[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
305	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  y;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  y;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  y;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  y);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  y);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  y);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
307	[BUG]  [BUGGY]  evaluates.add(t,  expansionable);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(t,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(t,  expansionable);	  evaluates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
308	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	38	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  y);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  y);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  y);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    y.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    y.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
311	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandableODE,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandableODE,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandableODE,  i);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
312	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  >  expected	106	None	replace
313	[BUG]  [BUGGY]  int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isFirstStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  >  expected	106	None	replace
314	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  >  expected	29	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandedable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandedable[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandedable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
316	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	37	None	replace
317	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
318	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	  For(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	56	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
320	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  extendable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	71	None	replace
321	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    extendable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	71	None	replace
322	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
323	[BUG]  [BUGGY]  EscapingStrategy.checkState(expansions  ==  null,  expansionable);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  EscapingStrategy.checkState(expansions  ==  null,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expansions  ==  null,  expansionable);	  EscapingStrategy.checkState(expansions    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
324	[BUG]  [BUGGY]  EscapingStrategy.checkState(expansions!=  null,  expansionable);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  EscapingStrategy.checkState(expansions!=  null,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expansions!=  null,  expansionable);	  EscapingStrategy.checkState(expansions!=    null);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
325	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
326	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  expansionable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
327	[BUG]  [BUGGY]  int  i  =  0,  isPreviousStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isPreviousStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isPreviousStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  >  expected	106	None	replace
328	[BUG]  [BUGGY]  luate(t,  y,  yDot,  expansionable);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luate(t,  y,  yDot,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luate(t,  y,  yDot,  expansionable);	  luate(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
329	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1,  isLastStep);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1,  isLastStep);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1,  isLastStep);  }	  for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
330	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    	non-compiled	[CE]  >  expected	72	None	replace
331	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    	non-compiled	[CE]  >  expected	72	None	replace
332	[BUG]  [BUGGY]  if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expansionable);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
333	[BUG]  [BUGGY]  if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expansionable);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
334	[BUG]  [BUGGY]  if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expansionable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansionable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expansionable);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
335	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  null);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  null);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
336	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandableODE,  yDot);  }	  for(int    i    =    0,    isLastStep    =    yDot.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
337	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expansionable,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expansionable,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expansionable,  yDot);  }	  for(int    i    =    0,    isLastStep    =    yDot.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
338	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	68	None	replace
339	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansion.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	68	None	replace
340	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  evaluations.add(i);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
342	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  expansionable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  expansionable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  new  Double(yDot.doubleValue()));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  new  Double(yDot.doubleValue()));  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  new  Double(yDot.doubleValue()));  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
344	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
345	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
346	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionableODE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionableODE);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
347	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  expandable[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  expandable[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  expandable[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
348	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  >  expected	103	None	replace
349	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
350	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  2;  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  2;  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  2;  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
351	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[reverseable.size()  ]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[reverseable.size()  ]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[reverseable.size()  ]);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
352	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
353	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
354	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1,  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1,  expansionable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1,  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
355	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1,  expandable);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1,  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1,  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
356	[BUG]  [BUGGY]  evaluates.remove(t,  expandable);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.remove(t,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.remove(t,  expandable);	  evaluates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expansionable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  expansionable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expansionable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep    =    expandable.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
358	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expansionable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansionable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	70	None	replace
359	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expansionable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	70	None	replace
360	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i  +  1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i  +  1);  }	  for(int    i    =    0,    isLastStep    =    0;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
361	[BUG]  [BUGGY]  evaluates.add(new  ExpandableStatefulODE(t,  y,  yDot));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluates.add(new  ExpandableStatefulODE(t,  y,  yDot));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(new  ExpandableStatefulODE(t,  y,  yDot));	  evaluates.add(i,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
364	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot,  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot,  expansionable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot,  expansionable);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
365	[BUG]  [BUGGY]  luates.add(t,  expansionable);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luates.add(t,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(t,  expansionable);	  luates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
366	[BUG]  [BUGGY]  luates.add(t,  expansionableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  luates.add(t,  expansionableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(t,  expansionableODE);	  luates.add(t,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
367	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  expandable,  yDot,  evaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  y,  expandable,  yDot,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  expandable,  yDot,  evaluations);	  evaluateDerivatives(t,    y,    expandable,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
368	[BUG]  [BUGGY]  Evaluations.incrementCount(expandeable);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.incrementCount(expandeable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount(expandeable);	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
369	[BUG]  [BUGGY]  Evaluations.init();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  Evaluations.init();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.init();	  Evaluations.incrementCount();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
370	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  >  expected	67	None	replace
371	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    	non-compiled	[CE]  >  expected	67	None	replace
372	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	38	None	replace
373	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    y.length;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
374	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
375	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
376	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
377	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandedable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
378	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
379	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot,  i);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
380	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  size[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  size[i],  expandable,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  size[i],  expandable,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
381	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
382	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i],  expandable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expanded[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
383	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i],  expandableODE);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i],  expandableODE);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    expanded[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
384	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  expandableODE,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  expandableODE,  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  expandableODE,  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandableODE);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
385	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  >  expected	37	None	replace
386	[BUG]  [BUGGY]  if(expansion!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansion!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansion!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
387	[BUG]  [BUGGY]  if(expable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	113	None	replace
388	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
389	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  expanse[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  expanse[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  expanse[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
390	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  y,  yDot,  evaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  evaluateDerivatives(t,  expandable,  y,  yDot,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandable,  y,  yDot,  evaluations);	  evaluateDerivatives(t,    expandable,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
391	[BUG]  [BUGGY]  validateDerivatives(t,  expandable,  y,  yDot);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  validateDerivatives(t,  expandable,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	validateDerivatives(t,  expandable,  y,  yDot);	  evaluateDerivatives(t,    expandable,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
392	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(y,  i);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  1;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expansionable);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
394	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
395	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	  for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    expandable[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
396	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0,    isLastStep    =    2;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
397	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expansionable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
398	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandedable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i],  expandable);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
400	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expanse[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expanse[i]);  }  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expanse[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    expanse[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
401	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep  +  1;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	66	None	replace
402	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);      [BUGGY]  int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	66	None	replace
