bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	12	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [CE]  '.class'  expected  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  '.class'  expected	5	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  expandable,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  evaluates.add(i,  expandable);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluates.add(i,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(i,  expandable);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  EscapingStrategy.checkState(expansions!=  null);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  EscapingStrategy.checkState(expansions!=  null);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expansions!=  null);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  luate(t,  y,  yDot);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  luate(t,  y,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luate(t,  y,  yDot);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  EscapingStrategy.checkState(expansions  ==  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  EscapingStrategy.checkState(expansions  ==  null);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	EscapingStrategy.checkState(expansions  ==  null);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  yDot,  expandable);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  yDot);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluateDerivatives(t,  expandable,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandable,  yDot);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  expandable);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluateDerivatives(t,  y,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  expandable);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  y,  yDot);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluateDerivatives(t,  expandable,  y,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  expandable,  y,  yDot);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	11	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandableODE);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluates.add(i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isFirstStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	9	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
38	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]!=  ')'  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]!=  ')'  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]!=  ')'	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  '.class'  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  '.class'  expected	3	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  '.class'  expected  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  '.class'  expected	3	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  expandable.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  yDot.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	6	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  '.class'  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	6	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
56	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  For(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	For(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	2	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expandable[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  2;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	8	None	replace
67	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	8	None	replace
68	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansion.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	8	None	replace
69	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  expandable.computeDerivatives(t,  y[i],  y[i]);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
70	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expansionable.computeDerivatives(y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	9	None	replace
71	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	9	None	replace
72	[BUG]  [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  >  expected	9	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  x[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  x[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  x[i],  x[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  luates.add(i,  expandable);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  luates.add(i,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(i,  expandable);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  Evaluations.incrementCount();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  Evaluations.incrementCount();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Evaluations.incrementCount();	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
77	[BUG]  [BUGGY]  if(expansions  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
80	[BUG]  [BUGGY]  Integer  y  =  evaluations.get(i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  Integer  y  =  evaluations.get(i);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluations.get(i);	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  Integer[]  evaluations  =  expandable.getEvaluations();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  Integer[]  evaluations  =  expandable.getEvaluations();  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  expandable.getEvaluations();	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
82	[BUG]  [BUGGY]  Integer  i  =  evaluations.size();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  Integer  i  =  evaluations.size();  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.size();	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
83	[BUG]  [BUGGY]  Integer  i  =  evaluations.get(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  Integer  i  =  evaluations.get(i);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  i  =  evaluations.get(i);	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
84	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  Integer[]  evaluations  =  getEvaluations();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer[]  evaluations  =  getEvaluations();	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  Integer  y  =  evaluates.get(i);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  Integer  y  =  evaluates.get(i);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	Integer  y  =  evaluates.get(i);	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  expanse[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandable,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandable,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expanse[i],  expandable,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  expanded[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  x[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  x[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
92	[BUG]  [BUGGY]  luates.add(t,  expandable);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  luates.add(t,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	luates.add(t,  expandable);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
93	[BUG]  [BUGGY]  evaluates.add(t,  expandable);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluates.add(t,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluates.add(t,  expandable);	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluates.add(i,    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
94	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
95	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
96	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  y[i],  y[i],  expansionable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
97	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
98	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable,  i  +  1);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  computeDerivatives(t,  expandable[i],  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    computeDerivatives(t,    y[i],    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
101	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
102	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
103	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
104	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
105	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0,  isLastStep  =  y.length;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
106	[BUG]  [BUGGY]  int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    i++)    {    evaluateDerivatives(t,    y[i],    expandable);    }    	non-compiled	[CE]  >  expected	4	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  0;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    expandable.computeDerivatives(y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i,  expandableODE);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	for(int  i  =  0,  isLastStep  =  1;  i  <  isLastStep;  i++)  {  evaluations.add(i  +  1);  }	      if(expansions!=    null)    {    for(int    i    =    0,    isLastStep    =    1;    i    <    isLastStep;    i++)    {    evaluations.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  expandable,  yDot);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluateDerivatives(t,  y,  expandable,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  expandable,  yDot);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
111	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionable);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	evaluateDerivatives(t,  y,  yDot,  expansionable);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  computeDerivatives(t,  y[i],  yDot[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
113	[BUG]  [BUGGY]  if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(expable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
114	[BUG]  [BUGGY]  if(evaluators!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);    [BUGGY]  if(evaluators!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	251	251	1	replace	if(evaluators!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	16	None	replace
