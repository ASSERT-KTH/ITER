bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]    evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  cannot  find  symbol  evaluates  [FE]    AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);		non-compiled	[CE]  cannot  find  symbol  evaluates	34	None	add
5	[BUG]  [BUGGY]    evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  cannot  find  symbol  evaluates  [FE]      AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;		non-compiled	[CE]  cannot  find  symbol  evaluates	34	None	add
6	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }		non-compiled	[CE]  illegal  start  of  expression	34	None	add
7	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }		non-compiled	[CE]  illegal  start  of  expression	34	None	add
8	[BUG]  [BUGGY]    evaluates.setMaximalCount((  maxEvaluations  <  =  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    evaluates.setMaximalCount((  maxEvaluations  <  =  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    evaluates.setMaximalCount((  maxEvaluations  <  =  0)?  Integer.MAX_VALUE  :  maxEvaluations);		non-compiled	[CE]  illegal  start  of  expression	34	None	add
9	[BUG]  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }		non-compiled	[CE]  cannot  find  symbol	34	None	add
10	[BUG]  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }		non-compiled	[CE]  cannot  find  symbol	34	None	add
11	[BUG]  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }		non-compiled	[CE]  cannot  find  symbol	34	None	add
12	[BUG]  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  }  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  }		non-compiled	[CE]  cannot  find  symbol	34	None	add
13	[BUG]  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	    if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  }		non-compiled	[CE]  cannot  find  symbol	34	None	add
14	[BUG]  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
15	[BUG]  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
16	[BUG]  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  }  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
17	[BUG]  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]  if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  }  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable)  {  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  }	}  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
