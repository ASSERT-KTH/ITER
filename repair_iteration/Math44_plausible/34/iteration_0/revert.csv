projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279finaldoublecurrentT=interpolator.getGlobalCurrentTime();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279finaldoublecurrentT=interpolator.getPreviousTime();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279finaldoublecurrentT=interpolator.getNextTime();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279finaldoublecurrentT=interpolator.getNext();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279finaldoublecurrentT=previousT.getGlobalCurrentTime();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279Iteratoriterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279Preconditions.checkState(previousT==null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279Preconditions.checkState(previousT!=null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279finaldouble[]eventsInitialized=getEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279Preconditions.checkState(previousT==t);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279finaldoublecurrentT=interpolator.getGlobalPreviousTime();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279Preconditions.checkNotNull(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279Preconditions.checkState(previousT>=tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279if(previousT>tEnd){if(!state.isInitialized){state.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279if(previousT>tEnd){for(EventStatecurrentEvent:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279if(previousT>tEnd){if(!state.isInitialized){state.reinitializeBegin(previousT);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279if(previousT>tEnd){for(EventStatecurrentEvent:eventsStates){eventStates.add(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java279if(previousT>tEnd){for(EventStatecurrentEvent:eventsStates){eventStates.add(currentEvent);}
