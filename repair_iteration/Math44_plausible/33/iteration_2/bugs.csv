bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getGlobalCurrentTime();  [CE]  cannot  assign  a  value  to  final  variable  previousT  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  double  previousT  =  interpolator.getGlobalCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getGlobalCurrentTime();	  final    double    previousT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  previousT	1	None	replace
2	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  [CE]  cannot  assign  a  value  to  final  variable  previousT  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getPreviousTime();	  final    double    previousT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  previousT	1	None	replace
3	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getCurrentTime();  [CE]  cannot  assign  a  value  to  final  variable  previousT  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  double  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getCurrentTime();	  final    double    previousT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  previousT	1	None	replace
4	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getPreviousCurrentTime();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  double  previousT  =  interpolator.getPreviousCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getPreviousCurrentTime();	  final    double    previousT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
5	[BUG]  [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  stepHandlers.iterator();	      Iterator    iterator    =    this.stepHandlers.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	15	None	replace
6	[BUG]  [BUGGY]  Iterator  iterator  =  this.stepHandlers.values().iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  iterator  =  this.stepHandlers.values().iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  this.stepHandlers.values().iterator();	      Iterator    iterator    =    this.stepHandlers.iterator();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
7	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [CE]  cannot  find  symbol  events  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  this.events.iterator();	      Iterator    <    EventState>    iterator    =    events.iterator();    	non-compiled	[CE]  cannot  find  symbol  events	17	None	replace
8	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  this.eventsStates.iterator();	      Iterator    <    EventState>    iterator    =    events.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	17	None	replace
9	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.stepHandlers.iterator();  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  this.stepHandlers.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  this.stepHandlers.iterator();	      Iterator    <    EventState>    iterator    =    events.iterator();    	non-compiled	[CE]  incompatible  types	17	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	add	double  previousT  =  interpolator.getPreviousTime()  +  1;	  double    previousT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	3	1	replace
11	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousTime()  +  1;	  double    previousT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	3	1	replace
12	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getCurrentTime();    double  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
13	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  final  double  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  final  double  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getCurrentTime();    final  double  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
14	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  Double  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  Double  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getCurrentTime();    Double  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
15	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  int  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  int  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getCurrentTime();    int  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
16	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interpolator.getCurrentSize();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interpolator.getCurrentSize();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getCurrentTime();    double  previousT  =  interpolator.getCurrentSize();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
17	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime();    double  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	add
18	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime();    final  double  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	add
19	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  Double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  Double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime();    Double  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	add
20	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  int  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  int  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime();    int  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	add
21	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interpolator.getNextTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interpolator.getNextTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime();    double  previousT  =  interpolator.getNextTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	add
22	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  this.eventsStates.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  E>  iterator  =  this.eventsStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  this.eventsStates.iterator();	      Iterator    <    E>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
23	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  events.iterator();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  E>  iterator  =  events.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  events.iterator();	      Iterator    <    E>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
24	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  eventStates.iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  E>  iterator  =  eventStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  eventStates.iterator();	      Iterator    <    E>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
25	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;	  double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
26	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousCurrentTime();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Double  previousT  =  interpolator.getPreviousCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousCurrentTime();	  double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
27	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNext();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getNext();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getNext();	  double    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
28	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTTime();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getCurrentTTime();	  double    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
29	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  -  1;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  -  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSign()  -  1;	  double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
30	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  +  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSign()  +  1;	  double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
31	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNextSign();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getNextSign();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getNextSign();	  double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
32	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  -  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  -  1;	  double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
33	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  +  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  +  1;	  double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
34	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  2;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  2;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  /  2;	  double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
35	[BUG]  [BUGGY]  Iterator  iterator  =  otherEvents.iterator();  [CE]  cannot  find  symbol  otherEvents  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  iterator  =  otherEvents.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  otherEvents.iterator();	      Iterator    iterator    =    this.events.iterator();    	non-compiled	[CE]  cannot  find  symbol  otherEvents	11	None	replace
36	[BUG]  [BUGGY]  state.reinitializeBegin(interpolator);  [CE]  cannot  find  symbol  state  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  state.reinitializeBegin(interpolator);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(interpolator);	      	non-compiled	[CE]  cannot  find  symbol  state	7	None	replace
37	[BUG]  [BUGGY]  State  state  =  currentEvent.getState();  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  State  state  =  currentEvent.getState();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	State  state  =  currentEvent.getState();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
38	[BUG]  [BUGGY]  state.reinitializeBegin(currentT);  [CE]  cannot  find  symbol  currentT  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  state.reinitializeBegin(currentT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(currentT);	      	non-compiled	[CE]  cannot  find  symbol  currentT	7	None	replace
39	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSize();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Double  previousT  =  interpolator.getPreviousSize();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSize();	  double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
40	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  stepHandlers.iterator();  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  stepHandlers.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  stepHandlers.iterator();	      Iterator    <    EventState>    iterator    =    events.iterator();    	non-compiled	[CE]  incompatible  types	17	None	replace
41	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  eventStates.iterator();  [CE]  cannot  find  symbol  eventStates  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  eventStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  eventStates.iterator();	      Iterator    <    EventState>    iterator    =    events.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventStates	17	None	replace
42	[BUG]  [BUGGY]  double  previousT  =  this.interpolator.getPreviousCurrentTime();  [CE]  cannot  find  symbol  interpolator  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  this.interpolator.getPreviousCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  this.interpolator.getPreviousCurrentTime();	  double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	13	None	replace
43	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interface.getPreviousTime();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interface.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime();    double  previousT  =  interface.getPreviousTime();	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
44	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSign();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Double  previousT  =  interpolator.getPreviousSign();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSign();	  double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
45	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  stepHandlers.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  E>  iterator  =  stepHandlers.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  stepHandlers.iterator();	      Iterator    <    E>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
46	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  eventsStates.values().iterator();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  E>  iterator  =  eventsStates.values().iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  eventsStates.values().iterator();	      Iterator    <    E>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
47	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousT();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousT();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousT();	  double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
48	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interface.getCurrentTime();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interface.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getCurrentTime();    double  previousT  =  interface.getCurrentTime();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
49	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventsStates.values().iterator();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  iterator  =  this.eventsStates.values().iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  this.eventsStates.values().iterator();	      Iterator    iterator    =    this.eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
50	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTTime();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousTTime();	  double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
51	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  currentT  =  interpolator.getGlobalPreviousTime();	  final    double    previousT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	replace
52	[BUG]  [BUGGY]  Iterator  iterator  =  events.events.iterator();  [CE]  package  events  does  not  exist  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  iterator  =  events.events.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  events.events.iterator();	      Iterator    iterator    =    this.events.iterator();    	non-compiled	[CE]  package  events  does  not  exist	11	None	replace
53	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventHandlers.iterator();  [CE]  cannot  find  symbol  eventHandlers  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventHandlers.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  this.eventHandlers.iterator();	      Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventHandlers	9	None	replace
54	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();	  double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
55	[BUG]  [BUGGY]  double  previousT  =  interface.getPreviousCurrentTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interface.getPreviousCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interface.getPreviousCurrentTime();	  double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  this.eventStates.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  <  E>  iterator  =  this.eventStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  this.eventStates.iterator();	      Iterator    <    E>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
57	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime();    boolean  isLastStep  =  interpolator.isInitialized();	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
58	[BUG]  [BUGGY]  final  int  stepSize  =  getStepSize();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  int  stepSize  =  getStepSize();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepSize  =  getStepSize();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
59	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(currentEvent.getStep());  [CE]  cannot  find  symbol  currentEvent  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  int  stepStart  =  getStep(currentEvent.getStep());  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(currentEvent.getStep());	      	non-compiled	[CE]  cannot  find  symbol  currentEvent	7	None	replace
60	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(currentT,  yDot);  [CE]  cannot  find  symbol  currentT  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  final  int  stepStart  =  getStep(currentT,  yDot);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(currentT,  yDot);	      	non-compiled	[CE]  cannot  find  symbol  currentT	7	None	replace
61	[BUG]  [BUGGY]  int  stepSize  =  getStepSize();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  int  stepSize  =  getStepSize();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  stepSize  =  getStepSize();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
62	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventStates.iterator();  [CE]  cannot  find  symbol  eventStates  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {    [BUGGY]  Iterator  iterator  =  this.eventStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  this.eventStates.iterator();	      Iterator    iterator    =    events.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventStates	12	None	replace
