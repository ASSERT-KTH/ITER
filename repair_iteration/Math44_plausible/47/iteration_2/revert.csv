projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occuringEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occurrences.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!occurrences.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occurrencesStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!existingEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isFirstStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!events.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateAndClearStep(interpolator)){eventT=state.evaluateAndClearStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStepInterpolator(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateAndClearStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateMethod(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){if(!eventsStates.isEmpty()){finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){while(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!events.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!existingEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)&&!occuringEvents.contains(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStepInterpolator(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateInstance(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!entries.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occurrencesStates.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurrence(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState[]events=state.getEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(ignoredSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occurredingEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!interpolator.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(eventT==state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!state.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>eventT=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>state=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=state.stepHandlers().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateMethod(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<Event>[]events=state.getEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,t0,tEnd,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<Event>[]events=state.getEventSlots();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!resetOccurred.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){While(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){for(finalEventState<EventState>eventStates:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!existingEvents.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates.values()){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates.entrySet()){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateMethod(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateMethod(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateMethod(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateStepInterpolator(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateStepInterpolator(state)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStepInterpolator(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&interpolator.evaluateStep(state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&interpolator.evaluateStep(events)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(currentEvent)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=this.eventsStates.get(ignoredSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(ignoredSign+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates.values()){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates.values()){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events.values()){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}for(finalEventStatestate:eventsStates){if(isFirstStep||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}for(finalEventStatestate:eventsStates){if(islastStep||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occurred.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(currentEvent)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventState:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventState:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!interpolator.evaluateOccurred(interpolator)&&!occuringEvents.contains(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!interpolator.evaluateOccurred(events)&&!occuringEvents.contains(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!events.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsState.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventSigns){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateOccurred(state)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState[]events=state.getAllEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState[]events=state.getOccurredEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateAndClearStep(state)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateAndClearStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateAndClearStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){while(!eventsStates.isEmpty()&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){for(finalEventState<EventState>iterator:eventsStates){if(!eventsStates.isEmpty()&&isLastStep){}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){for(finalEventState<EventState>iterator:eventsStates.iterator()){finalIterator<EventState>iterator=occuringEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}for(finalEventState:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator))continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!interpolator.evaluateOccurred(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateAndClearStep(state)){eventT=state.evaluateAndClearStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(eventT.evaluateAndClearStep(interpolator)){eventT=state.evaluateAndClearStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateAndClearStep(interpolator)){eventT=state.evaluateAndClearStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventSigns){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}for(finalEventState:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}finalEventState[]eventStates=this.eventsStates.toArray(newEventState[this.eventsStates.size()]);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}finalEventState[]eventsInitialized=this.eventsStates.toArray(newEventState[this.eventsStates.size()]);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator))continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsInitialized.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}for(finalEventState:this.eventsStates){if(state.evaluateStep(interpolator)){break;}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}for(finalEventState:this.eventsStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){break;}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=es0.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateInstance(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!interpolator.evaluateInstance(state)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateInstance(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventSigns){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!interpolator.isEmpty()&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!interpolator.isEmpty()&&occuringEvents.size()>0){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!interpolator.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!resetOccurred&&!isLastStep.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!resetOccurred.booleanValue()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsInitialized.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=statesInitialized.stepHandlers().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=es.stepHandlers().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isFirstStep||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isInitialized||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(is0||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventSigns){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates.values()){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates.values()){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events.values()){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.isFirstStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308While(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep||!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isFirstStep&&!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateStepInterpolator(state)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStepInterpolator(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>eventT=state.evaluateStep(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>eventT=state.evaluateStep(currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>eventT=state.evaluateStep(interpolator,this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=this.events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalIterator<EventState>iterator=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=this.eventsInitialized.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){while(!isLastStep&&!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){finalIterator<EventState>iterator=occuringEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=eventsInitialized.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(currentEvent==state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(currentT==state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateOccurred(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!resultingEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&isLastStep.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep.isEmpty()&&occuringEvents.size()>0){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep.isEmpty()&&occuringEvents.size()>1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventState<EventState>eventStates:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventState<EventState>eventStates:events.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&eventStates.values().length>0){for(finalEventState<EventState>eventStates:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&eventStates.size()>0){for(finalEventState<EventState>eventStates:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateOccurred(state)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=this.eventsStates.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(0).evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates.values()){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates.values()){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events.values()){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=state.evaluateStep(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=state.evaluate(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=state.evaluateStep(interpolator,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventSigns){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>state=state.evaluateStep(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>state=state.evaluate(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates.values()){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates.values()){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events.values()){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!state.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(isLastStep+orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(!isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(isLastStep||isInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(isLastStep||isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventsState<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!events.isEmpty()&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<Event>[]events=state.getAllEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<Event>[]events=state.getOccurredEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!interpolator.evaluateOccurred(state)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<Event>[]events=state.getAllEventSlots();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()||state.evaluateMethod(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!existingEvents.isEmpty()&&state.evaluateMethod(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&interpolator.evaluateMethod(state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!currentEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()||isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isInitialized){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(event);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(eventsInitialized,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&state.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!state.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!interpolator.evaluateOccurrence(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateOccurrence(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateOccurrence(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsInitialized){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!interpolator.evaluateOccurred(state)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(events.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(occuringEvents.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(events.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates.values()){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates.values()){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.events.values()){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,t0,yDot,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,orderingSign,t0,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,t0,orderingSign,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,orderingEvents,t0,tEnd,t);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!existingEvents.isEmpty()||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateAndClearStep(interpolator)){eventT=state.evaluateAndClearStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=eventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}finalEventStatestate=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}finalEventState<EventState>eventState=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}finalEventState[]eventStates=this.eventsStates.values();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,t0,orderingEvents,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,orderingEvents,t0,tEnd,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(!state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!interpolator.isEmpty()||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}finalEventState[]eventStates=this.eventsStates.toArray(newEventState[this.eventsStates.size()]);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}finalIterator<EventState>iterator=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}finalEventState[]eventStates=this.eventsStates.values();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}finalEventState[]eventStates=this.eventsStates.toArray(newEventState[this.eventsStates.size()]);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}finalIterator<EventState>iterator=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}finalEventState[]eventsInitialized=this.eventsStates.toArray(newEventState[this.eventsStates.size()]);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!interpolator.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(events.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(occuringEvents.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(eventsInitialized.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occurredEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateStep(currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&orderingSign){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&currentStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateMethod(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(eventT==state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateStep(interpolator)||state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){finalEventState<EventState>eventStates=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(eventsStates.size()-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(ignoredEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(ignoredEvents.size());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.values();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){occurredingEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){occurredingEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalwhile(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!resultsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(this.isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(isLastStep<=orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalIterator<EventState>iterator=eventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.occuringEvents){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(isLastStep||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isFirstStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:thisEventsStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.occuringEvents){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateStepInterpolator(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(!state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=state.evaluateStep(interpolator,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.occuringEvents){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occurredEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState[]events=state.getOccurrenceEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=this.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(exp);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(interpolator.evaluateOccurred(events)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>state=state.evaluateStep(interpolator,this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateOccurred(interpolator)&&!occuringEvents.contains(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){for(finalEventState<EventState>occuringEvents:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){for(finalEventState<EventState>eventStates:eventStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(!state.evaluateOccurrence(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateInstance(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.contains(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!requiresStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateMethod(interpolator)||state.evaluateMethod(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=eventState.stepHandlers().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStepInterpolator(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStepInterpolator(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateMethod(expableODE)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:statesInitialized){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:statesInitialized){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventStates){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:statesInitialized){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateAndClearStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateAndClearStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){finalIterator<EventState>iterator=eventsStates.iterator();while(!isLastStep&&!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){While(!isLastStep&&!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occurredEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateOccurrence(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308For(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=state.getEventState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=state.getEventStates().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}Iterator<EventState>iterator=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}finalEventState<EventState>eventState=this.eventsStates.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:state.values()){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308staticfinalEventState<EventState>eventT=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>eventT=state.evaluateStep(interpolator,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=state.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStepInterpolator(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep.isEmpty()&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>state=state.evaluateStep(interpolator,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(isLastStep>0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventStates.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep||state.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents.values()){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308For(finalEventStatestate:this.eventsStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}Iterator<EventState>iterator=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:statesInitialized){if(!state.evaluateOccurred(interpolator)&&!occuringEvents.contains(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:statesInitialized){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents.values()){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStateeventT:eventsStates){if(eventT==state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:statesInitialized){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!stateInitialized.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:statesInitialized){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventStates.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308For(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,yDot,tEnd,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,y,t0,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventStates){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.clear();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateAndClearStep(interpolator)){eventT=state.evaluateAndClearStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventStates){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStepInterpolator(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateMethod(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:currentEvents.values()){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()&&state.evaluate()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStepInterpolator(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}finalEventState<EventState>eventState=this.eventsStates.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){While(!eventsStates.isEmpty()&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){for(finalEventState<EventState>eventsStates:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateInstance(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep&&isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=interpolator.evaluateStep(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=state.evaluateStep(interpolator,this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateStep(interpolator)){for(finalEventState<EventState>eventStates:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(ignoredSign-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventStates){if(state.evaluateStep(interpolator)){break;}
