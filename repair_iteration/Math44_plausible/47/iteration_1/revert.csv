projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occuringEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occurrences.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!occurrences.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occurrencesStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308if(!occuringEvents.isEmpty()){for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!existingEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&isFirstStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!events.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(isLastStep||isLastStep){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateAndClearStep(interpolator)){eventT=state.evaluateAndClearStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308eventT=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStepInterpolator(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateAndClearStep(interpolator)){result.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateMethod(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){if(!eventsStates.isEmpty()){finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){while(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateOccurred(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!events.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!existingEvents.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)&&!occuringEvents.contains(state)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStepInterpolator(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurred(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateInstance(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){returnstate;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!entries.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!occurrencesStates.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(!state.evaluateOccurrence(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState[]events=state.getEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(ignoredSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventStatestate=eventsStates.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)){occurredingEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(events.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!interpolator.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsStates){if(eventT==state.evaluateStep(interpolator)){eventT=state.evaluateStep(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventsInitialized){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!state.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>eventT=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<EventState>state=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=state.stepHandlers().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Iterator<EventState>iterator=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(!state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()&&state.evaluateMethod(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<Event>[]events=state.getEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308AssertionError.show(event,t0,tEnd,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308finalEventState<Event>[]events=state.getEventSlots();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308result.add(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308Constants.checkState(isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(!state.evaluateOccurred(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!isLastStep&&!resetOccurred.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){continue;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){While(!eventsStates.isEmpty()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!eventsStates.isEmpty()){for(finalEventState<EventState>eventStates:eventsStates.values()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:this.eventsStates){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(!state.evaluateStep(interpolator)){occuringEvents.add(state);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:events.values()){if(!state.evaluateStep(interpolator)){break;}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308while(!existingEvents.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java308for(finalEventStatestate:eventStates){if(state.evaluateStep(interpolator)){occuringEvents.remove(state);}
