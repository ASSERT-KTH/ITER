bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0,  expandableODE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0,  expandableODE);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
2	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(maxCheckInterval);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(maxCheckInterval);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	25	None	replace
3	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  t.length);	  t0    =    Math.max(expandableODE,    t.getMillis());    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
4	[BUG]  [BUGGY]  expansionableODE.setState(t1);  [CE]  cannot  find  symbol  t1  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expansionableODE.setState(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expansionableODE.setState(t1);	  expansionableODE.setState(t0);    	non-compiled	[CE]  cannot  find  symbol  t1	69	None	replace
5	[BUG]  [BUGGY]  expansionableODE.setState(expandable);  [CE]  cannot  find  symbol  expansionableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expansionableODE.setState(expandable);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expansionableODE.setState(expandable);	  expansionableODE.setState(t0);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	69	None	replace
6	[BUG]  [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.getMillis());  [CE]  cannot  find  symbol  expanableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.getMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expanableODE,  expandableODE.getMillis());	  t0    =    Math.max(expandableODE,    expandableODE.getMillis());    	non-compiled	[CE]  cannot  find  symbol  expanableODE	90	None	replace
7	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expansionableODE.getMillis());  [CE]  cannot  find  symbol  expansionableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expansionableODE.getMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expansionableODE.getMillis());	  t0    =    Math.max(expandableODE,    expandableODE.getMillis());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	90	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    i,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	98	None	replace
9	[BUG]  [BUGGY]  expandableODE.setExpandableState(t);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(t);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(t);	  expandableODE.setExpandableState(expandable);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
10	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    	compilable	  [FE]  ArrayStoreException  	115	1	replace
11	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    	compilable	  [FE]  ArrayStoreException  	115	1	replace
12	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  t0,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  0,  t0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	115	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  expansionODE  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  0,  y0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	115	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(expanableODE,  0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expanableODE  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expanableODE,  0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expanableODE,  0,  y,  0,  expandableODE.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expanableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	55	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(expanableODE,  0,  y,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expanableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expanableODE,  0,  y,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expanableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	55	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expanableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	55	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expansionODE  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  0,  y,  0,  expandableODE.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expansionODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	99	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  0,  y,  0,  expansionableODE.length);  [CE]  cannot  find  symbol  expansionODE  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  0,  y,  0,  expansionableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  0,  y,  0,  expansionableODE.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expansionODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	99	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  0,  y,  0,  y.length);  [CE]  cannot  find  symbol  expansionODE  [FE]                ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  0,  y,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expansionODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	99	None	replace
20	[BUG]  [BUGGY]  t0.add(y,  expandableODE);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(y,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(y,  expandableODE);	  t0.add(expandableODE,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	82	None	replace
21	[BUG]  [BUGGY]  t0.add(expandeableODE,  y);  [CE]  cannot  find  symbol  expandeableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandeableODE,  y);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandeableODE,  y);	  t0.add(expandableODE,    y);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	82	None	replace
22	[BUG]  [BUGGY]  ExpandableODE.setExpandableState(t0);  [CE]  cannot  find  symbol  ExpandableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setExpandableState(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setExpandableState(t0);	  expandableODE.setExpandableState(y0);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	88	None	replace
23	[BUG]  [BUGGY]  expansionableODE.setTime(t0);  [CE]  cannot  find  symbol  expansionableODE  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expansionableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expansionableODE.setTime(t0);	  expandableODE.setTime(t0);    expansionableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	60	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	expandableODE.setTime(0);	  expandableODE.setTime(t0);    expansionableODE.setTime(t0);    	compilable	  [FE]  AssertionError  	60	1	replace
25	[BUG]  [BUGGY]  expandableODE.setTime(0);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(0);	  expandableODE.setTime(t0);    expansionableODE.setTime(t0);    	compilable	  [FE]  AssertionError  	60	1	replace
26	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	64	None	replace
27	[BUG]  [BUGGY]  expandableODE.setExpandableState(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(t0,  y,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(t0,  y,  t.length);	  expandableODE.setExpandableState(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	49	None	replace
28	[BUG]  [BUGGY]  expandableODE.setExpandableState(y,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(y,  t0.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(y,  t0.length);	  expandableODE.setExpandableState(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	49	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandableODE,  0,  y.length,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  expandableODE,  0,  y.length,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  expandableODE,  0,  y.length,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandableODE,  0,  y.length,  expansionableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  expandableODE,  0,  y.length,  expansionableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  expandableODE,  0,  y.length,  expansionableODE.length);	  System.arraycopy(expandableODE,    t0,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	12	None	replace
31	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)entities.get(t0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)entities.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)entities.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)entries.get(t0);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  0,  y0,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expansionODE  [FE]        ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  0,  y0,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  0,  y0,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    0,    y0,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	17	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    expandable,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandable.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandable.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  expandable.length);	  System.arraycopy(expandableODE,    t0,    expandable,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
35	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(y,  0,  expandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,    0,    extendableODE,    0,    y.length);    	compilable	  [FE]  ArrayStoreException  	76	1	replace
36	[BUG]  [BUGGY]  System.arraycopy(y,  0,  expandableODE,  0,  y.length);  [FE]  ArrayStoreException  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y,  0,  expandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,    0,    extendableODE,    0,    y.length);    	compilable	  [FE]  ArrayStoreException  	76	1	replace
37	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(y);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(y);	  expandableODE.setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
38	[BUG]  [BUGGY]  expandableODE.setSize(y0,  t0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(y0,  t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(y0,  t0);	  expandableODE.setSize(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
39	[BUG]  [BUGGY]  expandableODE.setSize(y,  t0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(y,  t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(y,  t0);	  expandableODE.setSize(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	((    ExpandableStatefulODE)expandableODE).setTime(0);    ((  ExpandableStatefulODE)expandableODE).setTime(0);	  	compilable	  [FE]  AssertionError  	84	1	add
41	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((    ExpandableStatefulODE)expandableODE).setTime(0);    ((  ExpandableStatefulODE)expandableODE).setTime(0);	  	compilable	  [FE]  AssertionError  	84	1	add
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	((    ExpandableStatefulODE)expandableODE).setTime(0);    ((  ExpandableStatefulODE)expandableODE).setTime(1);	  	compilable	  [FE]  AssertionError  	84	1	add
43	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((    ExpandableStatefulODE)expandableODE).setTime(0);    ((  ExpandableStatefulODE)expandableODE).setTime(1);	  	compilable	  [FE]  AssertionError  	84	1	add
44	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  (  ExpandableStatefulODE)expandableODE).setTime(0);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  (  ExpandableStatefulODE)expandableODE).setTime(0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((    ExpandableStatefulODE)expandableODE).setTime(0);    (  ExpandableStatefulODE)expandableODE).setTime(0);	  	non-compiled	[CE]  not  a  statement	84	None	add
45	[BUG]  [BUGGY]  expandableODE.add(t0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.add(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.add(t0);	          t0.add(expandableODE);    expandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
46	[BUG]  [BUGGY]  expandableODE.add(expandableODE);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.add(expandableODE);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.add(expandableODE);  expandableODE.setTime(t0);	          t0.add(expandableODE);    expandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
47	[BUG]  [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.getSize());  [CE]  cannot  find  symbol  expanableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.getSize());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expanableODE,  expandableODE.getSize());	  t0    =    Math.max(expandableODE,    expandable.getSize());    	non-compiled	[CE]  cannot  find  symbol  expanableODE	123	None	replace
48	[BUG]  [BUGGY]  t0  =  Math.max(expanableODE,  expandable.getSize());  [CE]  cannot  find  symbol  expanableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expanableODE,  expandable.getSize());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expanableODE,  expandable.getSize());	  t0    =    Math.max(expandableODE,    expandable.getSize());    	non-compiled	[CE]  cannot  find  symbol  expanableODE	123	None	replace
49	[BUG]  [BUGGY]  extendableODE.setTime(t0);  [CE]  cannot  find  symbol  extendableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  extendableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	extendableODE.setTime(t0);	  expandableODE.setTime(t0);    extendableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol  extendableODE	61	None	replace
50	[BUG]  [BUGGY]  Expansion  t0  =  equations,  expandableODE.getDimension();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  equations,  expandableODE.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  equations,  expandableODE.getDimension();	          Expansion    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	79	None	replace
51	[BUG]  [BUGGY]  Expansion  t0  =  equations.getDimension()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  equations.getDimension()  +  1;  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  equations.getDimension()  +  1;	          Expansion    t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
52	[BUG]  [BUGGY]  ExpandableODE  t0  =  expansionableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  expansionableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  expansionableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);	  ExpandableODE    t0    =    expandableODE.add(t0);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
53	[BUG]  [BUGGY]  expandableODE  =  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  assign  a  value  to  final  variable  expandableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE  =  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE  =  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);	  ExpandableODE    t0    =    expandableODE.add(t0);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expandableODE	132	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  0,  t,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    t,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	126	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expansionODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  0,  t,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    t,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	126	None	replace
56	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
57	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
58	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
59	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
60	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
61	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
62	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
63	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	114	1	add
64	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]            ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	114	None	add
65	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(t1);  [CE]  cannot  find  symbol  t1  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(t1);	  ExpandableODE.setMaxCheckInterval(maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  t1	42	None	replace
66	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(constraint);  [CE]  cannot  find  symbol  constraint  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(constraint);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(constraint);	  ExpandableODE.setMaxCheckInterval(maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  constraint	42	None	replace
67	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(convention);  [CE]  cannot  find  symbol  convention  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(convention);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(convention);	  ExpandableODE.setMaxCheckInterval(maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  convention	42	None	replace
68	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	125	1	add
69	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	125	1	add
70	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	125	1	add
71	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	125	1	add
72	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	125	1	add
73	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	125	1	add
74	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expanableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expanableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expanableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	125	None	add
75	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]            ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandeableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	125	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(y0,  0,  y,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	compilable	  [FE]  AssertionError  	135	1	replace
77	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y.length);  [FE]  AssertionError  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,  0,  y,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	compilable	  [FE]  AssertionError  	135	1	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(y,  0,  y,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	compilable	  [FE]  AssertionError  	135	1	replace
79	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  AssertionError  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y,  0,  y,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	compilable	  [FE]  AssertionError  	135	1	replace
80	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y.length);  [CE]  cannot  find  symbol  y1  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,  0,  y1,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	non-compiled	[CE]  cannot  find  symbol  y1	135	None	replace
81	[BUG]  [BUGGY]  expandableODE.setState(t);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(t);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(t);	  expandableODE.setState(expandable);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
82	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	72	1	add
83	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	72	1	add
84	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	72	1	add
85	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	72	1	add
86	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	72	None	add
87	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	72	None	add
88	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]            ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	72	None	add
89	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(t0);  ExpandableODE.setTime(t0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(t0);  ExpandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(t0);  ExpandableODE.setTime(t0);	  expandableODE.setTime(t0);    ExpandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
90	[BUG]  [BUGGY]  expandableODE.setSize(t0);  ExpandableODE.setTime(t0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(t0);  ExpandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(t0);  ExpandableODE.setTime(t0);	  expandableODE.setTime(t0);    ExpandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
91	[BUG]  [BUGGY]  ExpandableODE.setTime(t0);  [CE]  cannot  find  symbol  ExpandableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setTime(t0);	  expandableODE.setTime(t0);    ExpandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	59	None	replace
92	[BUG]  [BUGGY]  expandableODE.setTime(maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(maxCheckInterval);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(maxCheckInterval);	  expandableODE.setTime(t0);    expandableODE.setTime(t1);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	62	None	replace
93	[BUG]  [BUGGY]  expandableODE.setTime(y0);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(y0);	  expandableODE.setTime(t0);    expandableODE.setTime(t1);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	62	None	replace
94	[BUG]  [BUGGY]  expandableODE.setSize(y,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(y,  t0.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(y,  t0.length);	  expandableODE.setSize(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
95	[BUG]  [BUGGY]  expandableODE.setSize(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(t0,  y,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(t0,  y,  t.length);	  expandableODE.setSize(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
96	[BUG]  [BUGGY]  expandableODE.setSize(y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(y0,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(y0,  t.length);	  expandableODE.setSize(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
97	[BUG]  [BUGGY]  (1(ExpandableStatefulODE)expandableODE).setTime(t0);  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  (1(ExpandableStatefulODE)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	(1(ExpandableStatefulODE)expandableODE).setTime(t0);	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    (1(    ExpandableStatefulODE)expandableODE).setTime(t0);    	non-compiled	[CE]  ')'  expected	28	None	replace
98	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(y0,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	111	1	add
99	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(y0,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	111	1	add
100	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	111	1	add
101	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	111	1	add
102	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	111	None	add
103	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(x0,  0,  expandableODE,  0,  x.length);  [CE]  cannot  find  symbol  x0  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(x0,  0,  expandableODE,  0,  x.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(x0,  0,  expandableODE,  0,  x.length);	  	non-compiled	[CE]  cannot  find  symbol  x0	111	None	add
104	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(x0,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  x0  [FE]            ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(x0,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(x0,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  x0	111	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setTime(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	expandableODE.setTime(t0);        expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setTime(t0);	  	compilable	  [FE]  AssertionError  	57	1	add
106	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setTime(t0);  expandableODE.setTime(t0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setTime(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setTime(t0);	  	compilable	  [FE]  AssertionError  	57	1	add
107	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  ExpandableODE.setTime(t0);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  ExpandableODE  [FE]      AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  ExpandableODE.setTime(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    ExpandableODE.setTime(t0);  expandableODE.setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	57	None	add
108	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expansionableODE.setTime(t0);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  expansionableODE  [FE]        AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expansionableODE.setTime(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    expansionableODE.setTime(t0);  expandableODE.setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol  expansionableODE	57	None	add
109	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  extendableODE.setTime(t0);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  extendableODE  [FE]          AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  extendableODE.setTime(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    extendableODE.setTime(t0);  expandableODE.setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol  extendableODE	57	None	add
110	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setSize(t0);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setSize(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    expandableODE.setSize(t0);  expandableODE.setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
111	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(t0,  y,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(t0,  y,  t.length);	  expandableODE.setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	41	None	replace
112	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(t0,  y);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(t0,  y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(t0,  y);	  expandableODE.setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
113	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(y,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(y,  t0.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(y,  t0.length);	  expandableODE.setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	41	None	replace
114	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
115	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
116	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expanableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expanableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expanableODE,  0,  t,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	15	None	add
117	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  b,  0,  y.length);  [CE]  cannot  find  symbol  b  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  b,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  b,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  b	15	None	add
118	[BUG]  [BUGGY]  Expansion  t0  =  expansionableODE.getInitializedExpansion();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  expansionableODE.getInitializedExpansion();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  expansionableODE.getInitializedExpansion();	          Expansion    t0    =    equations.getInitializedExpansion();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
119	[BUG]  [BUGGY]  Expansion  t0  =  equations.getInitializingExpansion();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  equations.getInitializingExpansion();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  equations.getInitializingExpansion();	          Expansion    t0    =    equations.getInitializedExpansion();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
120	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(y1);  [CE]  cannot  find  symbol  y1  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(y1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(y1);	  ((    ExpandableStatefulODE)expandableODE).setTime(t1);    	non-compiled	[CE]  cannot  find  symbol  y1	34	None	replace
121	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(maxCheckInterval);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(maxCheckInterval);	  ((    ExpandableStatefulODE)expandableODE).setTime(t1);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	34	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	((  ExpandableStatefulODE)expandableODE).setTime(1);	  ((    ExpandableStatefulODE)expandableODE).setTime(0);    	compilable	  [FE]  AssertionError  	85	1	replace
123	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(1);	  ((    ExpandableStatefulODE)expandableODE).setTime(0);    	compilable	  [FE]  AssertionError  	85	1	replace
124	[BUG]  [BUGGY]  t0.add(adjableODE);  [CE]  cannot  find  symbol  adjableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(adjableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(adjableODE);	  t0.add(expanableODE);    	non-compiled	[CE]  cannot  find  symbol  adjableODE	110	None	replace
125	[BUG]  [BUGGY]  t0.add(advancedODE);  [CE]  cannot  find  symbol  advancedODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(advancedODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(advancedODE);	  t0.add(expanableODE);    	non-compiled	[CE]  cannot  find  symbol  advancedODE	110	None	replace
126	[BUG]  [BUGGY]  expandableODE.setValue(t0,  y.length);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValue(t0,  y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValue(t0,  y.length);	  expandableODE.setValue(t0);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
127	[BUG]  [BUGGY]  expandableODE.setValue(t0,  y);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValue(t0,  y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValue(t0,  y);	  expandableODE.setValue(t0);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
128	[BUG]  [BUGGY]  expandableODE.setValue(t1);  [CE]  cannot  find  symbol  t1  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValue(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValue(t1);	  expandableODE.setValue(t0);    	non-compiled	[CE]  cannot  find  symbol  t1	70	None	replace
129	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  t);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  t);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  t);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    expandableODE);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	33	None	replace
130	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  y.length);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  y.length);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    expandableODE);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	33	None	replace
131	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  expandableODE);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  expandableODE);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    expandableODE);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	33	None	replace
132	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y.length,  expandableODE);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y.length,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y.length,  expandableODE);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    expandableODE);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	33	None	replace
133	[BUG]  [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.length);  [CE]  cannot  find  symbol  expanableODE  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expanableODE,  expandableODE.length);	  t0    =    Math.max(expandableODE,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	39	None	replace
134	[BUG]  [BUGGY]  ExpansionODE  t0  =  equations.getDimension();  expandableODE.setSize(t0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpansionODE  t0  =  equations.getDimension();  expandableODE.setSize(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpansionODE  t0  =  equations.getDimension();  expandableODE.setSize(t0);	  ExpandableODE    t0    =    equations.getDimension();    expandableODE.setSize(t0);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
135	[BUG]  [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  expandableODE.setSize(t1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  expandableODE.setSize(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  equations.getDimension();  expandableODE.setSize(t1);	  ExpandableODE    t0    =    equations.getDimension();    expandableODE.setSize(t0);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandableODE,  0,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  expandableODE,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  expandableODE,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  t0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expansionODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  t0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  t0,  y,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	10	None	replace
138	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE,  y.length);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE,  y.length);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
139	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  y,  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  y,  t.length);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
140	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0,  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y0,  t.length);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
141	[BUG]  [BUGGY]  t0  =  Math.max(extendableODE,  expandableODE.getSize());  [CE]  cannot  find  symbol  extendableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(extendableODE,  expandableODE.getSize());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(extendableODE,  expandableODE.getSize());	  t0    =    Math.max(expansionableODE,    expandableODE.getSize());    	non-compiled	[CE]  cannot  find  symbol  extendableODE	95	None	replace
142	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  t0,  y,  0,  expandableODE.length,  t.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  t0,  y,  0,  expandableODE.length,  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  t0,  y,  0,  expandableODE.length,  t.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	11	None	replace
144	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t1.length);  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t1.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t1.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
145	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t1);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t1);	  ExpandableODE    t0    =(ExpandableStatefulODE)expandableODE.get(t0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
146	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expanableODE.get(t0);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expanableODE.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expanableODE.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)expandableODE.get(t0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
147	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(0);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(0);	  ExpandableODE    t0    =(ExpandableStatefulODE)expandableODE.get(t0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
148	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE.length);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol  length	23	None	replace
149	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expansionableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expansionableODE);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	23	None	replace
150	[BUG]  [BUGGY]  expandableODE.setPrimarySize(maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setPrimarySize(maxCheckInterval);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setPrimarySize(maxCheckInterval);	  expandableODE.setPrimarySize(t0);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	128	None	replace
151	[BUG]  [BUGGY]  expandableODE.setPrimarySize(y);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setPrimarySize(y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setPrimarySize(y);	  expandableODE.setPrimarySize(t0);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
152	[BUG]  [BUGGY]  expandableODE.setPrimarySize(t0,  y.length);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setPrimarySize(t0,  y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setPrimarySize(t0,  y.length);	  expandableODE.setPrimarySize(t0);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
153	[BUG]  [BUGGY]  t0  =  equations.getDimension()  *  1;  [CE]  final  parameter  t0  may  not  be  assigned  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  equations.getDimension()  *  1;  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  equations.getDimension()  *  1;	  t0    =    equations.getDimension()    -    1;    	non-compiled	[CE]  final  parameter  t0  may  not  be  assigned	48	None	replace
154	[BUG]  [BUGGY]  init(t0,  y0,  expandableODE,  isLastStep);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  init(t0,  y0,  expandableODE,  isLastStep);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	init(t0,  y0,  expandableODE,  isLastStep);	          init(t0,    y0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
155	[BUG]  [BUGGY]  init(expandableODE,  y0,  t0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  init(expandableODE,  y0,  t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	init(expandableODE,  y0,  t0);	          init(t0,    y0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
156	[BUG]  [BUGGY]  init(t0,  expandableODE,  y);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  init(t0,  expandableODE,  y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	init(t0,  expandableODE,  y);	          init(t0,    y0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
157	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandable.size());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandable.size());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandable.size());	  t0    =    Math.max(t0,    expandableODE.size());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
158	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.size()  -  1);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.size()  -  1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.size()  -  1);	  t0    =    Math.max(t0,    expandableODE.size());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
159	[BUG]  [BUGGY]  expandableODE.setState(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(t0,  y,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(t0,  y,  t.length);	  expandableODE.setState(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
160	[BUG]  [BUGGY]  expandableODE.setState(y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(y0,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(y0,  t.length);	  expandableODE.setState(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
161	[BUG]  [BUGGY]  t.add(expandableODE,  t);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t.add(expandableODE,  t);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t.add(expandableODE,  t);	  t0.add(expandableODE,    t);    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
162	[BUG]  [BUGGY]  t0.add(expandeableODE,  t);  [CE]  cannot  find  symbol  expandeableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandeableODE,  t);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandeableODE,  t);	  t0.add(expandableODE,    t);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	1	None	replace
163	[BUG]  [BUGGY]  ExpandableODE.setState(t1);  [CE]  cannot  find  symbol  t1  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setState(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setState(t1);	  ExpandableODE.setState(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  t1	92	None	replace
164	[BUG]  [BUGGY]  ExpandableODE.setState(expanableODE);  [CE]  cannot  find  symbol  expanableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setState(expanableODE);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setState(expanableODE);	  ExpandableODE.setState(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	92	None	replace
165	[BUG]  [BUGGY]  t0  =  equations.getDimension()  +  y.length;  [CE]  final  parameter  t0  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  equations.getDimension()  +  y.length;  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  equations.getDimension()  +  y.length;	  t0    =    equations.getDimension()    +    t0.length;    	non-compiled	[CE]  final  parameter  t0  may  not  be  assigned	119	None	replace
166	[BUG]  [BUGGY]  t0  =  equations.getDimension()  *  t0.length;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  equations.getDimension()  *  t0.length;  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  equations.getDimension()  *  t0.length;	  t0    =    equations.getDimension()    +    t0.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	119	None	replace
167	[BUG]  [BUGGY]  Integrator  t0  =  equations,  expandableODE.getDimension();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Integrator  t0  =  equations,  expandableODE.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Integrator  t0  =  equations,  expandableODE.getDimension();	          Integrator    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	122	None	replace
168	[BUG]  [BUGGY]  Integrator  t0  =  equations,  expansionableODE.getDimension();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Integrator  t0  =  equations,  expansionableODE.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Integrator  t0  =  equations,  expansionableODE.getDimension();	          Integrator    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	122	None	replace
169	[BUG]  [BUGGY]  Integrator  y0  =  equations.getDimension();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Integrator  y0  =  equations.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Integrator  y0  =  equations.getDimension();	          Integrator    t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
170	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variants.get(t1);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variants.get(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)variants.get(t1);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t1);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
171	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variances.get(t0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variances.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)variances.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)equivalences.get(t0);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
172	[BUG]  [BUGGY]  ExpandableODE.setState(t0,  expandableODE);  [CE]  cannot  find  symbol  ExpandableODE  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setState(t0,  expandableODE);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setState(t0,  expandableODE);	  ExpandableODE.setState(t0);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	68	None	replace
173	[BUG]  [BUGGY]  expandableODE.setExpandableState(y,  t0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(y,  t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(y,  t0);	  expandableODE.setExpandableState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
174	[BUG]  [BUGGY]  expandableODE.setExpandableState(t0,  y,  t);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(t0,  y,  t);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(t0,  y,  t);	  expandableODE.setExpandableState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
175	[BUG]  [BUGGY]  expandableODE.setExpandableState(y0,  t0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(y0,  t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(y0,  t0);	  expandableODE.setExpandableState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
176	[BUG]  [BUGGY]  t0  =  Math.max(extendableODE,  expandableODE.length);  [CE]  cannot  find  symbol  extendableODE  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(extendableODE,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(extendableODE,  expandableODE.length);	  t0    =    Math.max(expansionableODE,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  extendableODE	40	None	replace
177	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  y,  t.length);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  y,  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getMillis(),  y,  t.length);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    y.length);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
178	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  y,  0,  y.length);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getMillis(),  y,  0,  y.length);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    y.length);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
179	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  y);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  y);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getMillis(),  y);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    y.length);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
180	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	133	1	add
181	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	133	1	add
182	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	133	None	add
183	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	133	None	add
184	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expansionODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expansionODE  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expansionODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expansionODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expansionODE	133	None	add
185	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expansableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expansableODE  [FE]            ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expansableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expansableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expansableODE	133	None	add
186	[BUG]  [BUGGY]  t0  =  Math.max(extendableODE,  expandableODE.getMillis());  [CE]  cannot  find  symbol  extendableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(extendableODE,  expandableODE.getMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(extendableODE,  expandableODE.getMillis());	  t0    =    Math.max(expansionableODE,    expandableODE.getMillis());    	non-compiled	[CE]  cannot  find  symbol  extendableODE	91	None	replace
187	[BUG]  [BUGGY]  t0.add(expansion,  expandableODE);  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expansion,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expansion,  expandableODE);	  t0.add(expandableODE,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansion	3	None	replace
188	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  t.toMillis());  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  t.toMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  t.toMillis());	  t0    =    Math.max(t0,    expandableODE.toMillis());    	non-compiled	[CE]  double  cannot  be  dereferenced	130	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expanableODE,  0,  y0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expanableODE,    0,    y0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	66	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(expanableODE,  0,  y0,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expanableODE  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expanableODE,  0,  y0,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expanableODE,  0,  y0,  0,  expandableODE.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expanableODE,    0,    y0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	66	None	replace
191	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
192	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(x0);  [CE]  cannot  find  symbol  x0  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(x0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(x0);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol  x0	105	None	replace
193	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0);	  ((    ExpandableStatefulODE)expandableODE).setTime(y0);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	83	None	replace
194	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y);	  ((    ExpandableStatefulODE)expandableODE).setTime(y0);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	83	None	replace
195	[BUG]  [BUGGY]  System.arraycopy(expansionODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expansionODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionODE,  0,  expandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionODE	73	None	replace
196	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expansionableODE.getSize());  [CE]  cannot  find  symbol  expansionableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expansionableODE.getSize());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expansionableODE.getSize());	  t0    =    Math.max(expansion,    expandableODE.getSize());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	124	None	replace
197	[BUG]  [BUGGY]  expandableODE.setSize(t2);  [CE]  cannot  find  symbol  t2  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(t2);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(t2);	  expandableODE.setSize(y);    	non-compiled	[CE]  cannot  find  symbol  t2	137	None	replace
198	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  expandableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
199	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  equations.getExpandableODE());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  equations.getExpandableODE());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  equations.getExpandableODE());	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
200	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  equations.getExpandableODE);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  equations.getExpandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(t0,  equations.getExpandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
201	[BUG]  [BUGGY]  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t0);	  expandableODE.add(expandableODE);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
202	[BUG]  [BUGGY]  expandableODE.add(expandable);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.add(expandable);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.add(expandable);  expandableODE.setMaxCheckInterval(t0);	  expandableODE.add(expandableODE);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
203	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.getPrimarySize());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.getPrimarySize());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandableODE.getPrimarySize());	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
204	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimarySize(),  t.length);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimarySize(),  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getPrimarySize(),  t.length);	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
205	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimarySize(),  y.length);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimarySize(),  y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getPrimarySize(),  y.length);	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
206	[BUG]  [BUGGY]  t0  =  Math.max(extendableODE,  t.getSize());  [CE]  cannot  find  symbol  extendableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(extendableODE,  t.getSize());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(extendableODE,  t.getSize());	  t0    =    Math.max(expandeableODE,    t.getSize());    	non-compiled	[CE]  cannot  find  symbol  extendableODE	96	None	replace
207	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	53	1	add
208	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	53	1	add
209	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	53	None	add
210	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  system.arraycopy(expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  system  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  system.arraycopy(expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  system.arraycopy(expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  system	53	None	add
211	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandeableODE,  0,  y,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	53	None	add
212	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(expandableODE);  [CE]  cannot  find  symbol  ExpandableODE  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(expandableODE);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(expandableODE);	  ExpandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	21	None	replace
213	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(expandableODE.getMaxCheckInterval());  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(expandableODE.getMaxCheckInterval());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(expandableODE.getMaxCheckInterval());	  ExpandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
214	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(y0);  [CE]  cannot  find  symbol  ExpandableODE  [FE]                          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(y0);	  ExpandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	21	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  t0,  expandableODE,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  t0,  expandableODE,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  t0,  expandableODE,  0,  expandableODE.length);	  System.arraycopy(expandeableODE,    t0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	87	None	replace
216	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(equations);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(equations);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandableODE.get(equations);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
217	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(y0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(y0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(y0);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
218	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(y);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(y);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(y);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  x0,  0,  y.length);  [CE]  cannot  find  symbol  x0  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  x0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  x0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    x0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  x0	67	None	replace
220	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	63	1	add
221	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	63	1	add
222	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	63	None	add
223	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	63	None	add
224	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expanableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	63	None	add
225	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.length());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.length());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandableODE.length());	  t0    =    Math.max(expandableODE,    expandableODE.getSize());    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
226	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.getPrimaryState());  [CE]  no  suitable  method  found  for  max(ExpandableStatefulODE,double[])  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.getPrimaryState());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandableODE.getPrimaryState());	          t0    =    Math.max(t0,    expandableODE.getPrimaryState());    	non-compiled	[CE]  no  suitable  method  found  for  max(ExpandableStatefulODE,double[])	121	None	replace
227	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  t);  [CE]  no  suitable  method  found  for  max(double,double[],double)  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  t);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  t);	          t0    =    Math.max(t0,    expandableODE.getPrimaryState());    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[],double)	121	None	replace
228	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  y);  [CE]  no  suitable  method  found  for  max(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  y);	          t0    =    Math.max(t0,    expandableODE.getPrimaryState());    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[],double[])	121	None	replace
229	[BUG]  [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.getPrimaryState());  [CE]  cannot  find  symbol  expanableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expanableODE,  expandableODE.getPrimaryState());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expanableODE,  expandableODE.getPrimaryState());	          t0    =    Math.max(t0,    expandableODE.getPrimaryState());    	non-compiled	[CE]  cannot  find  symbol  expanableODE	121	None	replace
230	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(t0);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(t0);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(t0);  expandableODE.setMaxCheckInterval(t0);	  expandableODE.setTime(t0);    expandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
231	[BUG]  [BUGGY]  expandableODE.setExpandableState(t2);  [CE]  cannot  find  symbol  t2  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(t2);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(t2);	  expandableODE.setExpandableState(y);    	non-compiled	[CE]  cannot  find  symbol  t2	113	None	replace
232	[BUG]  [BUGGY]  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t1);	  t0.add(expandableODE);    expandableODE.setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
233	[BUG]  [BUGGY]  t0.add(expandableODE);  expandableODE.setMaxCheckInterval(maxCheckInterval);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandableODE);  expandableODE.setMaxCheckInterval(maxCheckInterval);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandableODE);  expandableODE.setMaxCheckInterval(maxCheckInterval);	  t0.add(expandableODE);    expandableODE.setMaxCheckInterval(t1);    	non-compiled	[CE]  double  cannot  be  dereferenced	77	None	replace
234	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  t.getMillis(),  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  t.getMillis(),  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  t.getMillis(),  t.length);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
235	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expansionableODE.getMillis(),  t.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expansionableODE.getMillis(),  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expansionableODE.getMillis(),  t.length);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    t.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	9	None	replace
236	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)this.equations.get(t0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)this.equations.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)this.equations.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)variables.get(t0);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
237	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(t0,  expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(t0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(t0,  expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)variables.get(t0);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
238	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  0,  expandableODE,  0,  expandableODE.length);	  System.arraycopy(expandeableODE,    0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	14	None	replace
239	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  y,  0,  expansionableODE.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  0,  y,  0,  expansionableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  0,  y,  0,  expansionableODE.length);	  System.arraycopy(expandeableODE,    0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	14	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]        ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  t,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	13	None	replace
241	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(expandableODE);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(expandableODE);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(expandableODE);	  expandableODE.setMaxCheckInterval(convertingOccurred);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
242	[BUG]  [BUGGY]  expandableODE.setSize(maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(maxCheckInterval);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(maxCheckInterval);	  expandableODE.setSize(t1);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	36	None	replace
243	[BUG]  [BUGGY]  expandableODE.setSize(y.length);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(y.length);	  expandableODE.setSize(t1);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
244	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  t.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  t.length);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	32	None	replace
245	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  0,  y.length);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y,  0,  y.length);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    y.length);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	32	None	replace
246	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y.length,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y.length,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y.length,  expandableODE.length);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  length	32	None	replace
247	[BUG]  [BUGGY]  expandableODE.setValues(t0,  y.length);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValues(t0,  y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValues(t0,  y.length);	  expandableODE.setValues(t0);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
248	[BUG]  [BUGGY]  expandableODE.setValues(t0,  y);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValues(t0,  y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValues(t0,  y);	  expandableODE.setValues(t0);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
249	[BUG]  [BUGGY]  expandableODE.setValues(t1);  [CE]  cannot  find  symbol  t1  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValues(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValues(t1);	  expandableODE.setValues(t0);    	non-compiled	[CE]  cannot  find  symbol  t1	71	None	replace
250	[BUG]  [BUGGY]  ExpandableODE.setSize(t0);  [CE]  cannot  find  symbol  ExpandableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setSize(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setSize(t0);	  expandableODE.setSize(y0);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	101	None	replace
251	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  t.length());  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  t.length());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  t.length());	  t0    =    Math.max(t0,    expandableODE.length());    	non-compiled	[CE]  double  cannot  be  dereferenced	30	None	replace
252	[BUG]  [BUGGY]  t0  =  Math.max(expansionableODE,  t.length());  [CE]  cannot  find  symbol  expansionableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expansionableODE,  t.length());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expansionableODE,  t.length());	  t0    =    Math.max(t0,    expandableODE.length());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	30	None	replace
253	[BUG]  [BUGGY]  expandableODE.setState(t0,  y,  t);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(t0,  y,  t);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(t0,  y,  t);	  expandableODE.setState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
254	[BUG]  [BUGGY]  expandableODE.setState(y0,  t0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(y0,  t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(y0,  t0);	  expandableODE.setState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
255	[BUG]  [BUGGY]  expandableODE.setState(y,  t0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(y,  t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(y,  t0);	  expandableODE.setState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                ((        ExpandableStatefulODE)expandableODE).setTime(t0);        ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);	  	compilable	  [FE]  AssertionError  	26	1	add
257	[BUG]  [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                ((        ExpandableStatefulODE)expandableODE).setTime(t0);        ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);	  	compilable	  [FE]  AssertionError  	26	1	add
258	[BUG]  [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                ((        ExpandableStatefulODE)expandableODE).setTime(t0);        ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);	  	non-compiled	[CE]  ')'  expected	26	None	add
259	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  t0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  t0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  t0,  expandableODE,  0,  y.length);	  System.arraycopy(t0,    y,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	138	None	replace
260	[BUG]  [BUGGY]  System.arraycopy(y,  0,  ExpandableODE,  0,  y.length);  [CE]  cannot  find  symbol  ExpandableODE  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y,  0,  ExpandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y,  0,  ExpandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,    0,    ExpandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	75	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ExpandableODE,  0,  y.length);  [CE]  cannot  find  symbol  ExpandableODE  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  ExpandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,  0,  ExpandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,    0,    ExpandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	75	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  ExpandableODE,  0,  y.length);  [CE]  cannot  find  symbol  ExpandableODE  [FE]                ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  ExpandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  ExpandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,    0,    ExpandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	75	None	replace
263	[BUG]  [BUGGY]  expandableODE.setState(t2);  [CE]  cannot  find  symbol  t2  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(t2);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(t2);	  expandableODE.setState(y);    	non-compiled	[CE]  cannot  find  symbol  t2	116	None	replace
264	[BUG]  [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.size());  [CE]  cannot  find  symbol  expansionableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.size());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expansionableODE,  expandableODE.size());	  t0    =    Math.max(t0,    expandableODE.size());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	31	None	replace
265	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.toMillis());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.toMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandableODE.toMillis());	  t0    =    Math.max(t0,    expandableODE.toMillis());    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
266	[BUG]  [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.toMillis());  [CE]  cannot  find  symbol  expansionableODE  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.toMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expansionableODE,  expandableODE.toMillis());	  t0    =    Math.max(t0,    expandableODE.toMillis());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	130	None	replace
267	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expansionableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expansionableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expansionableODE.length);	  t0    =    Math.max(expandableODE,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	39	None	replace
268	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  x,  0,  y.length);  [CE]  cannot  find  symbol  x  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  x,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  x,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    x,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  x	56	None	replace
269	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  x,  0,  expandableODE.length);  [CE]  cannot  find  symbol  x  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  x,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  x,  0,  expandableODE.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    x,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  x	56	None	replace
270	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandable.getMillis(),  y.length);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandable.getMillis(),  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandable.getMillis(),  y.length);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    y.length);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
271	[BUG]  [BUGGY]  expandableODE.setTime(expandable);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(expandable);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(expandable);	  expandableODE.setTime(t0);    expandableODE.setTime(t1);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	62	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(y0,  0,  y0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	compilable	  [FE]  AssertionError  	135	1	replace
273	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  y.length);  [FE]  AssertionError  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,  0,  y0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	compilable	  [FE]  AssertionError  	135	1	replace
274	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  y0,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }  [CE]  illegal  start  of  expression  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  y0,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  y0,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
275	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }  [CE]  illegal  start  of  expression  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
276	[BUG]  [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.getPrimarySize());  [CE]  cannot  find  symbol  expansionableODE  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.getPrimarySize());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expansionableODE,  expandableODE.getPrimarySize());	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	120	None	replace
277	[BUG]  [BUGGY]  t0  =  Math.max(expandeableODE,  expandableODE.getPrimarySize());  [CE]  cannot  find  symbol  expandeableODE  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandeableODE,  expandableODE.getPrimarySize());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandeableODE,  expandableODE.getPrimarySize());	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	120	None	replace
278	[BUG]  [BUGGY]  expandableODE.setExpandableState(y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(y0,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(y0,  t.length);	  expandableODE.setExpandableState(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	49	None	replace
279	[BUG]  [BUGGY]  System.arraycopy(x0,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  x0  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(x0,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(x0,  0,  expandableODE,  0,  y.length);	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expanableODE,    0,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  x0	74	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t0.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t0.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  t0.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  expandable.length);  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  expandable.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length,  expandable.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
282	[BUG]  [BUGGY]  t0.add(new  ExpandableStatefulODE(expandableODE));  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(new  ExpandableStatefulODE(expandableODE));  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(new  ExpandableStatefulODE(expandableODE));	  t0.add(expanableODE);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	110	None	replace
283	[BUG]  [BUGGY]  t0.add(new  ExpandableStatefulODE(expanableODE));  [CE]  cannot  find  symbol  expanableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(new  ExpandableStatefulODE(expanableODE));  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(new  ExpandableStatefulODE(expanableODE));	  t0.add(expanableODE);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	110	None	replace
284	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  t.size());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  t.size());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  t.size());	  t0    =    Math.max(expandableODE,    t.getSize());    	non-compiled	[CE]  double  cannot  be  dereferenced	29	None	replace
285	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equators.get(t0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equators.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)equators.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)variables.get(t0);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
286	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(expandable);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(expandable);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(expandable);	  expandableODE.setMaxCheckInterval(convertingOccurred);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
287	[BUG]  [BUGGY]  t0  =  Math.max(t,  expandableODE.getMillis());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t,  expandableODE.getMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t,  expandableODE.getMillis());	  t0    =    Math.max(expandableODE,    t.getMillis());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
288	[BUG]  [BUGGY]  t1.add(expandableODE,  t);  [CE]  cannot  find  symbol  t1  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t1.add(expandableODE,  t);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t1.add(expandableODE,  t);	  t0.add(expandableODE,    t);    	non-compiled	[CE]  cannot  find  symbol  t1	1	None	replace
289	[BUG]  [BUGGY]  expandableODE.add(expandableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.add(expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.add(expandableODE);	  expandableODE.add(expandableODE);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
290	[BUG]  [BUGGY]  expandableODE.add(expandable);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.add(expandable);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.add(expandable);	  expandableODE.add(expandableODE);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
291	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionableODE,  0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionableODE,  0,  y,  0,  expandableODE.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expansionODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	99	None	replace
292	[BUG]  [BUGGY]  t0.add(expandeableODE);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  expandeableODE  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandeableODE);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandeableODE);  expandableODE.setTime(t0);	          t0.add(expandableODE);    expandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	22	None	replace
293	[BUG]  [BUGGY]  t0.add(expandableODE);  expandableODE.setTime(t1);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandableODE);  expandableODE.setTime(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandableODE);  expandableODE.setTime(t1);	          t0.add(expandableODE);    expandableODE.setTime(t0);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
294	[BUG]  [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE).expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE).expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                ((        ExpandableStatefulODE)expandableODE).setTime(t0);        ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE).expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);	  	non-compiled	[CE]  illegal  start  of  type	26	None	add
295	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)entries.get(expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)entries.get(expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)entries.get(expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)entries.get(t0);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
296	[BUG]  [BUGGY]  T0  =  equations.getDimension();  [CE]  cannot  find  symbol  T0  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  T0  =  equations.getDimension();  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	T0  =  equations.getDimension();	  t0    =    equations.getDimension()    +    2;    	non-compiled	[CE]  cannot  find  symbol  T0	47	None	replace
297	[BUG]  [BUGGY]  expandableODE.setState(t0,  y,  0,  y.length);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(t0,  y,  0,  y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(t0,  y,  0,  y.length);	  expandableODE.setState(t0,    y.length);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
298	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime0;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime0;  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((    ExpandableStatefulODE)expandableODE).setTime(0);    ((  ExpandableStatefulODE)expandableODE).setTime0;	  	non-compiled	[CE]  not  a  statement	84	None	add
299	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(t0,  expandableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(t0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(t0,  expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
300	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)annotations.get(t0,  expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)annotations.get(t0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)annotations.get(t0,  expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
301	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  t.getMillis(),  expandableODE.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  t.getMillis(),  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  t.getMillis(),  expandableODE.length);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  y1,  0,  y.length);  [CE]  cannot  find  symbol  y1  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  y1,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  y1,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    y1,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  y1	65	None	replace
303	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	133	1	add
304	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	133	1	add
305	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  ArrayStoreException  expandableODE  =  equations.getExpandableState();  [CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  ArrayStoreException  expandableODE  =  equations.getExpandableState();  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    ArrayStoreException  expandableODE  =  equations.getExpandableState();	  	non-compiled	[CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	133	None	add
306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(2);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(2);	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((    ExpandableStatefulODE)expandableODE).setTime(t0);    	compilable	  [FE]  AssertionError  	27	1	replace
307	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(2);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(0);  ((  ExpandableStatefulODE)expandableODE).setTime(2);	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((    ExpandableStatefulODE)expandableODE).setTime(t0);    	compilable	  [FE]  AssertionError  	27	1	replace
308	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  expandableODE,  0,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]        ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  expandableODE,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  expandableODE,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    0,    y0,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
309	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  0,  y0,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionableODE,  0,  y0,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionableODE,  0,  y0,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    0,    y0,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	17	None	replace
310	[BUG]  [BUGGY]  expandableODE.setPrimaryState(t0);  [CE]  method  setPrimaryState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setPrimaryState(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setPrimaryState(t0);	  expandableODE.setTime(t0);    expandableODE.setTime(t0);    	non-compiled	[CE]  method  setPrimaryState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	58	None	replace
311	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(y0,  t.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(y0,  t.length);	  expandableODE.setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	41	None	replace
312	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(convention);  [CE]  cannot  find  symbol  convention  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(convention);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(convention);	  expandableODE.setMaxCheckInterval(maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  convention	19	None	replace
313	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  x0,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  0,  x0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  0,  x0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    x0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	67	None	replace
314	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  x1,  0,  y.length);  [CE]  cannot  find  symbol  x1  [FE]                ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  x1,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  x1,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    x0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  x1	67	None	replace
315	[BUG]  [BUGGY]  Expansion  t0  =  equations,  expansionableODE.getDimension();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  equations,  expansionableODE.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  equations,  expansionableODE.getDimension();	          Expansion    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	79	None	replace
316	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(y0,  expandableODE);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(y0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(y0,  expandableODE);	  ((    ExpandableStatefulODE)expandableODE).setTime(y0);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	83	None	replace
317	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(y0,  t0);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(y0,  t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(y0,  t0);	  ((    ExpandableStatefulODE)expandableODE).setTime(y0);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	83	None	replace
318	[BUG]  [BUGGY]  ExpandableODE.setState(y0);  [CE]  cannot  find  symbol  ExpandableODE  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setState(y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setState(y0);	  ExpandableODE.setState(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	92	None	replace
319	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expansionable.getMillis());  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expansionable.getMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expansionable.getMillis());	  t0    =    Math.max(expandableODE,    expandable.getMillis());    	non-compiled	[CE]  cannot  find  symbol  expansionable	129	None	replace
320	[BUG]  [BUGGY]  t0  =  Math.max(expanableODE,  expandable.getMillis());  [CE]  cannot  find  symbol  expanableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expanableODE,  expandable.getMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expanableODE,  expandable.getMillis());	  t0    =    Math.max(expandableODE,    expandable.getMillis());    	non-compiled	[CE]  cannot  find  symbol  expanableODE	129	None	replace
321	[BUG]  [BUGGY]  t0.add(x0,  y);  [CE]  cannot  find  symbol  x0  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(x0,  y);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(x0,  y);	  t0.add(expandableODE,    y);    	non-compiled	[CE]  cannot  find  symbol  x0	82	None	replace
322	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expansionableODE,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  expansionableODE,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  expansionableODE,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	10	None	replace
323	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(value);  [CE]  cannot  find  symbol  value  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(value);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(value);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol  value	105	None	replace
324	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionableODE,  0,  y0,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	64	None	replace
325	[BUG]  [BUGGY]  expandableODE.setPrimarySize(y0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setPrimarySize(y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setPrimarySize(y0);	  expandableODE.setPrimarySize(t0);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
326	[BUG]  [BUGGY]  expandableODE.setPrimarySize(t1);  [CE]  cannot  find  symbol  t1  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setPrimarySize(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setPrimarySize(t1);	  expandableODE.setPrimarySize(t0);    	non-compiled	[CE]  cannot  find  symbol  t1	128	None	replace
327	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length,  expansionableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length,  expansionableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length,  expansionableODE.length);	  System.arraycopy(expandableODE,    t0,    expandable,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	86	None	replace
328	[BUG]  [BUGGY]  ExpandableODE  t0  =  expandableODE.add(t1);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  expandableODE.add(t1);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  expandableODE.add(t1);  expandableODE.setMaxCheckInterval(t0);	  ExpandableODE    t0    =    expandableODE.add(t0);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
329	[BUG]  [BUGGY]  System.arraycopy(expanableODE,  0,  y,  0,  expansionableODE.length);  [CE]  cannot  find  symbol  expanableODE  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expanableODE,  0,  y,  0,  expansionableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expanableODE,  0,  y,  0,  expansionableODE.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expanableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	55	None	replace
330	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(x0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(x0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)equations.get(x0);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException.arraycopy(expandableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    ArrayStoreException.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
332	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandeableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandeableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandeableODE,  0,  t,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	15	None	add
333	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(equations.getDimension());  [CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(equations.getDimension());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    ArrayStoreException  expandableODE  =  new  ArrayStoreException(equations.getDimension());	  	non-compiled	[CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	15	None	add
334	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException  expandableODE  =  equations.getExpandableState();  [CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException  expandableODE  =  equations.getExpandableState();  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    ArrayStoreException  expandableODE  =  equations.getExpandableState();	  	non-compiled	[CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	15	None	add
335	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [CE]  illegal  start  of  expression  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    return    ExpandableStatefulODE.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
336	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expanableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [CE]  illegal  start  of  expression  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expanableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expanableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    return    ExpandableStatefulODE.getTime();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
337	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  1);  [CE]  no  suitable  method  found  for  max(double,double[],int)  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getPrimaryState(),  1);	          t0    =    Math.max(t0,    expandableODE.getPrimaryState());    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[],int)	121	None	replace
338	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expansionableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expansionableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(expansionableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expansionableODE	111	None	add
339	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	111	None	add
340	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0,  y.length);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0,  y.length);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    y.length);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	32	None	replace
341	[BUG]  [BUGGY]  expandableODE.setValues(y0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValues(y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValues(y0);	  expandableODE.setValues(t0);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
342	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expansionable.getSize());  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expansionable.getSize());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expansionable.getSize());	  t0    =    Math.max(expandableODE,    expandable.getSize());    	non-compiled	[CE]  cannot  find  symbol  expansionable	123	None	replace
343	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandeableODE.get(t0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandeableODE.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandeableODE.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)expandableODE.get(t0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
344	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)extendableODE.get(t0);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)extendableODE.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)extendableODE.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)expandableODE.get(t0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
345	[BUG]  [BUGGY]  expandableODE  =  equations.getDimension();  expandableODE.setSize(t0);  [CE]  cannot  assign  a  value  to  final  variable  expandableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE  =  equations.getDimension();  expandableODE.setSize(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE  =  equations.getDimension();  expandableODE.setSize(t0);	  ExpandableODE    t0    =    equations.getDimension();    expandableODE.setSize(t0);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expandableODE	52	None	replace
346	[BUG]  [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  expansionableODE.setSize(t0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  expansionableODE.setSize(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  equations.getDimension();  expansionableODE.setSize(t0);	  ExpandableODE    t0    =    equations.getDimension();    expandableODE.setSize(t0);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	expandableODE.setTime(t0);        expandableODE.setTime(t0);    new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setTime(t0);	  	compilable	  [FE]  AssertionError  	57	1	add
348	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setTime(t0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setTime(t0);	  	compilable	  [FE]  AssertionError  	57	1	add
349	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setTime(t0);  ExpandableODE.setTime(t0);  [CE]  cannot  find  symbol  ExpandableODE  [FE]      AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setTime(t0);  ExpandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    expandableODE.setTime(t0);  ExpandableODE.setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol  ExpandableODE	57	None	add
350	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(convertibleODE.length);  [CE]  cannot  find  symbol  convertibleODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(convertibleODE.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(convertibleODE.length);	  ExpandableODE.setMaxCheckInterval(maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  convertibleODE	42	None	replace
351	[BUG]  [BUGGY]  t0.add(extendableODE);  [CE]  cannot  find  symbol  extendableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(extendableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(extendableODE);	  t0.add(expandeableODE);    	non-compiled	[CE]  cannot  find  symbol  extendableODE	2	None	replace
352	[BUG]  [BUGGY]  expandableODE.setState(y1);  [CE]  cannot  find  symbol  y1  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(y1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(y1);	  expandableODE.setState(t1);    	non-compiled	[CE]  cannot  find  symbol  y1	6	None	replace
353	[BUG]  [BUGGY]  t0  =  equations.getDimension()  +  expandableODE.length;  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  equations.getDimension()  +  expandableODE.length;  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  equations.getDimension()  +  expandableODE.length;	  t0    =    equations.getDimension()    +    t0.length;    	non-compiled	[CE]  cannot  find  symbol  length	119	None	replace
354	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equivalences.get(t0);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
355	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandeableODE,  0,  y0,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	63	None	add
356	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  system.arraycopy(expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  system  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  system.arraycopy(expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  system.arraycopy(expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  system	63	None	add
357	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandeableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	72	None	add
358	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expansionableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expansionableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expansionableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expansionableODE	72	None	add
359	[BUG]  [BUGGY]  expandableODE.setSize(y1);  [CE]  cannot  find  symbol  y1  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(y1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(y1);	  expandableODE.setSize(t1);    	non-compiled	[CE]  cannot  find  symbol  y1	36	None	replace
360	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  expandable,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	System.arraycopy(expandableODE,  0,  expandable,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    i,    0,    y.length);    	compilable	  [FE]  NullPointerException  	98	1	replace
361	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  expandable,  0,  y.length);  [FE]  NullPointerException  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  expandable,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  expandable,  0,  y.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    i,    0,    y.length);    	compilable	  [FE]  NullPointerException  	98	1	replace
362	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  y);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  y);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  expandableODE,  y);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    expandableODE);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	33	None	replace
363	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0,  expandableODE);  [CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setTime(t0,  y0,  expandableODE);	  ((    ExpandableStatefulODE)expandableODE).setTime(t0,    expandableODE);    	non-compiled	[CE]  method  setTime  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	33	None	replace
364	[BUG]  [BUGGY]  init(t0,  expandableODE,  y0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  init(t0,  expandableODE,  y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	init(t0,  expandableODE,  y0);	          init(t0,    y0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
365	[BUG]  [BUGGY]  expandableODE.setExpandableState(y1);  [CE]  cannot  find  symbol  y1  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(y1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(y1);	  expandableODE.setExpandableState(t1);    	non-compiled	[CE]  cannot  find  symbol  y1	51	None	replace
366	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(t1);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)equivalences.get(t1);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t1);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
367	[BUG]  [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.length());  [CE]  cannot  find  symbol  expansionableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expansionableODE,  expandableODE.length());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expansionableODE,  expandableODE.length());	  t0    =    Math.max(t0,    expandableODE.length());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	30	None	replace
368	[BUG]  [BUGGY]  t0  =  Math.max(expandeableODE,  t.length());  [CE]  cannot  find  symbol  expandeableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandeableODE,  t.length());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandeableODE,  t.length());	  t0    =    Math.max(t0,    expandableODE.length());    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	30	None	replace
369	[BUG]  [BUGGY]  expandableODE.setSize(t0,  y0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setSize(t0,  y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setSize(t0,  y0);	  expandableODE.setSize(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
370	[BUG]  [BUGGY]  Expansion  t0  =  Equations.getInitializedExpansion();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  Equations.getInitializedExpansion();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  Equations.getInitializedExpansion();	          Expansion    t0    =    equations.getInitializedExpansion();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
371	[BUG]  [BUGGY]  ExpandableODE.setState(expandeableODE);  [CE]  cannot  find  symbol  expandeableODE  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setState(expandeableODE);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setState(expandeableODE);	  ExpandableODE.setState(t0);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	68	None	replace
372	[BUG]  [BUGGY]  ExpandableODE.setState(expansion);  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setState(expansion);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setState(expansion);	  ExpandableODE.setState(t0);    	non-compiled	[CE]  cannot  find  symbol  expansion	68	None	replace
373	[BUG]  [BUGGY]  t0  =  Math.max(expansionableODE,  expandable.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expansionableODE,  expandable.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expansionableODE,  expandable.length);	  t0    =    Math.max(expandableODE,    expandable.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	38	None	replace
374	[BUG]  [BUGGY]  t0.add(expandeableODE,  expandable);  [CE]  cannot  find  symbol  expandeableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandeableODE,  expandable);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandeableODE,  expandable);	  t0.add(expandableODE,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	3	None	replace
375	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  t0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionableODE,  t0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionableODE,  t0,  expandableODE,  0,  y.length);	  System.arraycopy(t0,    y,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	138	None	replace
376	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  t0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionableODE,  t0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionableODE,  t0,  y,  0,  expandableODE.length);	  System.arraycopy(t0,    y,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	138	None	replace
377	[BUG]  [BUGGY]  null.add(expandableODE);  expandableODE.setMaxCheckInterval(t0);  [CE]  <null>  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  null.add(expandableODE);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	null.add(expandableODE);  expandableODE.setMaxCheckInterval(t0);	  t0.add(expandeableODE);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  <null>  cannot  be  dereferenced	102	None	replace
378	[BUG]  [BUGGY]  expandableODE.setState(t0,  y0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setState(t0,  y0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setState(t0,  y0);	  expandableODE.setState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
379	[BUG]  [BUGGY]  expandableODE.setPrimarySize(y.length);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setPrimarySize(y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setPrimarySize(y.length);	  expandableODE.setPrimarySize(t0);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
380	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)t0.get(expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)t0.get(expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)t0.get(expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)expandableODE.get(t0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
381	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)t0.get(expanableODE);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)t0.get(expanableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)t0.get(expanableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)expandableODE.get(t0);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
382	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  t,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  t,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	125	None	add
383	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    t,    0,    y.length);    ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  	non-compiled	[CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	125	None	add
384	[BUG]  [BUGGY]  expandableODE.setExpandableState(expanable);  [CE]  cannot  find  symbol  expanable  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setExpandableState(expanable);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setExpandableState(expanable);	  expandableODE.setExpandableState(expandable);    	non-compiled	[CE]  cannot  find  symbol  expanable	89	None	replace
385	[BUG]  [BUGGY]  ExpandableODE  t0  =  expandableODE.add(t0);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  expandableODE.add(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  expandableODE.add(t0);  expandableODE.setTime(t0);	          t0.add(expandableODE);    expandableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
386	[BUG]  [BUGGY]  t0.add(expandableODE);  expansionableODE.setTime(t0);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandableODE);  expansionableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandableODE);  expansionableODE.setTime(t0);	          t0.add(expandableODE);    expandableODE.setTime(t0);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
387	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    t,    0,    y.length);    	compilable	  [FE]  ArrayStoreException  	126	1	replace
388	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    t,    0,    y.length);    	compilable	  [FE]  ArrayStoreException  	126	1	replace
389	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  expandable.length);  [CE]  cannot  find  symbol  length  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  expandable.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  0,  y,  0,  expandable.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,    0,    i,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  length	98	None	replace
390	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandable.length());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandable.length());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandable.length());	  t0    =    Math.max(t0,    expandableODE.length());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
391	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE.getMaxCheckInterval());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE.getMaxCheckInterval());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,  expandableODE.getMaxCheckInterval());	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
392	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((    ExpandableStatefulODE)expandableODE).setTime(t0);    	compilable	  [FE]  AssertionError  	27	1	replace
393	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((    ExpandableStatefulODE)expandableODE).setTime(t0);    	compilable	  [FE]  AssertionError  	27	1	replace
394	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  final  ExpandableStatefulODE  y0  =  new  ExpandableStatefulODE(equations);  expandableODE.setPrimaryState(y  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  final  ExpandableStatefulODE  y0  =  new  ExpandableStatefulODE(equations);  expandableODE.setPrimaryState(y  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  }  else  {  final  ExpandableStatefulODE  y0  =  new  ExpandableStatefulODE(equations);  expandableODE.setPrimaryState(y	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((    ExpandableStatefulODE)expandableODE).setTime(t0);    	non-compiled	[CE]  ')'  expected	27	None	replace
395	[BUG]  [BUGGY]  n.add(expandableODE);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  n.add(expandableODE);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	n.add(expandableODE);  expandableODE.setMaxCheckInterval(t0);	  t0.add(expandeableODE);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  find  symbol  n	102	None	replace
396	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(conventions.getMaxCheckInterval());  [CE]  cannot  find  symbol  conventions  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(conventions.getMaxCheckInterval());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(conventions.getMaxCheckInterval());	  ExpandableODE.setMaxCheckInterval(maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  conventions	42	None	replace
397	[BUG]  [BUGGY]  ExpandableODE.setMaxCheckInterval(convertableODE.getMaxCheckInterval());  [CE]  cannot  find  symbol  convertableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE.setMaxCheckInterval(convertableODE.getMaxCheckInterval());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE.setMaxCheckInterval(convertableODE.getMaxCheckInterval());	  ExpandableODE.setMaxCheckInterval(maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  convertableODE	42	None	replace
398	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y  [CE]  ')'  expected  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    return    ExpandableStatefulODE.getTime();    }    	non-compiled	[CE]  ')'  expected	136	None	replace
399	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  return  ExpandableStatefulODE  [CE]  ';'  expected  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  return  ExpandableStatefulODE  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  return  ExpandableStatefulODE	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    return    ExpandableStatefulODE.getTime();    }    	non-compiled	[CE]  ';'  expected	136	None	replace
400	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  return  ExpandableStateful  [CE]  ';'  expected  [FE]                ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  return  ExpandableStateful  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  return  ExpandableStateful	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    return    ExpandableStatefulODE.getTime();    }    	non-compiled	[CE]  ';'  expected	136	None	replace
401	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  t0,  expandable,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  t0,  expandable,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  t0,  expandable,  0,  expandableODE.length);	  System.arraycopy(expandeableODE,    t0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	87	None	replace
402	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.size());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandableODE.size());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandableODE.size());	  t0    =    Math.max(expandableODE,    expandableODE.getMillis());    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
403	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expanableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expanableODE	72	None	add
404	[BUG]  [BUGGY]  Expansion  t0  =  equations,  scaledEquations.getDimension();  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  equations,  scaledEquations.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  equations,  scaledEquations.getDimension();	          Expansion    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	79	None	replace
405	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(x0);  [CE]  cannot  find  symbol  x0  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(x0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(x0);	  expandableODE.setMaxCheckInterval(constraint);    	non-compiled	[CE]  cannot  find  symbol  x0	93	None	replace
406	[BUG]  [BUGGY]  expansionableODE.setMaxCheckInterval(t0,  y.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expansionableODE.setMaxCheckInterval(t0,  y.length);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expansionableODE.setMaxCheckInterval(t0,  y.length);	  expandableODE.setMaxCheckInterval(t0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	41	None	replace
407	[BUG]  [BUGGY]  ExpandableODE  t0  =  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  expandableODE.add(t0);  expandableODE.setMaxCheckInterval(t1);	  t0.add(expandableODE);    expandableODE.setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
408	[BUG]  [BUGGY]  ExpandableODE  t0  =  expandableODE.add(expandable);  expandableODE.setMaxCheckInterval(t1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  expandableODE.add(expandable);  expandableODE.setMaxCheckInterval(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  expandableODE.add(expandable);  expandableODE.setMaxCheckInterval(t1);	  t0.add(expandableODE);    expandableODE.setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
409	[BUG]  [BUGGY]  expandableODE.setValues(y);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValues(y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValues(y);	  expandableODE.setValues(t0);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
410	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandable.toMillis());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandable.toMillis());  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandable.toMillis());	  t0    =    Math.max(t0,    expandableODE.toMillis());    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
411	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expantableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expantableODE  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(y0,  0,  expandableODE,  0,  y.length);  System.arraycopy(expantableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(y0,    0,    expandableODE,    0,    y.length);    System.arraycopy(expantableODE,  0,  expandableODE,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  expantableODE	111	None	add
412	[BUG]  [BUGGY]  int  t0  =  equations.getDimension()  -  1;  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  int  t0  =  equations.getDimension()  -  1;  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	int  t0  =  equations.getDimension()  -  1;	  t0    =    equations.getDimension()    -    1;    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	48	None	replace
413	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  expandableODE.length);  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  expandableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,  t0,  expandable,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    expandableODE.length);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
414	[BUG]  [BUGGY]  expandableODE.setTime(t1);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t1);	  expandableODE.setTime(t0);    expandableODE.setTime(t1);    	non-compiled	[CE]  cannot  find  symbol  t1	62	None	replace
415	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	expandableODE.setTime(1);	  expandableODE.setTime(t0);    expandableODE.setTime(t1);    	compilable	  [FE]  AssertionError  	62	1	replace
416	[BUG]  [BUGGY]  expandableODE.setTime(1);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(1);	  expandableODE.setTime(t0);    expandableODE.setTime(t1);    	compilable	  [FE]  AssertionError  	62	1	replace
417	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException.init(expandableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  ArrayStoreException.init(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandableODE,    0,    t,    0,    y.length);    ArrayStoreException.init(expandableODE,  0,  t,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
418	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	53	1	add
419	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	53	1	add
420	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	53	1	add
421	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  t,  0,  y.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	53	1	add
422	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expandableODE,  0,  y,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y,        0,        y.length);        System.arraycopy(expandableODE,    0,    y,    0,    y.length);    ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  y,  0,  y.length);	  	non-compiled	[CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	53	None	add
423	[BUG]  [BUGGY]  expandableODE.setMaxCheckInterval(y1);  [CE]  cannot  find  symbol  y1  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setMaxCheckInterval(y1);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setMaxCheckInterval(y1);	  expandableODE.setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol  y1	20	None	replace
424	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  expandableODE  =  new  ExpandableStatefulODE(equations);  }  [CE]  cannot  assign  a  value  to  final  variable  expandableODE  [FE]          ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  expandableODE  =  new  ExpandableStatefulODE(equations);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  expandableODE  =  new  ExpandableStatefulODE(equations);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expandableODE	135	None	replace
425	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  ExpandableStatefulODE  [CE]  ';'  expected  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  ExpandableStatefulODE  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  ExpandableStatefulODE	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
426	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  expandableODE  =  new  Expand  [CE]  '('  or  '['  expected  [FE]              ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  expandableODE  =  new  Expand  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  else  {  expandableODE  =  new  Expand	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    else    {    expandableODE    =    new    ExpandableStatefulODE(equations);    }    	non-compiled	[CE]  '('  or  '['  expected	135	None	replace
427	[BUG]  [BUGGY]  Expansion  t0  =  equations,  expansionableODE.getInitializedExpansion();  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Expansion  t0  =  equations,  expansionableODE.getInitializedExpansion();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Expansion  t0  =  equations,  expansionableODE.getInitializedExpansion();	          Expansion    t0    =    equations.getInitializedExpansion();    	non-compiled	[CE]  ';'  expected	80	None	replace
428	[BUG]  [BUGGY]  y.add(expandableODE,  t0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  y.add(expandableODE,  t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	y.add(expandableODE,  t0);	  t0.add(expandableODE,    y);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
429	[BUG]  [BUGGY]  t0.add(expandableODE,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expandableODE,  expansionable);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expandableODE,  expansionable);	  t0.add(expandableODE,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansionable	3	None	replace
430	[BUG]  [BUGGY]  t0.add(expanableODE,  expandable);  [CE]  cannot  find  symbol  expanableODE  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(expanableODE,  expandable);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(expanableODE,  expandable);	  t0.add(expandableODE,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	3	None	replace
431	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(t1);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(t1);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t1);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
432	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)entries.get(t1);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)entries.get(t1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)entries.get(t1);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t1);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
433	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  t0,  y,  0,  y.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expandeableODE,  t0,  y,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expandeableODE,  t0,  y,  0,  y.length);	  System.arraycopy(t0,    y,    expandableODE,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	138	None	replace
434	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)annotations.get(expandableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)annotations.get(expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)annotations.get(expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
435	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)variables.get(expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
436	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)this.equivalences.get(t0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)this.equivalences.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)this.equivalences.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)variables.get(t0);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
437	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandable.getPrimaryState());  [CE]  no  suitable  method  found  for  max(ExpandableStatefulODE,double[])  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandable.getPrimaryState());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandable.getPrimaryState());	          t0    =    Math.max(t0,    expandableODE.getPrimaryState());    	non-compiled	[CE]  no  suitable  method  found  for  max(ExpandableStatefulODE,double[])	121	None	replace
438	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y1);  [CE]  cannot  find  symbol  y1  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y1);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	((  ExpandableStatefulODE)expandableODE).setMaxCheckInterval(y1);	  ((    ExpandableStatefulODE)expandableODE).setMaxCheckInterval(t1);    	non-compiled	[CE]  cannot  find  symbol  y1	105	None	replace
439	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    	compilable	  [FE]  ArrayStoreException  	134	1	replace
440	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    	compilable	  [FE]  ArrayStoreException  	134	1	replace
441	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  }  [CE]  cannot  find  symbol  expanableODE  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  if(expandableODE!=  null)  {  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	if(expandableODE!=  null)  {  System.arraycopy(expanableODE,  0,  expandableODE,  0,  y.length);  }	          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    	non-compiled	[CE]  cannot  find  symbol  expanableODE	134	None	replace
442	[BUG]  [BUGGY]  t0.add(new  ExpandableStatefulODE(y0));  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0.add(new  ExpandableStatefulODE(y0));  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0.add(new  ExpandableStatefulODE(y0));	  t0.add(expanableODE);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	110	None	replace
443	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	63	1	add
444	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	63	1	add
445	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	63	1	add
446	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	63	1	add
447	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y1,  0,  y.length);  [CE]  cannot  find  symbol  y1  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y1,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  System.arraycopy(expandableODE,  0,  y1,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  y1	63	None	add
448	[BUG]  [BUGGY]  init(t0,  y,  expandableODE);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  init(t0,  y,  expandableODE);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	init(t0,  y,  expandableODE);	          init(t0,    y0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
449	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandables.get(t0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandables.get(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandables.get(t0);	  ExpandableODE    t0    =(ExpandableStatefulODE)equivalences.get(t0);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
450	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  ExpandableODE  t0  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  ExpandableODE  t0  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    ExpandableODE  t0  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
451	[BUG]  [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setDimension(t0);  expandableODE.setTime(t0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setTime(t0);    expandableODE.setTime(t0);  expandableODE.setDimension(t0);  expandableODE.setTime(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setTime(t0);        expandableODE.setTime(t0);    expandableODE.setDimension(t0);  expandableODE.setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
452	[BUG]  [BUGGY]  Integrator  t0  =  equations,  scaledEquations.getDimension();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Integrator  t0  =  equations,  scaledEquations.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Integrator  t0  =  equations,  scaledEquations.getDimension();	          Integrator    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	122	None	replace
453	[BUG]  [BUGGY]  Integrator  t0  =  equations,  equations.getDimension();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  Integrator  t0  =  equations,  equations.getDimension();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	Integrator  t0  =  equations,  equations.getDimension();	          Integrator    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	122	None	replace
454	[BUG]  [BUGGY]  y0  =  equations.getDimension();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  y0  =  equations.getDimension();  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	y0  =  equations.getDimension();	  t0    =    equations.getDimension()    +    1;    	non-compiled	[CE]  incompatible  types	46	None	replace
455	[BUG]  [BUGGY]  expansionableODE.setExpandableState(t0,  y);  [CE]  cannot  find  symbol  expansionableODE  [FE]                AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expansionableODE.setExpandableState(t0,  y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expansionableODE.setExpandableState(t0,  y);	  expandableODE.setExpandableState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	50	None	replace
456	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expandable.getPrimarySize());  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expandable.getPrimarySize());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expandable.getPrimarySize());	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
457	[BUG]  [BUGGY]  t0  =  Math.max(expanableODE,  expandable.getPrimarySize());  [CE]  cannot  find  symbol  expanableODE  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expanableODE,  expandable.getPrimarySize());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expanableODE,  expandable.getPrimarySize());	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol  expanableODE	120	None	replace
458	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expansionableODE.getPrimarySize());  [CE]  cannot  find  symbol  expansionableODE  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expansionableODE.getPrimarySize());  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expansionableODE.getPrimarySize());	          t0    =    Math.max(t0,    expandableODE.getPrimarySize());    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	120	None	replace
459	[BUG]  [BUGGY]  expandableODE.setValue(y);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setValue(y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setValue(y);	  expandableODE.setValue(t0);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
460	[BUG]  [BUGGY]  ExpandableODE  t0  =  expandableODE.getState();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =  expandableODE.getState();  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =  expandableODE.getState();	  ExpandableODE.setState(t0);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
461	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    y0,    0,    y.length);    System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        y0,        0,        y.length);        System.arraycopy(expandableODE,    0,    t0,    0,    y.length);    ArrayStoreException  expandableODE  =  new  ArrayStoreException(expandable.length);  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  	non-compiled	[CE]  variable  expandableODE  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	114	None	add
462	[BUG]  [BUGGY]  t0  =  equations.getDimension()  +  t1.length;  [CE]  cannot  find  symbol  t1  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  equations.getDimension()  +  t1.length;  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  equations.getDimension()  +  t1.length;	  t0    =    equations.getDimension()    +    t0.length;    	non-compiled	[CE]  cannot  find  symbol  t1	119	None	replace
463	[BUG]  [BUGGY]  t.add(expandableODE,  expandable);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t.add(expandableODE,  expandable);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t.add(expandableODE,  expandable);	  t0.add(expandableODE,    t);    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
464	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [CE]  illegal  start  of  expression  [FE]    ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
465	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	add	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	  	compilable	  [FE]  ArrayStoreException  	133	1	add
466	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	  	compilable	  [FE]  ArrayStoreException  	133	1	add
467	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expanableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [CE]  illegal  start  of  expression  [FE]        ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expanableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expanableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
468	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y  [CE]  ')'  expected  [FE]          ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y	  	non-compiled	[CE]  ')'  expected	133	None	add
469	[BUG]  [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length  [CE]  ')'  expected  [FE]            ArrayStoreException    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  }  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                System.arraycopy(expandableODE,        0,        expandableODE,        0,        y.length);        if(expandableODE!=    null)    {    System.arraycopy(expandableODE,    0,    expandableODE,    0,    y.length);    }    if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  if(expandableODE!=  null)  {  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length	  	non-compiled	[CE]  ')'  expected	133	None	add
470	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  0,  y,  0,  expansionableODE.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]            ArrayStoreException      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  System.arraycopy(expansionableODE,  0,  y,  0,  expansionableODE.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	System.arraycopy(expansionableODE,  0,  y,  0,  expansionableODE.length);	          System.arraycopy(expandableODE,    0,    y,    0,    y.length);    System.arraycopy(expansionODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	99	None	replace
471	[BUG]  [BUGGY]  expansionableODE.setState(t0,  y);  [CE]  cannot  find  symbol  expansionableODE  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expansionableODE.setState(t0,  y);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expansionableODE.setState(t0,  y);	  expandableODE.setState(t0,    y);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	5	None	replace
472	[BUG]  [BUGGY]  (1  <  <  ExpandableStatefulODE)expandableODE).setTime(t0);  [CE]  >  expected  [FE]          AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  (1  <  <  ExpandableStatefulODE)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	(1  <  <  ExpandableStatefulODE)expandableODE).setTime(t0);	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    (1(    ExpandableStatefulODE)expandableODE).setTime(t0);    	non-compiled	[CE]  >  expected	28	None	replace
473	[BUG]  [BUGGY]  (1  <  ExpandableStatefulODE>)expandableODE).setTime(t0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  (1  <  ExpandableStatefulODE>)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	(1  <  ExpandableStatefulODE>)expandableODE).setTime(t0);	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    (1(    ExpandableStatefulODE)expandableODE).setTime(t0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
474	[BUG]  [BUGGY]  (1  <  <  ExpandableStatefulODE>)expandableODE).setTime(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  (1  <  <  ExpandableStatefulODE>)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	(1  <  <  ExpandableStatefulODE>)expandableODE).setTime(t0);	          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    (1(    ExpandableStatefulODE)expandableODE).setTime(t0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
475	[BUG]  [BUGGY]  expandableODE.setT0(t0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE.setT0(t0);  [BUGGY]        integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE.setT0(t0);	  expandableODE.setTime(t0);    extendableODE.setTime(t0);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
476	[BUG]  [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  ts.length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(t0,  expandableODE.getMillis(),  ts.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(t0,  expandableODE.getMillis(),  ts.length);	  t0    =    Math.max(t0,    expandableODE.getMillis(),    t.length);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
477	[BUG]  [BUGGY]  expandableODE  =  expandable.add(t0);  expandableODE.setMaxCheckInterval(t0);  [CE]  cannot  assign  a  value  to  final  variable  expandableODE  [FE]                  AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  expandableODE  =  expandable.add(t0);  expandableODE.setMaxCheckInterval(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	expandableODE  =  expandable.add(t0);  expandableODE.setMaxCheckInterval(t0);	  ExpandableODE    t0    =    expandableODE.add(t0);    expandableODE.setMaxCheckInterval(t0);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  expandableODE	132	None	replace
478	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandables.get(t0,  expandableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandables.get(t0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandables.get(t0,  expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
479	[BUG]  [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandable.get(t0,  expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  ExpandableODE  t0  =(ExpandableStatefulODE)expandable.get(t0,  expandableODE);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	ExpandableODE  t0  =(ExpandableStatefulODE)expandable.get(t0,  expandableODE);	  ExpandableODE    t0    =(ExpandableStatefulODE)equations.get(t0,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
480	[BUG]  [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulEEE)expandableODE).setTime(t0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]          ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulEEE)expandableODE).setTime(t0);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	                ((        ExpandableStatefulODE)expandableODE).setTime(t0);        ((    ExpandableStatefulODE)expandableODE).setTime(t0);    ((  ExpandableStatefulODE)expandableODE).setTime(t0);  ((  ExpandableStatefulEEE)expandableODE).setTime(t0);	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
481	[BUG]  [BUGGY]  t0  =  Math.max(expandableODE,  expansionable.length);  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);      [BUGGY]  t0  =  Math.max(expandableODE,  expansionable.length);  [BUGGY]      expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	210	210	1	replace	t0  =  Math.max(expandableODE,  expansionable.length);	  t0    =    Math.max(expandableODE,    expandable.length);    	non-compiled	[CE]  cannot  find  symbol  expansionable	38	None	replace
