bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  This.eventsStates  =  new  java.util.ArrayList  <  Integer>();  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  This.eventsStates  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	This.eventsStates  =  new  java.util.ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  This	48	None	replace
2	[BUG]  [BUGGY]  setEvaluations(eventsStates,  stepStart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  stepStart);	  setEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
3	[BUG]  [BUGGY]  setEvaluations(eventsStates,  stepStart,  evaluations);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  stepStart,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  stepStart,  evaluations);	  setEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
4	[BUG]  [BUGGY]  setEvaluations(eventsStates,  steps);  [CE]  cannot  find  symbol  steps  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  steps);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  steps);	  setEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  steps	64	None	replace
5	[BUG]  [BUGGY]  setEvaluations(eventsStates,  stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  stepsInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  stepsInitialized);	  setEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	64	None	replace
6	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  evaluations);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  evaluations);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	29	None	replace
7	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	29	None	replace
8	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  statesInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  statesInitialized);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	29	None	replace
9	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  evaluates);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  evaluates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  evaluates);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	29	None	replace
10	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
11	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	97	1	replace
13	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	97	1	replace
14	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
15	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
16	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
17	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  resetOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    false;    resetOccurred  =  false;	  	compilable	  [FE]  AssertionError  	91	1	add
19	[BUG]  [BUGGY]  resetOccurred  =  false;  resetOccurred  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  resetOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    resetOccurred  =  false;	  	compilable	  [FE]  AssertionError  	91	1	add
20	[BUG]  [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  AssertionError>();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  AssertionError>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  AssertionError>();	  	non-compiled	[CE]  incompatible  types	91	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	91	1	add
22	[BUG]  [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	91	1	add
23	[BUG]  [BUGGY]  resetOccurred  =  false;  setOccurred  =  false;  [CE]  cannot  find  symbol  setOccurred  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  setOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    setOccurred  =  false;	  	non-compiled	[CE]  cannot  find  symbol  setOccurred	91	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	91	1	add
25	[BUG]  [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	91	1	add
26	[BUG]  [BUGGY]  setEvaluations(eventsStates,  stepStart,  statesInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  stepStart,  statesInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  stepStart,  statesInitialized);	  setEvaluations(eventsStates,    statesInitialized);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	3	1	add
28	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	3	1	add
29	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	3	None	add
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	3	1	add
31	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	3	1	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	3	1	add
33	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	3	1	add
34	[BUG]  [BUGGY]  resetOccurred  =  isLastStep  +  stepSize;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep  +  stepSize;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred  =  isLastStep  +  stepSize;	  resetOccurred    =    isLastStep;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	75	None	replace
35	[BUG]  [BUGGY]  resetOccurred  =  isLastStep  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep  +  1;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred  =  isLastStep  +  1;	  resetOccurred    =    isLastStep;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	75	None	replace
36	[BUG]  [BUGGY]  resetOccurred  =  isLastStep  +  stepStart;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep  +  stepStart;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred  =  isLastStep  +  stepStart;	  resetOccurred    =    isLastStep;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	75	None	replace
37	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this.  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
38	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	80	None	add
39	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
40	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
41	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	70	1	add
43	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	70	1	add
44	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	70	None	add
45	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	70	None	add
46	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	70	None	add
47	[BUG]  [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  unexpected  type  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  unexpected  type	4	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
49	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
51	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
52	[BUG]  [BUGGY]  setEventsStates(eventsStates,  stepStart);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEventsStates(eventsStates,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEventsStates(eventsStates,  stepStart);	          setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
53	[BUG]  [BUGGY]  setEventsStates(events);  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEventsStates(events);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEventsStates(events);	          setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  events	67	None	replace
54	[BUG]  [BUGGY]  setEventsStates(eventsStates.size());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEventsStates(eventsStates.size());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEventsStates(eventsStates.size());	          setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
56	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	16	1	add
58	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	16	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	16	1	add
60	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	16	1	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	16	1	add
62	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	16	1	add
63	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [CE]  cannot  find  symbol  isFirstStep  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	16	None	add
64	[BUG]  [BUGGY]  this.eventsStates  =  new  HashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  HashSet  <  Incrementor>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  HashSet  <  Incrementor>();	  this.eventsStates    =    new    LinkedHashSet    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
65	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize);	  stepHandlers.add(new    Integer(stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	27	None	replace
66	[BUG]  [BUGGY]  setEvaluations(false,  isLastStep);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  isLastStep);	  setEvaluations(false,    evaluates);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
67	[BUG]  [BUGGY]  setEvaluations(true,  evaluations);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(true,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(true,  evaluations);	  setEvaluations(false,    evaluates);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
68	[BUG]  [BUGGY]  setEvaluations(false,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  stepSize);	  setEvaluations(false,    evaluates);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
69	[BUG]  [BUGGY]  setEvaluations(true,  evaluates);  [CE]  cannot  find  symbol  evaluates  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(true,  evaluates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(true,  evaluates);	  setEvaluations(false,    evaluates);    	non-compiled	[CE]  cannot  find  symbol  evaluates	33	None	replace
70	[BUG]  [BUGGY]  setEvaluations(false,  stepStart,  evaluations);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  stepStart,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  stepStart,  evaluations);	  setEvaluations(true,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
71	[BUG]  [BUGGY]  setEvaluations(true,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(true,  stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(true,  stepSize);	  setEvaluations(true,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
72	[BUG]  [BUGGY]  setEvaluations(false,  stepStart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  stepStart);	  setEvaluations(true,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
73	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventsState>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventsState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  TreeSet  <  EventsState>();	  this.eventsStates    =    new    LinkedList    <    EventsState>();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
74	[BUG]  [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  not  a  statement	69	None	replace
75	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(0),  stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(0),  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(0),  stepStart);	  stepHandlers.add(new    Integer(0));    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	30	None	replace
76	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(0),  stepSize);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(0),  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(0),  stepSize);	  stepHandlers.add(new    Integer(0));    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	30	None	replace
77	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(0),  stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(0),  stepsInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(0),  stepsInitialized);	  stepHandlers.add(new    Integer(0));    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	30	None	replace
78	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(0),  evaluations);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(0),  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(0),  evaluations);	  stepHandlers.add(new    Integer(0));    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	30	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  resetOccurred  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    isLastStep;    resetOccurred  =  isLastStep;	  	compilable	  [FE]  AssertionError  	74	1	add
80	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  resetOccurred  =  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  resetOccurred  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    resetOccurred  =  isLastStep;	  	compilable	  [FE]  AssertionError  	74	1	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  isLastStep  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    isLastStep;    isLastStep  =  isLastStep;	  	compilable	  [FE]  AssertionError  	74	1	add
82	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  isLastStep  =  isLastStep;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  isLastStep  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    isLastStep  =  isLastStep;	  	compilable	  [FE]  AssertionError  	74	1	add
83	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  setOccurred  =  isLastStep;  [CE]  cannot  find  symbol  setOccurred  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  setOccurred  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    setOccurred  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  setOccurred	74	None	add
84	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  setOccurred(isLastStep);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  setOccurred(isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    setOccurred(isLastStep);	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep)  {  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    isLastStep;    if(isLastStep)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  AssertionError  	74	1	add
86	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep)  {  setMaxEvaluations(1);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep)  {  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    if(isLastStep)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  AssertionError  	74	1	add
87	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	84	None	replace
88	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  evaluations);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  evaluations);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	84	None	replace
89	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  statesInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  statesInitialized);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	84	None	replace
90	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  evaluates);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  evaluates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep,  evaluates);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	84	None	replace
91	[BUG]  [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  not  a  statement	82	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	82	1	replace
93	[BUG]  [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	82	1	replace
94	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeList  <  EventState>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  TreeList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  TreeList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
95	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
96	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
97	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
98	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  evaluates);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  evaluates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  evaluates);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    evaluates);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	85	None	replace
99	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  isLastStep);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  isLastStep);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    evaluates);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	85	None	replace
100	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  statesInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  statesInitialized);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    evaluates);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	85	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	90	1	replace
102	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	90	1	replace
103	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeList  <  Increment>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  TreeList  <  Increment>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  TreeList  <  Increment>();	  this.eventsStates    =    new    TreeSet    <    Increment>();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
104	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  evaluations);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  evaluations);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    evaluations);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	53	None	replace
105	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluations,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluations,  isLastStep);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluations,  isLastStep);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    evaluations);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	53	None	replace
106	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluations,  statesInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluations,  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluations,  statesInitialized);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    evaluations);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	53	None	replace
107	[BUG]  [BUGGY]  resetOccurred  = " ";  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  = " ";  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred  = " ";	  resetOccurred    =    true;    	non-compiled	[CE]  incompatible  types	2	None	replace
108	[BUG]  [BUGGY]  setOccurred  =  false;  [CE]  cannot  find  symbol  setOccurred  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setOccurred  =  false;	  resetOccurred    =    true;    	non-compiled	[CE]  cannot  find  symbol  setOccurred	2	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	58	1	add
110	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	58	1	add
111	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	non-compiled	[CE]  ';'  expected	58	None	add
112	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	58	None	add
113	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
114	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
115	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
116	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
117	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);  [CE]  cannot  find  symbol  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
118	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setLastStep(stepSize);  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  setLastStep(stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  setLastStep(stepSize);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
119	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	66	1	replace
120	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	66	1	replace
121	[BUG]  [BUGGY]  this.eventsStates  =  new  HashSet  <  Increment>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  HashSet  <  Increment>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  HashSet  <  Increment>();	  this.eventsStates    =    new    LinkedHashSet    <    Increment>();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	89	1	add
123	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	89	1	add
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	89	1	add
125	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	89	1	add
126	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	  	non-compiled	[CE]  ';'  expected	89	None	add
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	89	1	add
128	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	89	1	add
129	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>()  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>()  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>()	  	non-compiled	[CE]  ';'  expected	89	None	add
130	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
131	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
132	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
133	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
134	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
135	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
136	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
137	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    true;    resetOccurred  =  true;	  	compilable	  [FE]  AssertionError  	1	1	add
139	[BUG]  [BUGGY]  resetOccurred  =  true;  resetOccurred  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    resetOccurred  =  true;	  	compilable	  [FE]  AssertionError  	1	1	add
140	[BUG]  [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  AssertionError>();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  AssertionError>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    this.eventsStates  =  new  ArrayList  <  AssertionError>();	  	non-compiled	[CE]  incompatible  types	1	None	add
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	1	1	add
142	[BUG]  [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	1	1	add
143	[BUG]  [BUGGY]  resetOccurred  =  true;  setOccurred  =  true;  [CE]  cannot  find  symbol  setOccurred  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  setOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    setOccurred  =  true;	  	non-compiled	[CE]  cannot  find  symbol  setOccurred	1	None	add
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	1	1	add
145	[BUG]  [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	1	1	add
146	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  setEvents(eventsStates);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  setEvents(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  setEvents(eventsStates);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setEvents(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
147	[BUG]  [BUGGY]  eventsStates  =  new  ArrayList  <  EventState>();  setEvents(eventsStates);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  eventsStates  =  new  ArrayList  <  EventState>();  setEvents(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	eventsStates  =  new  ArrayList  <  EventState>();  setEvents(eventsStates);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setEvents(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
148	[BUG]  [BUGGY]  setEvaluations(false,  evaluations,  isLastStep);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  evaluations,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  evaluations,  isLastStep);	  setEvaluations(false,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
149	[BUG]  [BUGGY]  setEvaluations(false,  stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  stepsInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  stepsInitialized);	  setEvaluations(false,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	32	None	replace
150	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
151	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
152	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
153	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
154	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMinEvaluations(-1);  [CE]  cannot  find  symbol  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMinEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMinEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
155	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
156	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	  	compilable	  [FE]  UnsupportedOperationException  	42	1	add
157	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
158	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
159	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
160	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	6	None	add
161	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
162	[BUG]  [BUGGY]  resetOccurred(stepSize);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred(stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred(stepSize);	  resetOccurred(stepStart);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
163	[BUG]  [BUGGY]  resetOccurred(eventsStates);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred(eventsStates);	  resetOccurred(stepStart);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
164	[BUG]  [BUGGY]  resetOccurred(events);  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred(events);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred(events);	  resetOccurred(stepStart);    	non-compiled	[CE]  cannot  find  symbol  events	68	None	replace
165	[BUG]  [BUGGY]  resetOccurred(stepSize,  stepStart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred(stepSize,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred(stepSize,  stepStart);	  resetOccurred(stepStart);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  AssertionError  	81	1	replace
167	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  AssertionError  	81	1	replace
168	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  evaluations);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,Incrementor)  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  evaluations);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,Incrementor)	93	None	replace
169	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  evaluations);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Incrementor)  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  evaluations);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Incrementor)	93	None	replace
170	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(eventsStates,  this.eventsStates);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,Collection<EventState>)  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(eventsStates,  this.eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.synchronizedList(eventsStates,  this.eventsStates);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,Collection<EventState>)	93	None	replace
171	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(eventsStates);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>)  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.synchronizedList(eventsStates);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>)	93	None	replace
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	86	1	add
173	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	86	1	add
174	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	86	None	add
175	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	86	None	add
176	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	86	None	add
177	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(1)  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(1)  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(1)	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  ';'  expected	19	None	replace
178	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  not  a  statement	19	None	replace
179	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    This.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  This	24	None	replace
180	[BUG]  [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    This.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  incompatible  types	24	None	replace
181	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	96	1	add
182	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	96	1	add
183	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	96	1	add
184	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	96	1	add
185	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  hasLastStep  =  true;  [CE]  cannot  find  symbol  hasLastStep  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  hasLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  hasLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	96	None	add
186	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  ISLastStep  =  true;  [CE]  cannot  find  symbol  ISLastStep  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  ISLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  ISLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  ISLastStep	96	None	add
187	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
188	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
189	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
190	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
191	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
192	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
193	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
194	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
195	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  This	83	None	replace
196	[BUG]  [BUGGY]  setOccurred  =  true;  [CE]  cannot  find  symbol  setOccurred  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setOccurred  =  true;	  resetOccurred    =    false;    	non-compiled	[CE]  cannot  find  symbol  setOccurred	92	None	replace
197	[BUG]  [BUGGY]  ResetOccurred  =  true;  [CE]  cannot  find  symbol  ResetOccurred  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ResetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ResetOccurred  =  true;	  resetOccurred    =    false;    	non-compiled	[CE]  cannot  find  symbol  ResetOccurred	92	None	replace
198	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));	  stepHandlers.add(new    Integer(stepStart,    stepSize,    isLastStep));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)	88	None	replace
199	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep),  evaluations);  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep),  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep),  evaluations);	  stepHandlers.add(new    Integer(stepStart,    stepSize,    isLastStep));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)	88	None	replace
200	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep,  evaluations));  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean,Incrementor)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep,  evaluations));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep,  evaluations));	  stepHandlers.add(new    Integer(stepStart,    stepSize,    isLastStep));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean,Incrementor)	88	None	replace
201	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep),  statesInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep),  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep),  statesInitialized);	  stepHandlers.add(new    Integer(stepStart,    stepSize,    isLastStep));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)	88	None	replace
202	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  This	38	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	37	1	add
204	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	37	1	add
205	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  ';'  expected	37	None	add
206	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	37	None	add
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	71	1	replace
208	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	71	1	replace
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	22	1	add
210	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	22	1	add
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	22	1	add
212	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	22	1	add
213	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	22	1	add
214	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	22	1	add
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	22	1	add
216	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	22	1	add
217	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [CE]  cannot  find  symbol  isFirstStep  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	22	None	add
218	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
219	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
220	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
221	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newArrayList();  setEventsStates(-1);  [CE]  cannot  find  symbol  Lists  [FE]                  UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Lists.newArrayList();  setEventsStates(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Lists.newArrayList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  cannot  find  symbol  Lists	44	None	replace
222	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	compilable	  [FE]  UnsupportedOperationException  	46	1	replace
223	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	compilable	  [FE]  UnsupportedOperationException  	46	1	replace
224	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	compilable	  [FE]  UnsupportedOperationException  	46	1	replace
225	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	compilable	  [FE]  UnsupportedOperationException  	46	1	replace
226	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	34	1	add
227	[BUG]  [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	34	1	add
228	[BUG]  [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  This.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  This.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    This.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol  This	34	None	add
229	[BUG]  [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMinEvaluations(-1);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMinEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    this.eventsStates  =  new  ArrayList  <  EventState>();  setMinEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
230	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	34	1	add
231	[BUG]  [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	34	1	add
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	73	1	replace
233	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	73	1	replace
234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	73	1	replace
235	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	73	1	replace
236	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setMaxEvaluations(1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	73	1	replace
237	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setMaxEvaluations(1);  }  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setMaxEvaluations(1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  MaxCountExceededException  	73	1	replace
238	[BUG]  [BUGGY]  setEvaluations(eventsStates,  evaluations.values());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  evaluations.values());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  evaluations.values());	  setEvaluations(eventsStates.values());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
239	[BUG]  [BUGGY]  setEvaluations(eventsStates,  evaluates.values());  [CE]  cannot  find  symbol  evaluates  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  evaluates.values());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  evaluates.values());	  setEvaluations(eventsStates.values());    	non-compiled	[CE]  cannot  find  symbol  evaluates	65	None	replace
240	[BUG]  [BUGGY]  setEvaluations(eventsStates.values(),  evaluations);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates.values(),  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates.values(),  evaluations);	  setEvaluations(eventsStates.values());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
241	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  statesInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  statesInitialized);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    statesInitialized);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	54	None	replace
242	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Lists.newArrayList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Lists.newArrayList();	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Lists	41	None	replace
243	[BUG]  [BUGGY]  this.eventsStates  =  new  HashSet  <  Integer>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  HashSet  <  Integer>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  HashSet  <  Integer>();	  this.eventsStates    =    new    LinkedHashSet    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	87	1	replace
245	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	87	1	replace
246	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
247	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
248	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
249	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
250	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  This  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    This.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	11	None	add
251	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  setEventsStates(-1);  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  setEventsStates(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();  setEventsStates(-1);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
252	[BUG]  [BUGGY]  setOccurred(false);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setOccurred(false);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setOccurred(false);	  setOccurred(true);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
253	[BUG]  [BUGGY]  setOccurred(true,  isLastStep);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setOccurred(true,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setOccurred(true,  isLastStep);	  setOccurred(true);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
254	[BUG]  [BUGGY]  setOccurred(false,  isLastStep);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setOccurred(false,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setOccurred(false,  isLastStep);	  setOccurred(true);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
255	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
256	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
257	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	40	None	add
258	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
259	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
260	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
261	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
262	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  evaluations));  [CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  evaluations));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  evaluations));	  stepHandlers.add(new    Integer(stepStart,    stepSize,    evaluations));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor)	55	None	replace
263	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations,  isLastStep));  [CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor,boolean)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations,  isLastStep));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations,  isLastStep));	  stepHandlers.add(new    Integer(stepStart,    stepSize,    evaluations));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor,boolean)	55	None	replace
264	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  eventsStates));  [CE]  no  suitable  constructor  found  for  Integer(double,double,Collection<EventState>)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  eventsStates));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  eventsStates));	  stepHandlers.add(new    Integer(stepStart,    stepSize,    evaluations));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,Collection<EventState>)	55	None	replace
265	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations),  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations),  isLastStep);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations),  isLastStep);	  stepHandlers.add(new    Integer(stepStart,    stepSize,    evaluations));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor)	55	None	replace
266	[BUG]  [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [CE]  cannot  find  symbol  Lists  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Lists.  <  EventState>emptyList();	  this.eventsStates    =    Collections.    <    EventState>emptyList();    	non-compiled	[CE]  cannot  find  symbol  Lists	12	None	replace
267	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	20	1	add
268	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	20	1	add
269	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	20	1	add
270	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	20	1	add
271	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	20	1	add
272	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	20	1	add
273	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [CE]  cannot  find  symbol  isFirstStep  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	20	None	add
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	20	1	add
275	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-2);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	20	1	add
276	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  LinkedList  <  AssertionError>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  LinkedList  <  AssertionError>();	          this.eventsStates    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
277	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedHashSet  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  LinkedHashSet  <  AssertionError>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  LinkedHashSet  <  AssertionError>();	          this.eventsStates    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
278	[BUG]  [BUGGY]  this.eventsStates  =  new  java.util.ArrayList  <  AssertionError>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  java.util.ArrayList  <  AssertionError>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  java.util.ArrayList  <  AssertionError>();	          this.eventsStates    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  incompatible  types	36	None	replace
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
280	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	72	1	add
282	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	72	1	add
283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	72	1	add
284	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	72	1	add
285	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	72	1	add
286	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-2);	  	compilable	  [FE]  AssertionError  	72	1	add
287	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  statesInitialized));  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  statesInitialized));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  statesInitialized));	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)	28	None	replace
288	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setEvents(-1);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setEvents(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  setEvents(-1);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
289	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  setMaxEvaluations(-1);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
290	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(1);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	compilable	  [FE]  MaxCountExceededException  	35	1	replace
291	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(1);  [FE]  MaxCountExceededException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(1);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	compilable	  [FE]  MaxCountExceededException  	35	1	replace
292	[BUG]  [BUGGY]  setEvaluations(errors);  [CE]  cannot  find  symbol  errors  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(errors);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(errors);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol  errors	76	None	replace
293	[BUG]  [BUGGY]  setEvaluations(stepSize);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(stepSize);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
294	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	18	1	add
295	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	18	1	add
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	18	1	add
297	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	18	1	add
298	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	18	None	add
299	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	18	1	add
300	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	18	1	add
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	25	1	add
302	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	25	1	add
303	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	25	1	add
304	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	25	1	add
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	25	1	add
306	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	25	1	add
307	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  [CE]  cannot  find  symbol  hasLastStep  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	25	None	add
308	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
309	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  Integer>();  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  This.eventsStates  =  new  ArrayList  <  Integer>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	This.eventsStates  =  new  ArrayList  <  Integer>();	  this.eventsStates    =    new    LinkedList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  This	47	None	replace
310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
311	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
312	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
313	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
315	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	72	1	add
316	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTYList();	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
317	[BUG]  [BUGGY]  resetOccurred  =  true;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  resetOccurred  =  true;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  resetOccurred  =  true;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
318	[BUG]  [BUGGY]  resetOccurred  =  true;  Set  <  Integer>  stepHandlers  =  Sets.newHashSet();  resetOccurred  =  true;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  Set  <  Integer>  stepHandlers  =  Sets.newHashSet();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    Set  <  Integer>  stepHandlers  =  Sets.newHashSet();  resetOccurred  =  true;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
319	[BUG]  [BUGGY]  resetOccurred  =  true;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  AssertionError  	48	1	replace
321	[BUG]  [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  Integer>  eventsStates  =  new  java.util.ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  AssertionError  	48	1	replace
322	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepsInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepsInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  stepsInitialized);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    statesInitialized);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	54	None	replace
323	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double,double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  stepSize));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  stepSize));	  stepHandlers.add(new    Integer(stepStart,    stepSize,    isLastStep));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,double)	88	None	replace
324	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep,  expansionable));  [CE]  cannot  find  symbol  expansionable  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep,  expansionable));  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep,  expansionable));	  stepHandlers.add(new    Integer(stepStart,    stepSize,    isLastStep));    	non-compiled	[CE]  cannot  find  symbol  expansionable	88	None	replace
325	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	18	1	add
326	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	18	1	add
327	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	18	1	add
328	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	18	1	add
329	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  This  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol  This	42	None	add
330	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	90	None	replace
331	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
332	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST.emptyList();  setEventsStates(-1);  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST.emptyList();  setEventsStates(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTY_LIST.emptyList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
333	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  evaluations);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize),  evaluations);	  stepHandlers.add(new    Integer(stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	27	None	replace
334	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	23	None	replace
335	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
336	[BUG]  [BUGGY]  setEventsStates(evaluators);  [CE]  cannot  find  symbol  evaluators  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEventsStates(evaluators);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEventsStates(evaluators);	          setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  evaluators	67	None	replace
337	[BUG]  [BUGGY]  setEventsStates(eventsInitialized);  [CE]  cannot  find  symbol  eventsInitialized  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEventsStates(eventsInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEventsStates(eventsInitialized);	          setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	67	None	replace
338	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(stepHandlers,  this.eventsStates);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Collection<EventState>)  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(stepHandlers,  this.eventsStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.synchronizedList(stepHandlers,  this.eventsStates);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Collection<EventState>)	93	None	replace
339	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
340	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
341	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  cannot  find  symbol  events	7	None	replace
342	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  isLastStep  =  true;  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTYList();  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
343	[BUG]  [BUGGY]  this.eventsStates  =  Lists.emptyList();  isLastStep  =  true;  [CE]  cannot  find  symbol  Lists  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Lists.emptyList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Lists.emptyList();  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  Lists	97	None	replace
344	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
345	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvalu  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvalu  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvalu	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  not  a  statement	19	None	replace
346	[BUG]  [BUGGY]  setOccurred(true,  stepStart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setOccurred(true,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setOccurred(true,  stepStart);	  setOccurred(true);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
347	[BUG]  [BUGGY]  setEvaluations(events,  evaluations);  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(events,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(events,  evaluations);	  setEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  events	64	None	replace
348	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  steps	71	None	replace
349	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  steps	71	None	replace
350	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  ISLastStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  ISLastStep	73	None	replace
351	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  wasLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  wasLastStep  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  wasLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  wasLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  wasLastStep	73	None	replace
352	[BUG]  [BUGGY]  setEvaluations(false,  true,  evaluations);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  true,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  true,  evaluations);	  setEvaluations(false,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
353	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
354	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
355	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  setEventsInitialized  =  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  setEventsInitialized  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  setEventsInitialized  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	20	1	add
357	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	20	1	add
358	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	20	1	add
359	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	20	1	add
360	[BUG]  [BUGGY]  this.eventStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  eventStates  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	5	None	replace
361	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	4	1	replace
362	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	4	1	replace
363	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
364	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	17	None	replace
365	[BUG]  [BUGGY]  this.errors  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  errors  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.errors  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.errors  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  cannot  find  symbol  errors	81	None	replace
366	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  not  a  statement	3	None	add
367	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations),  statesInitialized);  [CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations),  statesInitialized);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  evaluations),  statesInitialized);	  stepHandlers.add(new    Integer(stepStart,    stepSize,    evaluations));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,Incrementor)	55	None	replace
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	70	1	add
369	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	70	1	add
370	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	70	None	add
371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	89	1	add
372	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	89	1	add
373	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	89	1	add
374	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	89	1	add
375	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	89	None	add
376	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  steps	87	None	replace
377	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  steps	87	None	replace
378	[BUG]  [BUGGY]  if(steps!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(steps!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(steps!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  steps	87	None	replace
379	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
380	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	6	None	add
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	6	1	add
382	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	6	1	add
383	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	6	None	add
384	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  nu  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  nu  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  nu	  	non-compiled	[CE]  ')'  expected	80	None	add
385	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
386	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
387	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
388	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	80	None	add
389	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
390	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	45	1	add
391	[BUG]  [BUGGY]  setEvents(eventsStates);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvents(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvents(eventsStates);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setEvents(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
392	[BUG]  [BUGGY]  Set  <  EventState>  eventsStates  =  new  LinkedHashSet  <  EventState>();  setEvents(eventsStates);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  Set  <  EventState>  eventsStates  =  new  LinkedHashSet  <  EventState>();  setEvents(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	Set  <  EventState>  eventsStates  =  new  LinkedHashSet  <  EventState>();  setEvents(eventsStates);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setEvents(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
393	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  Integer  resetOccurred  =  isLastStep;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  Integer  resetOccurred  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    Integer  resetOccurred  =  isLastStep;	  	non-compiled	[CE]  incompatible  types	74	None	add
394	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep)  {  setResetOccurred  =  isLastStep;  }  [CE]  cannot  find  symbol  setResetOccurred  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep)  {  setResetOccurred  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    if(isLastStep)  {  setResetOccurred  =  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  setResetOccurred	74	None	add
395	[BUG]  [BUGGY]  setEvaluations(evaluators);  [CE]  cannot  find  symbol  evaluators  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(evaluators);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(evaluators);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol  evaluators	76	None	replace
396	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	21	None	replace
397	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	26	1	replace
398	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	26	1	replace
399	[BUG]  [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  exprStates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  exprStates	26	None	replace
400	[BUG]  [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incompatible  types	83	None	replace
401	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	16	1	add
402	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	16	1	add
403	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
404	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
405	[BUG]  [BUGGY]  setEvaluations(false,  true);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  true);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  true);	  setEvaluations(false,    evaluates);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
406	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  This  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    This.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  cannot  find  symbol  This	9	None	add
407	[BUG]  [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  resetOccurred  =  false;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  resetOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  resetOccurred  =  false;	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
408	[BUG]  [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  stepHandlers  =  Sets.newHashSet();  resetOccurred  =  false;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  stepHandlers  =  Sets.newHashSet();  resetOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    Set  <  Integer>  stepHandlers  =  Sets.newHashSet();  resetOccurred  =  false;	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
409	[BUG]  [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setResetOccurred  =  false;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setResetOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    Set  <  Integer>  stepHandlers  =  new  HashSet  <  Integer>();  setResetOccurred  =  false;	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
410	[BUG]  [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  steps  =  new  HashSet  <  Integer>();  resetOccurred  =  false;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  Set  <  Integer>  steps  =  new  HashSet  <  Integer>();  resetOccurred  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    Set  <  Integer>  steps  =  new  HashSet  <  Integer>();  resetOccurred  =  false;	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
411	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.evaluationsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [CE]  cannot  find  symbol  evaluationsStates  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.evaluationsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.evaluationsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  evaluationsStates	96	None	add
412	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	96	1	add
413	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	96	1	add
414	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	86	1	add
415	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	86	1	add
416	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  This	86	None	add
417	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	14	1	replace
418	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	14	1	replace
419	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  stateStates);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  stateStates);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  stateStates);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	84	None	replace
420	[BUG]  [BUGGY]  resetOccurred(stepStart,  evaluations);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred(stepStart,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred(stepStart,  evaluations);	  resetOccurred(stepStart);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
421	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(1),  stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(1),  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(1),  stepStart);	  stepHandlers.add(new    Integer(0));    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	30	None	replace
422	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  incompatible  types	8	None	replace
423	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  incompatible  types	8	None	replace
424	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  incompatible  types	8	None	replace
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	82	1	replace
426	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	82	1	replace
427	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	82	1	replace
428	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	82	1	replace
429	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  AssertionError>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  TreeSet  <  AssertionError>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  TreeSet  <  AssertionError>();	          this.eventsStates    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  incompatible  types	36	None	replace
430	[BUG]  [BUGGY]  this.eventsStates  =  new  HashSet  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  HashSet  <  AssertionError>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  HashSet  <  AssertionError>();	          this.eventsStates    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
431	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  isLastStep  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	ArrayList  <  EventState>  isLastStep  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	69	1	replace
432	[BUG]  [BUGGY]  ArrayList  <  EventState>  isLastStep  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  EventState>  isLastStep  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  EventState>  isLastStep  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	69	1	replace
433	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
434	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
435	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
436	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [FE]  AssertionError  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
438	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  }  [FE]  AssertionError  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
439	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	13	1	add
440	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	13	1	add
441	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
442	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
443	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
444	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepHandlers  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepsInitialized  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepsInitialized  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
446	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepsInitialized  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  stepsInitialized  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  stepsInitialized  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
447	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(2);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	compilable	  [FE]  MaxCountExceededException  	35	1	replace
448	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(2);  [FE]  MaxCountExceededException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(2);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	compilable	  [FE]  MaxCountExceededException  	35	1	replace
449	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred  =  isLastStep  &&  isLastStep;	  resetOccurred    =    isLastStep;    	compilable	  [FE]  AssertionError  	75	1	replace
450	[BUG]  [BUGGY]  resetOccurred  =  isLastStep  &&  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred  =  isLastStep  &&  isLastStep;	  resetOccurred    =    isLastStep;    	compilable	  [FE]  AssertionError  	75	1	replace
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
452	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
453	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
454	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [FE]  AssertionError  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	43	1	replace
455	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
456	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
457	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyArray();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyArray();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.  <  EventState>emptyArray();	  this.eventsStates    =    Collections.    <    EventState>emptyList();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
458	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	18	1	add
459	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	18	1	add
460	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	18	1	add
461	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	18	1	add
462	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  AssertionError  	7	1	replace
463	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	compilable	  [FE]  AssertionError  	7	1	replace
464	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
465	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
466	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	96	None	add
467	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepSize);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  stepSize);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	84	None	replace
468	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	41	1	replace
469	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	41	1	replace
470	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
471	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
472	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
473	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
474	[BUG]  [BUGGY]  setEvaluations(false,  steps);  [CE]  cannot  find  symbol  steps  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  steps);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  steps);	  setEvaluations(false,    evaluates);    	non-compiled	[CE]  cannot  find  symbol  steps	33	None	replace
475	[BUG]  [BUGGY]  setEvaluations(stepHandlers.values());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(stepHandlers.values());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(stepHandlers.values());	  setEvaluations(eventsStates.values());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
476	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
477	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
478	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
479	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()  [CE]  ';'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()	  	non-compiled	[CE]  ';'  expected	11	None	add
480	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
481	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(this.eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	11	1	add
482	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
483	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
484	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-2);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-2);  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
485	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-2);  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-2);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  setMaxEvaluations(-2);  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
486	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
487	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
488	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
489	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	9	1	add
490	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  evaluations);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  evaluations);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  evaluates,  evaluations);	  stepHandlers.add(new    Integer(stepStart,    stepSize),    evaluates);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	85	None	replace
491	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  steps	87	None	replace
492	[BUG]  [BUGGY]  if(steps!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(steps!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(steps!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  steps	87	None	replace
493	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  setOccurred(isLastStep);  resetOccurred  =  isLastStep;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  setOccurred(isLastStep);  resetOccurred  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    setOccurred(isLastStep);  resetOccurred  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
494	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep  >  0)  {  for(int  i  =  0;  i  <  steps.size();  ++i)  {  stepHandlers.add(new  Integer(stepStart,  stepSize  +  1));  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep  >  0)  {  for(int  i  =  0;  i  <  steps.size();  ++i)  {  stepHandlers.add(new  Integer(stepStart,  stepSize  +  1));  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    if(isLastStep  >  0)  {  for(int  i  =  0;  i  <  steps.size();  ++i)  {  stepHandlers.add(new  Integer(stepStart,  stepSize  +  1));  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
495	[BUG]  [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep  >  0)  {  for(int  i  =  0;  i  <  steps.size();  ++i)  {  stepHandlers.add(stepHandler);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  isLastStep;  if(isLastStep  >  0)  {  for(int  i  =  0;  i  <  steps.size();  ++i)  {  stepHandlers.add(stepHandler);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    isLastStep;    if(isLastStep  >  0)  {  for(int  i  =  0;  i  <  steps.size();  ++i)  {  stepHandlers.add(stepHandler);  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
496	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	58	None	add
497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	73	1	replace
498	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	73	1	replace
499	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	4	1	replace
500	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	4	1	replace
501	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	14	1	replace
502	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	14	1	replace
503	[BUG]  [BUGGY]  resetOccurred  =  true;  setOccurred(true);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  setOccurred(true);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    setOccurred(true);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
504	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	resetOccurred    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  resetOccurred  =  true;	  	compilable	  [FE]  AssertionError  	1	1	add
505	[BUG]  [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  resetOccurred  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  resetOccurred  =  true;	  	compilable	  [FE]  AssertionError  	1	1	add
506	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
507	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
508	[BUG]  [BUGGY]  setEvaluations(eventsStates,  evaluations,  stepStart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(eventsStates,  evaluations,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(eventsStates,  evaluations,  stepStart);	  setEvaluations(eventsStates,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
509	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  steps	71	None	replace
510	[BUG]  [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	81	None	replace
511	[BUG]  [BUGGY]  if(this.stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	81	None	replace
512	[BUG]  [BUGGY]  resetOccurred(stepStart,  stepSize);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred(stepStart,  stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred(stepStart,  stepSize);	  resetOccurred(stepStart);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
513	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    	compilable	  [FE]  AssertionError  	23	1	replace
514	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    	compilable	  [FE]  AssertionError  	23	1	replace
515	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  events  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  events	23	None	replace
516	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    	compilable	  [FE]  AssertionError  	23	1	replace
517	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    	compilable	  [FE]  AssertionError  	23	1	replace
518	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
519	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
520	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
521	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  setMaxEvaluations(-1);  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(this.eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  UnsupportedOperationException  	40	1	add
522	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	6	None	add
523	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
524	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	26	1	replace
525	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	26	1	replace
526	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	setMaxEvaluations(-1);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	35	1	replace
527	[BUG]  [BUGGY]  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setMaxEvaluations(-1);	          this.eventsStates    =    new    ArrayList    <    EventState>();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	35	1	replace
528	[BUG]  [BUGGY]  setEvaluations(stepHandlers);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(stepHandlers);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(stepHandlers);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
529	[BUG]  [BUGGY]  setEvaluations(stepStart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(stepStart);	  setEvaluations(events);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
530	[BUG]  [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incompatible  types	83	None	replace
531	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>)  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>)	93	None	replace
532	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepStart);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,double)  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepStart);  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepStart);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,double)	93	None	replace
533	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
534	[BUG]  [BUGGY]  setEvaluations(statesInitialized,  eventsStates);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(statesInitialized,  eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(statesInitialized,  eventsStates);	  setEvaluations(eventsStates,    statesInitialized);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
535	[BUG]  [BUGGY]  setEvaluations(false,  evaluations,  stepStart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(false,  evaluations,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(false,  evaluations,  stepStart);	  setEvaluations(false,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
536	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	16	1	add
537	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	16	1	add
538	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	16	1	add
539	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	16	1	add
540	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  setEventsStates(eventsStates);  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates!=  null)  {  setEventsStates(eventsStates);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates!=  null)  {  setEventsStates(eventsStates);  }	          setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
541	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  setEventsStates(eventsStates);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates!=  null)  {  setEventsStates(eventsStates);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates!=  null)  {  setEventsStates(eventsStates);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          setEventsStates(eventsStates);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
542	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	21	1	replace
543	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	21	1	replace
544	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLas  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLas  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLas	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
545	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  >  expected	90	None	replace
546	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
547	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
548	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
549	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
550	[BUG]  [BUGGY]  setStepEvaluations(true,  stepStart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setStepEvaluations(true,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setStepEvaluations(true,  stepStart);	  setEvaluations(true,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
551	[BUG]  [BUGGY]  setEvaluations(true,  stepStart,  evaluations);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  setEvaluations(true,  stepStart,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	setEvaluations(true,  stepStart,  evaluations);	  setEvaluations(true,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
552	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  ArrayList  <  Integer>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	add	ArrayList  <  Integer>  eventsStates  =  new  ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  AssertionError  	48	1	replace
553	[BUG]  [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  ArrayList  <  Integer>();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  ArrayList  <  Integer>  eventsStates  =  new  ArrayList  <  Integer>();  [BUGGY]      resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	ArrayList  <  Integer>  eventsStates  =  new  ArrayList  <  Integer>();	  this.eventsStates    =    new    java.util.ArrayList    <    Integer>();    	compilable	  [FE]  AssertionError  	48	1	replace
554	[BUG]  [BUGGY]  resetOccurred  =  false;  setOccurred(true);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  setOccurred(true);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    setOccurred(true);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
555	[BUG]  [BUGGY]  resetOccurred  =  false;  setOccurred(false);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  setOccurred(false);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    setOccurred(false);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
556	[BUG]  [BUGGY]  resetOccurred  =  false;  process(stepStart,  stepSize);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);      [BUGGY]  resetOccurred  =  false;  process(stepStart,  stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	94	94	1	replace	resetOccurred    =    false;    process(stepStart,  stepSize);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
