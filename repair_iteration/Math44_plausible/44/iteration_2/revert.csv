projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){if(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){If(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){if(!isLastStep|&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)){if(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)){If(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(interpolator.evaluateStep(state)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events.get(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events1.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es1.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep()-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es1.evaluate(expandableODE,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandeableODE,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(occuringSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(eventsInitialized)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.cloneTree();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)currentEvent.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)es1.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)states.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)events.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)es0.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){If(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=currentEvent.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es0.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)states.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getValue();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es1.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=currentEvent.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator)||state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep()+1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStepSize();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(occuringSign,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentEvent,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getEventState().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(event.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStepSize();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.getState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStep();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isLastStep()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isLastStepInterpolator){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)eventsList.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(resetOccurred);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(ignoredEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateOccurred(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.getEvents().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)es1.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,y);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getCurrentState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getValue();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandableODE)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandableODE,interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentT,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.reset();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es0.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es0.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isInitialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.cloneTree();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302If(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate()){If(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator)||state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(orderingSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(expansion)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(currentT)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(eventT)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(eventsInitialized,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(eventsInitialized)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(state)&&state.isLastStep()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.cloneOccurred();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getCurrentTree();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),orderingSign,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),orderingSign,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(resetOccurred)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(null,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(event.getStep()-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(event.getStep(),orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(eventS0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302state=state.evaluate(events0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=interpolator.evaluateStep(state,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(y,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,yDot,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es1.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es0,expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getValue()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateOccurred(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator)&&state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=interpolator.evaluateStep(currentEvent,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(interpolator,currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(stepSize);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(orderingSign,expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expansion,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isLastStepInterpolator){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isFirstStepInterpolator){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)this.eventsList.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)eventsList.get(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(this,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluateStep(t0)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(interpolator.evaluateStep(t0)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(events,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=events.evaluate(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep()-2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep()+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)statesInitialized.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(events,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(null,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep()*1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluateStep(state)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluate(t0,yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){if(!isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){If(!isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){if(!isFirstStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){if(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){If(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getState().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getValue().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=es0.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=currentEvent.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es1.evaluate(expandableODE,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1).evaluate(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep(),orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep()-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateOccurred(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandable)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandableEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expansion)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.evaluate(this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.evaluate(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluateStep(state)&&state.isInitialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isInitialized()||state.isInitialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(currentEvent)&&state.isInitialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&interpolator.evaluate(state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(ignoredEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep()/1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(es0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=interpolator.evaluateStep(es0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentEvent,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStepSize()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStepSize()+1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStepSize()-2;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302If(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep){If(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){If(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator)&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isFirstStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isInitialized){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(occuringEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(events)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.cloneOccurred();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.cloneTree(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events.get(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)eventsInitialized.get(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluateStep(state)&&state.isLastStep()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isLastStep()||state.isInitialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isFirstStep()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){if(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){If(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator)||state.evaluate(occuringSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator)||state.evaluate(ignoreEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator)||state.evaluate(ignoredEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentT,state,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentT,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=interpolator.evaluateStep(currentT,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentT,interpolator,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStep()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStep()+1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStep(resetOccurred);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandeableODE,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandeableODE,es1,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandeableODE,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(resetOccurred,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(eventsInitialized,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=eventsInitialized.evaluate(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=events.evaluate(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluateStep(state)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluate(y,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){if(!state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){If(!state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,y,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,yDot,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es0,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expansion,es1,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(interpolator.evaluateStep(state)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluate(t0,yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isLastStep){if(!state.evaluateStep(interpolator)&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isLastStep){If(!state.evaluateStep(interpolator)&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){if(!state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){If(!state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=currentEvent.evaluateStep();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=currentEvent.evaluateStep(state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events2.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events1.get(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep(),currentEvent.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getSize());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getSecond());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getStep()-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateOccurred(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isFirstStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es0.getState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.getState()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStepSize()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStepSize()+1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStepSize()-2;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getRangeSize();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es1,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302If(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302If(!isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){If(!isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(eventsInitialized,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(eventsInitialized,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandable,interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expansion,interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator,expandable)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(tEnd,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(y,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateOccurred(ignoredEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&interpolator.evaluateOccurred(state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateOccurred(ignoreEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getValue()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)statesInitialized.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.getState().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.getOccurredEvents().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)es0.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)es2.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(resetOccurred);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(orderingSign,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(eventsInitialized,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(events,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(currentEvent,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302state=state.evaluate(es0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es0,es1,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.next();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=currentEvent.evaluate(null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=currentEvent.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)){if(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){if(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,this,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)){if(isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)){If(isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)){if(isLastStep||state.evaluateStep(Interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(expansion)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(orderingSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(occuringSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(expandeableODE)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(orderingSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(ordinalEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(ordinalT)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(currentT,expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=currentEvent.evaluate(expandableODE,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(currentEvent,expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events1,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)currentEvent.getValue();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getEventState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)){intisLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(occuringSign)){If(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){AssertionError<EventState>occuringEvents=newTreeSet<EventState>(newComparator<EventState>());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es2.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getCharacterEnd());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentT,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentT,yDot,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE,this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE,orderSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStepStart();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(t0)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandable,yDot)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandable,currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es1,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)es.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isLastStepInterpolator()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)es2.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(es1,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(eventsInitialized,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(event.getStep(),state.getEnd());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluateStep(yDot)&&state.evaluate(tEnd,yDot)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getOccurrence();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(eventsInitialized,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,tStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(orderingSign,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getOccurredState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es1.evaluate(expandableODE,currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es2.evaluate(expandableODE,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(events)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(state)||state.isLastStep()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(ignoreSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(annotation)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)allEventsList.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.get();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandeableODE,es1,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentEvent,interpolator,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(events,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=currentEvent.evaluate(null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep(),orderSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(expandeableODE)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(expansionableODE)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateState(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getCurrentEventState().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.getTree();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(currentT)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(t0)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator,es1)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es1.get(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(events.evaluateStep(interpolator)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(null,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)events.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(events0,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateOccurred(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.getInitialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(yDot,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(expansion,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events3.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)states.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(null,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(null,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(eventsInitialized,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(interpolator||state.evaluateStep(isLastStep)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)&&isInitialized){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate()&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(turnOffset);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events,orderSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es2.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.getCurrentState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.getEventState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.getOccurredState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),orderingSign+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(es0)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isFirstStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(expansion,y);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.getCurrentEvent().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(state,orderingSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es0,es1).getState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(interpolator.evaluateStep(yDot)||state.evaluate(t0,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandable,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=currentEvent.evaluate(es0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandable,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandableODE,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(es0,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(currentT,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandable,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandable,existingEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getOccurred();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(eventT)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&interpolator.evaluate(state)||state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluate(yDot,t0)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(yDot)&&state.evaluate(t0,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.reset();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(expansions.evaluateStep(interpolator)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.cloneBlock();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getMinimumStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getStepCount());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(yDot)||state.evaluate(t0,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){if(!isLastStep||state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,t0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,t0,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,yDot,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(eventsInitialized,this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(resetOccurred-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(resetOccurred+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluateOccurred(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluateOccurred(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep()-1,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.initialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep(),es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep(),state.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.evaluateAndReturn();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE,currentY);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)annotations.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(this,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)annotations.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(notifySign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302state=state.evaluate(expandableODE,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){if(!isLastStep||state.evaluateStep(interpolator))<
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(es0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)||!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getEventSign();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.getEvents().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(events0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(events1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(currentT)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(es0)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateOccurred(interpolator,state)){
