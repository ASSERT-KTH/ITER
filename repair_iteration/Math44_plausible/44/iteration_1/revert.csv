projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){if(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){If(!isLastStep&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)){if(!isLastStep|&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)){if(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)){If(!state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(interpolator.evaluateStep(state)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)||state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events.get(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)events1.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es1.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(state.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep()-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es1.evaluate(expandableODE,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandeableODE,es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!interpolator.evaluate(state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(occuringSign)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(eventsInitialized)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.cloneTree();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)currentEvent.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)es1.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)states.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)events.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)es0.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){If(state.evaluateStep(interpolator)||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=currentEvent.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=es0.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)states.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getValue();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es1.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=currentEvent.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(events);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluate(interpolator)||state.evaluate(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(isLastStep||state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep()-1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep()+1;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStepSize();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(occuringSign,state)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentEvent);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(eventsInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentEvent,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluateStep(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.getEventState().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(event.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStepSize();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.getState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepSize=state.getStep();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.evaluate(yDot,tEnd)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isLastStep()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isLastStepInterpolator){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)eventsList.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=state.getStep(resetOccurred);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(ignoredEvents)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateOccurred(interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!isLastStep&&state.evaluateStep(currentEvent)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.getEvents().clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)es1.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,y);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getCurrentState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.getValue();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=(EventState)state.evaluate();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandableODE)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluate(expandableODE,interpolator)){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentT,state);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluate(events0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302finalEventStatestate=state.evaluate(this);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)state.reset();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(interpolator,yDot);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302EventStatestate=state.evaluateStep(currentT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,es1,tEnd);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es0.clone();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302intstepStart=getStep(currentEvent.getStep(),state.getStep());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(expandableODE,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet<EventState>)es0.get(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(es0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=state.evaluate(events0,es1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302if(!state.evaluateStep(interpolator)&&state.isInitialized()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java302Statestate=(SortedSet)state.cloneTree();
