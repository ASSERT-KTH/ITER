bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(equations!=  null  ||  equations.getDimension()  ==  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  ||  equations.getDimension()  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  ||  equations.getDimension()  ==  null)  {	  if(equations.getDimension()!=    null    ||    equations.getDimension()    ==    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	82	None	replace
2	[BUG]  [BUGGY]  if(equations!=  null  &&  equations.isDimension())  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  &&  equations.isDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  &&  equations.isDimension())  {	  if(t0!=    null    &&    equations.isDimension())    {    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
3	[BUG]  [BUGGY]  if(y0!=  null  &&  equations.isDimension())  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null  &&  equations.isDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=  null  &&  equations.isDimension())  {	  if(t0!=    null    &&    equations.isDimension())    {    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
4	[BUG]  [BUGGY]  if(equivalents!=  null  &&  equations.isDimension())  {  [CE]  cannot  find  symbol  equivalents  [FE]                        AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equivalents!=  null  &&  equations.isDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equivalents!=  null  &&  equations.isDimension())  {	  if(t0!=    null    &&    equations.isDimension())    {    	non-compiled	[CE]  cannot  find  symbol  equivalents	96	None	replace
5	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y1,  t);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t0,  y1,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.max(t0,  y1,  t);	  t0    =    Math.max(t0,    y,    t);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
6	[BUG]  [BUGGY]  if(y0  ==  t)  {  [CE]  incomparable  types:  double[]  and  double  [FE]            DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0  ==  t)  {	  if(t0    ==    y)    {    	non-compiled	[CE]  incomparable  types:  double[]  and  double	4	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0  ==  y.length)  {	  if(t0    ==    y)    {    	compilable	  [FE]  AssertionError  	4	1	replace
8	[BUG]  [BUGGY]  if(t0  ==  y.length)  {  [FE]  AssertionError  [FE]              DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  ==  y.length)  {	  if(t0    ==    y)    {    	compilable	  [FE]  AssertionError  	4	1	replace
9	[BUG]  [BUGGY]  if(t!=  t)  {  if(t!=  t)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t)  {  if(t!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t)    {    if(t!=  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
10	[BUG]  [BUGGY]  if(t!=  t)  {  if(t  >=  t)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t)  {  if(t  >=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t)    {    if(t  >=  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
11	[BUG]  [BUGGY]  if(t!=  t)  {  if(t  ==  t)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t)  {  if(t  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t)    {    if(t  ==  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
12	[BUG]  [BUGGY]  if(t!=  t)  {  If(t!=  t)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t)  {  If(t!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t)    {    If(t!=  t)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0  >  t0)  {	  if(t0    >=    t0)    {    	compilable	  [FE]  AssertionError  	72	1	replace
14	[BUG]  [BUGGY]  if(t0  >  t0)  {  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  >  t0)  {	  if(t0    >=    t0)    {    	compilable	  [FE]  AssertionError  	72	1	replace
15	[BUG]  [BUGGY]  if(equations.getDimension()  >=  t0)  {  if(equations.getDimension()  >=  t0)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >=  t0)  {  if(equations.getDimension()  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    >=    t0)    {    if(equations.getDimension()  >=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
16	[BUG]  [BUGGY]  if(equations.getDimension()  >=  t0)  {  if(equations.getDimension()!=  t0)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >=  t0)  {  if(equations.getDimension()!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    >=    t0)    {    if(equations.getDimension()!=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
17	[BUG]  [BUGGY]  if(equations.getDimension()  >=  t0)  {  if(equations.getDimension()  >>  t0)  {  [CE]  illegal  start  of  expression  [FE]        DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >=  t0)  {  if(equations.getDimension()  >>  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    >=    t0)    {    if(equations.getDimension()  >>  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
18	[BUG]  [BUGGY]  if(equations.getDimension()  >=  t0)  {  If(equations.getDimension()  >=  t0)  {  [CE]  ';'  expected  [FE]          DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >=  t0)  {  If(equations.getDimension()  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    >=    t0)    {    If(equations.getDimension()  >=  t0)  {	  	non-compiled	[CE]  ';'  expected	69	None	add
19	[BUG]  [BUGGY]  t0  =  Math.min(t0,  y0,  t);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0,  y0,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0,  y0,  t);	  t0    =    Math.max(t0,    y0,    t);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
20	[BUG]  [BUGGY]  if(t!=  y0)  {  [CE]  incomparable  types:  double  and  double[]  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  y0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=  y0)  {	  if(t!=    t)    {    	non-compiled	[CE]  incomparable  types:  double  and  double[]	34	None	replace
21	[BUG]  [BUGGY]  if(t!=  y)  {  [CE]  incomparable  types:  double  and  double[]  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  y)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=  y)  {	  if(t!=    t)    {    	non-compiled	[CE]  incomparable  types:  double  and  double[]	34	None	replace
22	[BUG]  [BUGGY]  if(t  ==  y0)  {  [CE]  incomparable  types:  double  and  double[]  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  ==  y0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t  ==  y0)  {	  if(t!=    t)    {    	non-compiled	[CE]  incomparable  types:  double  and  double[]	34	None	replace
23	[BUG]  [BUGGY]  init(t0,  y0,  t);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(t0,  y0,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(t0,  y0,  t);	  init(equations,    t0,    y,    t);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
24	[BUG]  [BUGGY]  init(equals,  t0,  y,  t);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(equals,  t0,  y,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(equals,  t0,  y,  t);	  init(equations,    t0,    y,    t);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
25	[BUG]  [BUGGY]  if(t0  ==  t)  {  if(t0  ==  t)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  t)  {  if(t0  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    t)    {    if(t0  ==  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
26	[BUG]  [BUGGY]  if(t0  ==  t)  {  If(t0  ==  t)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  t)  {  If(t0  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    t)    {    If(t0  ==  t)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
27	[BUG]  [BUGGY]  if(t0  ==  t)  {  if(t0!=  t)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  t)  {  if(t0!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    t)    {    if(t0!=  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
28	[BUG]  [BUGGY]  if(equations  ==  null)  {  if(equations  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null)  {  if(equations  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations    ==    null)    {    if(equations  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
29	[BUG]  [BUGGY]  if(equations  ==  null)  {  If(equations  ==  null)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null)  {  If(equations  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations    ==    null)    {    If(equations  ==  null)  {	  	non-compiled	[CE]  ';'  expected	57	None	add
30	[BUG]  [BUGGY]  if(equations  ==  null)  {  if(equations!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null)  {  if(equations!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations    ==    null)    {    if(equations!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
31	[BUG]  [BUGGY]  If(equations.getDimension()!=  t0)  {  [CE]  ';'  expected  [FE]              DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(equations.getDimension()!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(equations.getDimension()!=  t0)  {	  if(equations.getDimension()!=    t0)    {    If(equations.getDimension()!=    t0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
32	[BUG]  [BUGGY]  If(equations.getDimension()  ==  t0)  {  [CE]  ';'  expected  [FE]                DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(equations.getDimension()  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(equations.getDimension()  ==  t0)  {	  if(equations.getDimension()!=    t0)    {    If(equations.getDimension()!=    t0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
33	[BUG]  [BUGGY]  If(equations.getDimension()!=  y0)  {  [CE]  ';'  expected  [FE]                  DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(equations.getDimension()!=  y0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(equations.getDimension()!=  y0)  {	  if(equations.getDimension()!=    t0)    {    If(equations.getDimension()!=    t0)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
34	[BUG]  [BUGGY]  if(t0  ==  equations.getDimension())  {  if(t0  ==  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  equations.getDimension())  {  if(t0  ==  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    equations.getDimension())    {    if(t0  ==  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
35	[BUG]  [BUGGY]  if(t0  ==  equations.getDimension())  {  if(t0!=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  equations.getDimension())  {  if(t0!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    equations.getDimension())    {    if(t0!=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
36	[BUG]  [BUGGY]  if(t0  ==  equations.getDimension())  {  if(t0  >=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  equations.getDimension())  {  if(t0  >=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    equations.getDimension())    {    if(t0  >=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
37	[BUG]  [BUGGY]  if(t0  ==  equations.getDimension())  {  If(t0  ==  equations.getDimension())  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  equations.getDimension())  {  If(t0  ==  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    equations.getDimension())    {    If(t0  ==  equations.getDimension())  {	  	non-compiled	[CE]  ';'  expected	29	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(y0  ==  null)  {	  if(t0    ==    null)    {    	compilable	  [FE]  AssertionError  	79	1	replace
39	[BUG]  [BUGGY]  if(y0  ==  null)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0  ==  null)  {	  if(t0    ==    null)    {    	compilable	  [FE]  AssertionError  	79	1	replace
40	[BUG]  [BUGGY]  t0  =  Math.min(t0.length,  y.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0.length,  y.length);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0.length,  y.length);	  t0    =    Math.min(y0.length,    t.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
41	[BUG]  [BUGGY]  t0  =  Math.max(t0.length,  y.length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t0.length,  y.length);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.max(t0.length,  y.length);	  t0    =    Math.min(y0.length,    t.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
42	[BUG]  [BUGGY]  If(t0!=  t)  {  [CE]  ';'  expected  [FE]              DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(t0!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(t0!=  t)  {	  if(t0!=    t)    {    If(t0!=    t)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
43	[BUG]  [BUGGY]  If(t0  ==  t)  {  [CE]  ';'  expected  [FE]                DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(t0  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(t0  ==  t)  {	  if(t0!=    t)    {    If(t0!=    t)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
44	[BUG]  [BUGGY]  if(equations  ==  null  ||  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null  ||  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations  ==  null  ||  equations.getDimension()!=  null)  {	  if(equations!=    null    ||    equations.getDimension()!=    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	64	None	replace
45	[BUG]  [BUGGY]  if(equations!=  null  &&  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  &&  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  &&  equations.getDimension()!=  null)  {	  if(equations!=    null    ||    equations.getDimension()!=    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	64	None	replace
46	[BUG]  [BUGGY]  if(y0!=  t)  {  [CE]  incomparable  types:  double[]  and  double  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=  t)  {	  if(t0!=    t)    {    if(t0!=    t)    {    	non-compiled	[CE]  incomparable  types:  double[]  and  double	59	None	replace
47	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(y!=  null)  {	  if(equations!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	54	1	replace
48	[BUG]  [BUGGY]  if(y!=  null)  {  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y!=  null)  {	  if(equations!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	54	1	replace
49	[BUG]  [BUGGY]  if(equals  ==  null)  {  [CE]  cannot  find  symbol  equals  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equals  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equals  ==  null)  {	  if(equations!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  equals	54	None	replace
50	[BUG]  [BUGGY]  if(y0!=  null)  {  if(y0!=  null)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null)  {  if(y0!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=    null)    {    if(y0!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
51	[BUG]  [BUGGY]  if(y0!=  null)  {  if(y0  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null)  {  if(y0  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=    null)    {    if(y0  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
52	[BUG]  [BUGGY]  if(y0!=  null)  {  If(y0!=  null)  {  [CE]  ';'  expected  [FE]        DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null)  {  If(y0!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=    null)    {    If(y0!=  null)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
53	[BUG]  [BUGGY]  if(y0!=  null)  {  if(y0  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null)  {  if(y0  >=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=    null)    {    if(y0  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
54	[BUG]  [BUGGY]  t0  =  Math.min(t0,  y));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0,  y));  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0,  y));	  t0    =    Math.min(t0,    t));    	non-compiled	[CE]  ';'  expected	46	None	replace
55	[BUG]  [BUGGY]  t0  =  Math.max(t0,  t));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t0,  t));  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.max(t0,  t));	  t0    =    Math.min(t0,    t));    	non-compiled	[CE]  ';'  expected	46	None	replace
56	[BUG]  [BUGGY]  t0  =  Math.min(t0,  t.length));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0,  t.length));  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0,  t.length));	  t0    =    Math.min(t0,    t));    	non-compiled	[CE]  ';'  expected	46	None	replace
57	[BUG]  [BUGGY]  if(y0!=  t0)  {  [CE]  incomparable  types:  double[]  and  double  [FE]            DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=  t0)  {	  if(t0    ==    t0)    {    if(t0!=    t0)    {    	non-compiled	[CE]  incomparable  types:  double[]  and  double	68	None	replace
58	[BUG]  [BUGGY]  t  =  equations.getDimension(),  t);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getDimension(),  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getDimension(),  t);	  t    =    equations.getDimension(),    t0);    	non-compiled	[CE]  ';'  expected	28	None	replace
59	[BUG]  [BUGGY]  t  =  equations.getDimension(),  y);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getDimension(),  y);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getDimension(),  y);	  t    =    equations.getDimension(),    t0);    	non-compiled	[CE]  ';'  expected	28	None	replace
60	[BUG]  [BUGGY]  t  =  equations.getSize(),  t0);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getSize(),  t0);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getSize(),  t0);	  t    =    equations.getDimension(),    t0);    	non-compiled	[CE]  ';'  expected	28	None	replace
61	[BUG]  [BUGGY]  If(t0!=  t0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(t0!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(t0!=  t0)  {	  if(t0!=    t0)    {    If(t0!=    t0)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
62	[BUG]  [BUGGY]  init(t0,  y,  t);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(t0,  y,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(t0,  y,  t);	  init(y0,    t,    t);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  integrate(t0,  y0,  t);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  integrate(t0,  y0,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	integrate(t0,  y0,  t);	  init(y0,    t,    t);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  If(t0!=  equations.getDimension())  {  [CE]  ';'  expected  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(t0!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(t0!=  equations.getDimension())  {	  if(t0!=    equations.getDimension())    {    If(t0!=    equations.getDimension())    {    	non-compiled	[CE]  ';'  expected	75	None	replace
65	[BUG]  [BUGGY]  If(y0.length!=  equations.getDimension())  {  [CE]  ';'  expected  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(y0.length!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(y0.length!=  equations.getDimension())  {	  if(t0!=    equations.getDimension())    {    If(t0!=    equations.getDimension())    {    	non-compiled	[CE]  ';'  expected	75	None	replace
66	[BUG]  [BUGGY]  If(y0!=  equations.getDimension())  {  [CE]  ';'  expected  [FE]            DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(y0!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(y0!=  equations.getDimension())  {	  if(t0!=    equations.getDimension())    {    If(t0!=    equations.getDimension())    {    	non-compiled	[CE]  ';'  expected	75	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(y  ==  null)  {	  if(equations    ==    null)    {    	compilable	  [FE]  AssertionError  	58	1	replace
68	[BUG]  [BUGGY]  if(y  ==  null)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y  ==  null)  {	  if(equations    ==    null)    {    	compilable	  [FE]  AssertionError  	58	1	replace
69	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length  ==  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(y0.length  ==  equations.getDimension())  {	  if(t0    ==    equations.getDimension())    {    	compilable	  [FE]  DimensionMismatchException  	30	1	replace
70	[BUG]  [BUGGY]  if(y0.length  ==  equations.getDimension())  {  [FE]  DimensionMismatchException  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length  ==  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length  ==  equations.getDimension())  {	  if(t0    ==    equations.getDimension())    {    	compilable	  [FE]  DimensionMismatchException  	30	1	replace
71	[BUG]  [BUGGY]  t0  =  Math.max(t0,  t1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t0,  t1);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.max(t0,  t1);	  t0    =    Math.min(t0,    t1);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
72	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(equations.getDimension()  ==  y.length)  {	  if(equations.getDimension()!=    y.length)    {    	compilable	  [FE]  DimensionMismatchException  	90	1	replace
73	[BUG]  [BUGGY]  if(equations.getDimension()  ==  y.length)  {  [FE]  DimensionMismatchException  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  ==  y.length)  {	  if(equations.getDimension()!=    y.length)    {    	compilable	  [FE]  DimensionMismatchException  	90	1	replace
74	[BUG]  [BUGGY]  if(equations!=  null  ||  y0!=  equations.getDimension())  {  [CE]  incomparable  types:  double[]  and  int  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  ||  y0!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  ||  y0!=  equations.getDimension())  {	  if(y0!=    equations.getDimension())    {    	non-compiled	[CE]  incomparable  types:  double[]  and  int	99	None	replace
75	[BUG]  [BUGGY]  if(equations.getDimension()  ==  y0)  {  [CE]  incomparable  types:  int  and  double[]  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  y0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  ==  y0)  {	  if(equations.getDimension()    ==    t0)    {    	non-compiled	[CE]  incomparable  types:  int  and  double[]	16	None	replace
76	[BUG]  [BUGGY]  if(y0!=  null  &&  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null  &&  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=  null  &&  equations.getDimension()!=  null)  {	  if(t0!=    null    &&    equations.getDimension()!=    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	94	None	replace
77	[BUG]  [BUGGY]  if(equations  ==  null  &&  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null  &&  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations  ==  null  &&  equations.getDimension()!=  null)  {	  if(t0!=    null    &&    equations.getDimension()!=    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	94	None	replace
78	[BUG]  [BUGGY]  if(t0!=  t1)  {  [CE]  cannot  find  symbol  t1  [FE]        AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  t1)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  t1)  {	  if(t0!=    t0)    {    if(t0!=    t0)    {    	non-compiled	[CE]  cannot  find  symbol  t1	19	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0  >=  t)  {	  if(t0!=    t)    {    if(t0    >>    t)    {    	compilable	  [FE]  AssertionError  	86	1	replace
80	[BUG]  [BUGGY]  if(t0  >=  t)  {  [FE]  AssertionError  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  >=  t)  {	  if(t0!=    t)    {    if(t0    >>    t)    {    	compilable	  [FE]  AssertionError  	86	1	replace
81	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t0)  {  if(equations.getDimension()  ==  t0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t0)  {  if(equations.getDimension()  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t0)    {    if(equations.getDimension()  ==  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
82	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t0)  {  If(equations.getDimension()  ==  t0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t0)  {  If(equations.getDimension()  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t0)    {    If(equations.getDimension()  ==  t0)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
83	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t0)  {  if(equations.getDimension()!=  t0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t0)  {  if(equations.getDimension()!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t0)    {    if(equations.getDimension()!=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
84	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t0)  {  if(equations.getDimension()  >=  t0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t0)  {  if(equations.getDimension()  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t0)    {    if(equations.getDimension()  >=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
85	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()  ==  t)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t)    {    if(equations.getDimension()  ==  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
86	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t)  {  If(equations.getDimension()  ==  t)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t)  {  If(equations.getDimension()  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t)    {    If(equations.getDimension()  ==  t)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
87	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()!=  t)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t)    {    if(equations.getDimension()!=  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
88	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()  >=  t)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()  >=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t)    {    if(equations.getDimension()  >=  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
89	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length!=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(y0.length!=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
90	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length  >=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length  >=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(y0.length  >=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
91	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length  >>  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length  >>  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(y0.length  >>  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
92	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length  ==  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(y0.length  ==  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(y0.length  ==  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
93	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(t0.length!=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(t0.length!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(t0.length!=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
94	[BUG]  [BUGGY]  if(equations.getDimension()!=  y.getDimension())  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()!=  y.getDimension())  {	  if(y.getDimension()!=    equations.getDimension())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
95	[BUG]  [BUGGY]  if(equivalents.getDimension()!=  y.getDimension())  {  [CE]  cannot  find  symbol  equivalents  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equivalents.getDimension()!=  y.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equivalents.getDimension()!=  y.getDimension())  {	  if(y.getDimension()!=    equations.getDimension())    {    	non-compiled	[CE]  cannot  find  symbol  equivalents	11	None	replace
96	[BUG]  [BUGGY]  if(equations.getDimension()  >=  y.getDimension())  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >=  y.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  >=  y.getDimension())  {	  if(y.getDimension()!=    equations.getDimension())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
97	[BUG]  [BUGGY]  if(t0  ==  y0  ||  t  ==  y.length)  {  [CE]  incomparable  types:  double  and  double[]  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  y0  ||  t  ==  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  ==  y0  ||  t  ==  y.length)  {	  if(t0    ==    y0)    {    	non-compiled	[CE]  incomparable  types:  double  and  double[]	1	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  y0.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0  ==  y0.length)  {	  if(t0    ==    y0)    {    	compilable	  [FE]  AssertionError  	1	1	replace
99	[BUG]  [BUGGY]  if(t0  ==  y0.length)  {  [FE]  AssertionError  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  y0.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  ==  y0.length)  {	  if(t0    ==    y0)    {    	compilable	  [FE]  AssertionError  	1	1	replace
100	[BUG]  [BUGGY]  integrate(t0,  y0,  t,  t);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  integrate(t0,  y0,  t,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	integrate(t0,  y0,  t,  t);	  init(t0,    y0,    t,    t);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
101	[BUG]  [BUGGY]  init(t0,  y0,  t,  y);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(t0,  y0,  t,  y);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(t0,  y0,  t,  y);	  init(t0,    y0,    t,    t);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
102	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(equations.getDimension()  >  t0)  {	  if(equations.getDimension()    >=    t0)    {    	compilable	  [FE]  DimensionMismatchException  	70	1	replace
103	[BUG]  [BUGGY]  if(equations.getDimension()  >  t0)  {  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  >  t0)  {	  if(equations.getDimension()    >=    t0)    {    	compilable	  [FE]  DimensionMismatchException  	70	1	replace
104	[BUG]  [BUGGY]  if(equations!=  null)  {  if(equations!=  null)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null)  {  if(equations!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=    null)    {    if(equations!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
105	[BUG]  [BUGGY]  if(equations!=  null)  {  if(equations  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null)  {  if(equations  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=    null)    {    if(equations  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
106	[BUG]  [BUGGY]  if(equations!=  null)  {  If(equations!=  null)  {  [CE]  ';'  expected  [FE]        DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null)  {  If(equations!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=    null)    {    If(equations!=  null)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
107	[BUG]  [BUGGY]  if(equations!=  null)  {  if(equations  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null)  {  if(equations  >=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=    null)    {    if(equations  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
108	[BUG]  [BUGGY]  if(equations.getDimension()!=  y.length)  {  if(equations.getDimension()!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y.length)  {  if(equations.getDimension()!=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()!=    y.length)    {    if(equations.getDimension()!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
109	[BUG]  [BUGGY]  if(equations.getDimension()!=  y.length)  {  if(equations.getDimension()  >=  y.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y.length)  {  if(equations.getDimension()  >=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()!=    y.length)    {    if(equations.getDimension()  >=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
110	[BUG]  [BUGGY]  if(equations.getDimension()!=  y.length)  {  If(equations.getDimension()!=  y.length)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y.length)  {  If(equations.getDimension()!=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()!=    y.length)    {    If(equations.getDimension()!=  y.length)  {	  	non-compiled	[CE]  ';'  expected	89	None	add
111	[BUG]  [BUGGY]  if(equations.getDimension()!=  y.length)  {  if(equations.getDimension()  >>  y.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y.length)  {  if(equations.getDimension()  >>  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()!=    y.length)    {    if(equations.getDimension()  >>  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0  >=  y.length)  {	  if(t0!=    y.length)    {    	compilable	  [FE]  AssertionError  	92	1	replace
113	[BUG]  [BUGGY]  if(t0  >=  y.length)  {  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  >=  y.length)  {	  if(t0!=    y.length)    {    	compilable	  [FE]  AssertionError  	92	1	replace
114	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y.length!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(y.length!=  t0)  {	  if(t0!=    y.length)    {    	compilable	  [FE]  DimensionMismatchException  	92	1	replace
115	[BUG]  [BUGGY]  if(y.length!=  t0)  {  [FE]  DimensionMismatchException  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y.length!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y.length!=  t0)  {	  if(t0!=    y.length)    {    	compilable	  [FE]  DimensionMismatchException  	92	1	replace
116	[BUG]  [BUGGY]  if(t0!=  y.length)  {  if(t0!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y.length)  {  if(t0!=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=    y.length)    {    if(t0!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
117	[BUG]  [BUGGY]  if(t0!=  y.length)  {  if(t0  >=  y.length)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y.length)  {  if(t0  >=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=    y.length)    {    if(t0  >=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
118	[BUG]  [BUGGY]  if(t0!=  y.length)  {  if(t0  >>  y.length)  {  [CE]  illegal  start  of  expression  [FE]        DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y.length)  {  if(t0  >>  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=    y.length)    {    if(t0  >>  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
119	[BUG]  [BUGGY]  if(t0!=  y.length)  {  If(t0!=  y.length)  {  [CE]  ';'  expected  [FE]          DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y.length)  {  If(t0!=  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=    y.length)    {    If(t0!=  y.length)  {	  	non-compiled	[CE]  ';'  expected	91	None	add
120	[BUG]  [BUGGY]  if(t0  >=  t0)  {  if(t0  >=  t0)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  t0)  {  if(t0  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    >=    t0)    {    if(t0  >=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
121	[BUG]  [BUGGY]  if(t0  >=  t0)  {  if(t0!=  t0)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  t0)  {  if(t0!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    >=    t0)    {    if(t0!=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
122	[BUG]  [BUGGY]  if(t0  >=  t0)  {  if(t0  >>  t0)  {  [CE]  illegal  start  of  expression  [FE]        DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  t0)  {  if(t0  >>  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    >=    t0)    {    if(t0  >>  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
123	[BUG]  [BUGGY]  if(t0  >=  t0)  {  If(t0  >=  t0)  {  [CE]  ';'  expected  [FE]          DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  t0)  {  If(t0  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    >=    t0)    {    If(t0  >=  t0)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
124	[BUG]  [BUGGY]  if(y0.getDimension()!=  equations.getDimension())  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.getDimension()!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.getDimension()!=  equations.getDimension())  {	  if(equations.getDimension()!=    y0)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
125	[BUG]  [BUGGY]  if(t0.getDimension()!=  equations.getDimension())  {  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0.getDimension()!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0.getDimension()!=  equations.getDimension())  {	  if(equations.getDimension()!=    t0.length)    {    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
126	[BUG]  [BUGGY]  if(equations.getDimension()  >=  t0.length)  {  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >=  t0.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  >=  t0.length)  {	  if(equations.getDimension()!=    t0.length)    {    	non-compiled	[CE]  double  cannot  be  dereferenced	39	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y0.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(equations.getDimension()!=  y0.length)  {	  if(equations.getDimension()!=    t0.length)    {    	compilable	  [FE]  AssertionError  	39	1	replace
128	[BUG]  [BUGGY]  if(equations.getDimension()!=  y0.length)  {  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y0.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()!=  y0.length)  {	  if(equations.getDimension()!=    t0.length)    {    	compilable	  [FE]  AssertionError  	39	1	replace
129	[BUG]  [BUGGY]  t  =  equations.getDimension()  *  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getDimension()  *  1;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getDimension()  *  1;	  t    =    equations.getDimension()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
130	[BUG]  [BUGGY]  if(y0  ==  t1)  {  [CE]  cannot  find  symbol  t1  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0  ==  t1)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0  ==  t1)  {	  if(t0    ==    t1)    {    	non-compiled	[CE]  cannot  find  symbol  t1	88	None	replace
131	[BUG]  [BUGGY]  if(t0  ==  y1)  {  [CE]  cannot  find  symbol  y1  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  y1)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  ==  y1)  {	  if(t0    ==    t1)    {    	non-compiled	[CE]  cannot  find  symbol  y1	88	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t  ==  t0)  {	  if(t!=    t0)    {    	compilable	  [FE]  AssertionError  	36	1	replace
133	[BUG]  [BUGGY]  if(t  ==  t0)  {  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t  ==  t0)  {	  if(t!=    t0)    {    	compilable	  [FE]  AssertionError  	36	1	replace
134	[BUG]  [BUGGY]  If(t0  ==  t0)  {  [CE]  ';'  expected  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(t0  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(t0  ==  t0)  {	  if(t0    ==    t0)    {    If(t0    ==    t0)    {    	non-compiled	[CE]  ';'  expected	67	None	replace
135	[BUG]  [BUGGY]  t0  =  t,  equations.getT0();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  t,  equations.getT0();  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  t,  equations.getT0();	  t0    =    equations,    t.getT0();    	non-compiled	[CE]  ';'  expected	73	None	replace
136	[BUG]  [BUGGY]  t0  =  y0,  t.getT0();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  y0,  t.getT0();  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  y0,  t.getT0();	  t0    =    equations,    t.getT0();    	non-compiled	[CE]  ';'  expected	73	None	replace
137	[BUG]  [BUGGY]  T0  =  t0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  T0  =  t0;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	T0  =  t0;	  T0    =    equations.getT0();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
138	[BUG]  [BUGGY]  T0  =  equations.getT0()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  T0  =  equations.getT0()  +  1;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	T0  =  equations.getT0()  +  1;	  T0    =    equations.getT0();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
139	[BUG]  [BUGGY]  T0  =  equations.getT0()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  T0  =  equations.getT0()  -  1;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	T0  =  equations.getT0()  -  1;	  T0    =    equations.getT0();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
140	[BUG]  [BUGGY]  If(equations.getDimension()!=  t)  {  [CE]  ';'  expected  [FE]              DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(equations.getDimension()!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(equations.getDimension()!=  t)  {	  if(equations.getDimension()!=    t)    {    If(equations.getDimension()!=    t)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
141	[BUG]  [BUGGY]  If(equations.getDimension()  ==  t)  {  [CE]  ';'  expected  [FE]                DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(equations.getDimension()  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(equations.getDimension()  ==  t)  {	  if(equations.getDimension()!=    t)    {    If(equations.getDimension()!=    t)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
142	[BUG]  [BUGGY]  if(t!=  t0)  {  if(t!=  t0)  {  [CE]  illegal  start  of  expression  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t0)  {  if(t!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t0)    {    if(t!=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
143	[BUG]  [BUGGY]  if(t!=  t0)  {  if(t  >=  t0)  {  [CE]  illegal  start  of  expression  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t0)  {  if(t  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t0)    {    if(t  >=  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
144	[BUG]  [BUGGY]  if(t!=  t0)  {  if(t  >>  t0)  {  [CE]  illegal  start  of  expression  [FE]        DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t0)  {  if(t  >>  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t0)    {    if(t  >>  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
145	[BUG]  [BUGGY]  if(t!=  t0)  {  if(t  ==  t0)  {  [CE]  illegal  start  of  expression  [FE]          DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t0)  {  if(t  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t0)    {    if(t  ==  t0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
146	[BUG]  [BUGGY]  t0  =  t.getMaxCheckInterval();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  t.getMaxCheckInterval();  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  t.getMaxCheckInterval();	  t0    =    t.getT0();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
147	[BUG]  [BUGGY]  t0  =  t.getT0()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  t.getT0()  +  1;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  t.getT0()  +  1;	  t0    =    t.getT0();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
148	[BUG]  [BUGGY]  if(equations!=  null  &&  equations.hasDimension())  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  &&  equations.hasDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  &&  equations.hasDimension())  {	  if(t0!=    null    &&    equations.hasDimension())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
149	[BUG]  [BUGGY]  if(y0!=  null  &&  equations.hasDimension())  {  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null  &&  equations.hasDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=  null  &&  equations.hasDimension())  {	  if(t0!=    null    &&    equations.hasDimension())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
150	[BUG]  [BUGGY]  if(equivalents!=  null  &&  equations.hasDimension())  {  [CE]  cannot  find  symbol  equivalents  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equivalents!=  null  &&  equations.hasDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equivalents!=  null  &&  equations.hasDimension())  {	  if(t0!=    null    &&    equations.hasDimension())    {    	non-compiled	[CE]  cannot  find  symbol  equivalents	95	None	replace
151	[BUG]  [BUGGY]  t0  =  Math.min(t0,  t,  y);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0,  t,  y);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0,  t,  y);	  t0    =    Math.max(t0,    t,    y);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
152	[BUG]  [BUGGY]  t  =  equations.getDimension()  *  t0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getDimension()  *  t0;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getDimension()  *  t0;	  t    =    equations.getDimension()    +    t0;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
153	[BUG]  [BUGGY]  If(y0  ==  t0)  {  [CE]  ';'  expected  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(y0  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(y0  ==  t0)  {	  if(t0    ==    t0)    {    If(t0    ==    t0)    {    	non-compiled	[CE]  ';'  expected	67	None	replace
154	[BUG]  [BUGGY]  integrate(t0,  y0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  integrate(t0,  y0);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	integrate(t0,  y0);	  init(y0,    t,    t);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
155	[BUG]  [BUGGY]  if(t0  >=  y0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  y0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  >=  y0)  {	  if(t0    >=    t0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	72	None	replace
156	[BUG]  [BUGGY]  if(equations!=  null)  {  for(equations!=  null)  {  [CE]  not  a  statement  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null)  {  for(equations!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=    null)    {    for(equations!=  null)  {	  	non-compiled	[CE]  not  a  statement	53	None	add
157	[BUG]  [BUGGY]  if(t0!=  null  ||  t.length  ==  t.length)  {  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  null  ||  t.length  ==  t.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  null  ||  t.length  ==  t.length)  {	  if(t0    ==    null)    {    	non-compiled	[CE]  incomparable  types:  double  and  <null>	79	None	replace
158	[BUG]  [BUGGY]  if(equations!=  null  ||  t.length  ==  0)  {  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  ||  t.length  ==  0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  ||  t.length  ==  0)  {	  if(equations    ==    null)    {    	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	replace
159	[BUG]  [BUGGY]  if(t!=  t0)  {  If(t!=  t0)  {  [CE]  ';'  expected  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t0)  {  If(t!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t0)    {    If(t!=  t0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
160	[BUG]  [BUGGY]  T0  =  equations.getT0()  +  t;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  T0  =  equations.getT0()  +  t;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	T0  =  equations.getT0()  +  t;	  T0    =    equations.getT0();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0  >  y.length)  {	  if(t0!=    y.length)    {    	compilable	  [FE]  AssertionError  	92	1	replace
162	[BUG]  [BUGGY]  if(t0  >  y.length)  {  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  >  y.length)  {	  if(t0!=    y.length)    {    	compilable	  [FE]  AssertionError  	92	1	replace
163	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t  ==  t)  {	  if(t!=    t)    {    	compilable	  [FE]  DimensionMismatchException  	34	1	replace
164	[BUG]  [BUGGY]  if(t  ==  t)  {  [FE]  DimensionMismatchException  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  ==  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t  ==  t)  {	  if(t!=    t)    {    	compilable	  [FE]  DimensionMismatchException  	34	1	replace
165	[BUG]  [BUGGY]  If(y0!=  t0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(y0!=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(y0!=  t0)  {	  if(t0!=    t0)    {    If(t0!=    t0)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
166	[BUG]  [BUGGY]  init(equivalences,  t0,  y,  t);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(equivalences,  t0,  y,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(equivalences,  t0,  y,  t);	  init(equations,    t0,    y,    t);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
167	[BUG]  [BUGGY]  if(equations  ==  null)  {  for(equations  ==  null)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null)  {  for(equations  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations    ==    null)    {    for(equations  ==  null)  {	  	non-compiled	[CE]  not  a  statement	57	None	add
168	[BUG]  [BUGGY]  if(t0  ==  null  &&  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  null  &&  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  ==  null  &&  equations.getDimension()!=  null)  {	  if(t0!=    null    &&    equations.getDimension()!=    null)    {    	non-compiled	[CE]  incomparable  types:  double  and  <null>	94	None	replace
169	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t  >=  t0)  {	  if(t!=    t0)    {    	compilable	  [FE]  DimensionMismatchException  	36	1	replace
170	[BUG]  [BUGGY]  if(t  >=  t0)  {  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  >=  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t  >=  t0)  {	  if(t!=    t0)    {    	compilable	  [FE]  DimensionMismatchException  	36	1	replace
171	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  >  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t  >  t0)  {	  if(t!=    t0)    {    	compilable	  [FE]  DimensionMismatchException  	36	1	replace
172	[BUG]  [BUGGY]  if(t  >  t0)  {  [FE]  DimensionMismatchException  [FE]      DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t  >  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t  >  t0)  {	  if(t!=    t0)    {    	compilable	  [FE]  DimensionMismatchException  	36	1	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0  >=  equations.getDimension())  {	  if(t0    ==    equations.getDimension())    {    	compilable	  [FE]  AssertionError  	30	1	replace
174	[BUG]  [BUGGY]  if(t0  >=  equations.getDimension())  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  >=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  >=  equations.getDimension())  {	  if(t0    ==    equations.getDimension())    {    	compilable	  [FE]  AssertionError  	30	1	replace
175	[BUG]  [BUGGY]  t0  =  Math.min(t0,  t2);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0,  t2);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0,  t2);	  t0    =    Math.min(t0,    t1);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
176	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(x0.length!=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(x0.length!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(x0.length!=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
177	[BUG]  [BUGGY]  init(equations,  t0,  y0,  t);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(equations,  t0,  y0,  t);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(equations,  t0,  y0,  t);	  init(t0,    y0,    t,    t);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
178	[BUG]  [BUGGY]  init(t0,  y0,  t,  n);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(t0,  y0,  t,  n);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(t0,  y0,  t,  n);	  init(t0,    y0,    t,    t);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
179	[BUG]  [BUGGY]  t0  =  Math.min(t0,  y0));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0,  y0));  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0,  y0));	  t0    =    Math.min(t0,    t));    	non-compiled	[CE]  ';'  expected	46	None	replace
180	[BUG]  [BUGGY]  t0  =  Math.min(t0,  y1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0,  y1);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0,  y1);	  t0    =    Math.min(t0,    t));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
181	[BUG]  [BUGGY]  if(t!=  t)  {  if(t  >>  t)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t!=  t)  {  if(t  >>  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t!=    t)    {    if(t  >>  t)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
182	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  ||  t  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(equations!=  null  ||  t  >  0)  {	  if(equations!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	54	1	replace
183	[BUG]  [BUGGY]  if(equations!=  null  ||  t  >  0)  {  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  ||  t  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  ||  t  >  0)  {	  if(equations!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	54	1	replace
184	[BUG]  [BUGGY]  t  =  equations.getDimension(1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getDimension(1);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getDimension(1);	  t    =    equations.getDimension()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
185	[BUG]  [BUGGY]  if(Equations.getDimension()!=  y.getDimension())  {  [CE]  cannot  find  symbol  Equations  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(Equations.getDimension()!=  y.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(Equations.getDimension()!=  y.getDimension())  {	  if(y.getDimension()!=    equations.getDimension())    {    	non-compiled	[CE]  cannot  find  symbol  Equations	11	None	replace
186	[BUG]  [BUGGY]  t  =  equations.getDimension(),  y0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getDimension(),  y0);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getDimension(),  y0);	  t    =    equations.getDimension(),    t0);    	non-compiled	[CE]  ';'  expected	28	None	replace
187	[BUG]  [BUGGY]  t  =  equations.getDimension()  -  1,  t0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t  =  equations.getDimension()  -  1,  t0);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t  =  equations.getDimension()  -  1,  t0);	  t    =    equations.getDimension(),    t0);    	non-compiled	[CE]  ';'  expected	28	None	replace
188	[BUG]  [BUGGY]  t0  =  equations,  y0.getT0();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  equations,  y0.getT0();  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  equations,  y0.getT0();	  t0    =    equations,    t.getT0();    	non-compiled	[CE]  ';'  expected	73	None	replace
189	[BUG]  [BUGGY]  t0  =  Math.min(t0.length,  t.length);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.min(t0.length,  t.length);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.min(t0.length,  t.length);	  t0    =    Math.min(y0.length,    t.length);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
190	[BUG]  [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()  {  t)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  t)  {  if(equations.getDimension()  {  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()    ==    t)    {    if(equations.getDimension()  {  t)  {	  	non-compiled	[CE]  ')'  expected	17	None	add
191	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(i0.length!=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(i0.length!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(i0.length!=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
192	[BUG]  [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(t0!=  equations.getDimension())  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length!=  equations.getDimension())  {  if(t0!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length!=    equations.getDimension())    {    if(t0!=  equations.getDimension())  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
193	[BUG]  [BUGGY]  init(t0,  y,  equations);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  init(t0,  y,  equations);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	init(t0,  y,  equations);	  init(equations,    t0,    y,    t);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
194	[BUG]  [BUGGY]  if(equations.getDimension()  ==  null  ||  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  null  ||  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  ==  null  ||  equations.getDimension()!=  null)  {	  if(equations.getDimension()    ==    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	65	None	replace
195	[BUG]  [BUGGY]  if(equations.getDimension()  ==  null  ||  equations.getDimension()  ==  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  null  ||  equations.getDimension()  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  ==  null  ||  equations.getDimension()  ==  null)  {	  if(equations.getDimension()    ==    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	65	None	replace
196	[BUG]  [BUGGY]  if(t0!=  null  &&  equations.getDimension())  {  [CE]  incomparable  types:  double  and  <null>  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  null  &&  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  null  &&  equations.getDimension())  {	  if(t0!=    null    &&    equations.hasDimension())    {    	non-compiled	[CE]  incomparable  types:  double  and  <null>	95	None	replace
197	[BUG]  [BUGGY]  if(Equations.getDimension()!=  null  &&  equations.getDimension()!=  null)  {  [CE]  cannot  find  symbol  Equations  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(Equations.getDimension()!=  null  &&  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(Equations.getDimension()!=  null  &&  equations.getDimension()!=  null)  {	  if(equations.getDimension()!=    null    ||    equations.getDimension()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  Equations	63	None	replace
198	[BUG]  [BUGGY]  if(t.length!=  t)  {  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t.length!=  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t.length!=  t)  {	  if(t!=    t)    {    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
199	[BUG]  [BUGGY]  If(t0!=  y0)  {  [CE]  ';'  expected  [FE]              DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(t0!=  y0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(t0!=  y0)  {	  if(t0!=    t)    {    If(t0!=    t)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
200	[BUG]  [BUGGY]  if(t0  ==  null  ||  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  null  ||  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  ==  null  ||  equations.getDimension()!=  null)  {	  if(t0    ==    null)    {    	non-compiled	[CE]  incomparable  types:  double  and  <null>	79	None	replace
201	[BUG]  [BUGGY]  if(t0  ==  null  ||  equations.hasDimension())  {  [CE]  incomparable  types:  double  and  <null>  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  null  ||  equations.hasDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0  ==  null  ||  equations.hasDimension())  {	  if(t0    ==    null)    {    	non-compiled	[CE]  incomparable  types:  double  and  <null>	79	None	replace
202	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  Math.max(t0,  y1);  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  Math.max(t0,  y1);	  t0    =    Math.max(t0,    y0);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
203	[BUG]  [BUGGY]  if(t0!=  y.length  ||  t.equals(y))  {  [CE]  double  cannot  be  dereferenced  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y.length  ||  t.equals(y))  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  y.length  ||  t.equals(y))  {	  if(t0!=    y.length)    {    	non-compiled	[CE]  double  cannot  be  dereferenced	92	None	replace
204	[BUG]  [BUGGY]  if(t0!=  y2)  {  [CE]  cannot  find  symbol  y2  [FE]          AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y2)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  y2)  {	  if(t0!=    y1)    {    	non-compiled	[CE]  cannot  find  symbol  y2	93	None	replace
205	[BUG]  [BUGGY]  if(equations.getDimension()  ==  null  &&  equations.getDimension()  ==  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  null  &&  equations.getDimension()  ==  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  ==  null  &&  equations.getDimension()  ==  null)  {	  if(equations.getDimension()!=    null    &&    equations.getDimension()    ==    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	98	None	replace
206	[BUG]  [BUGGY]  if(t0!=  null  ||  equations.isDimension())  {  [CE]  incomparable  types:  double  and  <null>  [FE]                    AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  null  ||  equations.isDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  null  ||  equations.isDimension())  {	  if(t0!=    null    &&    equations.isDimension())    {    	non-compiled	[CE]  incomparable  types:  double  and  <null>	96	None	replace
207	[BUG]  [BUGGY]  if(t0  ==  t)  {  if(t0  {  t)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0  ==  t)  {  if(t0  {  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0    ==    t)    {    if(t0  {  t)  {	  	non-compiled	[CE]  ')'  expected	2	None	add
208	[BUG]  [BUGGY]  t0  =  t.getTime();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  t.getTime();  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  t.getTime();	  t0    =    t.getT0();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
209	[BUG]  [BUGGY]  t0  =  t.getSize();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  t.getSize();  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  t.getSize();	  t0    =    t.getT0();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
210	[BUG]  [BUGGY]  If(t0  ==  equations.getDimension())  {  [CE]  ';'  expected  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  If(t0  ==  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	If(t0  ==  equations.getDimension())  {	  if(t0!=    equations.getDimension())    {    If(t0!=    equations.getDimension())    {    	non-compiled	[CE]  ';'  expected	75	None	replace
211	[BUG]  [BUGGY]  if(equations  ==  null  ||!equations.isEmpty())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null  ||!equations.isEmpty())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations  ==  null  ||!equations.isEmpty())  {	  if(equations    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
212	[BUG]  [BUGGY]  if(equations  ==  null  ||!equations.hasDimension())  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null  ||!equations.hasDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations  ==  null  ||!equations.hasDimension())  {	  if(equations    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
213	[BUG]  [BUGGY]  if(y0!=  null  ||  t.length  ==  y.length)  {  [CE]  double  cannot  be  dereferenced  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null  ||  t.length  ==  y.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=  null  ||  t.length  ==  y.length)  {	  if(y0!=    null)    {    	non-compiled	[CE]  double  cannot  be  dereferenced	56	None	replace
214	[BUG]  [BUGGY]  if(equations.getDimension()!=  y0.getDimension())  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()!=  y0.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()!=  y0.getDimension())  {	  if(y.getDimension()!=    equations.getDimension())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
215	[BUG]  [BUGGY]  if(t0!=  equations.getTimension())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  equations.getTimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  equations.getTimension())  {	  if(y0.length!=    equations.getDimension())    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  <  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(equations.getDimension()  <  t0)  {	  if(equations.getDimension()    >=    t0)    {    	compilable	  [FE]  AssertionError  	70	1	replace
217	[BUG]  [BUGGY]  if(equations.getDimension()  <  t0)  {  [FE]  AssertionError  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  <  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  <  t0)  {	  if(equations.getDimension()    >=    t0)    {    	compilable	  [FE]  AssertionError  	70	1	replace
218	[BUG]  [BUGGY]  t0  =  t0,  equations.getT0();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  t0  =  t0,  equations.getT0();  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	t0  =  t0,  equations.getT0();	  t0    =    equations,    t.getT0();    	non-compiled	[CE]  ';'  expected	73	None	replace
219	[BUG]  [BUGGY]  if(equations!=  null  &&  y0!=  equations.getDimension())  {  [CE]  incomparable  types:  double[]  and  int  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  &&  y0!=  equations.getDimension())  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  &&  y0!=  equations.getDimension())  {	  if(y0!=    equations.getDimension())    {    	non-compiled	[CE]  incomparable  types:  double[]  and  int	99	None	replace
220	[BUG]  [BUGGY]  if(equations.getDimension()  ==  null  &&  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  ==  null  &&  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  ==  null  &&  equations.getDimension()!=  null)  {	  if(equations.getDimension()!=    null    &&    equations.getDimension()!=    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	97	None	replace
221	[BUG]  [BUGGY]  T0  =  equations.getT0()  +  t0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  T0  =  equations.getT0()  +  t0;  [BUGGY]      if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	T0  =  equations.getT0()  +  t0;	  T0    =    equations.getT0();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
222	[BUG]  [BUGGY]  if(equations  ==  null)  {  if(equations  {  null)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations  ==  null)  {  if(equations  {  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations    ==    null)    {    if(equations  {  null)  {	  	non-compiled	[CE]  ')'  expected	57	None	add
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(equations.getDimension()  >  t)  {	  if(equations.getDimension()!=    t)    {    if(equations.getDimension()    >=    t)    {    	compilable	  [FE]  AssertionError  	24	1	replace
224	[BUG]  [BUGGY]  if(equations.getDimension()  >  t)  {  [FE]  AssertionError  [FE]          DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations.getDimension()  >  t)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations.getDimension()  >  t)  {	  if(equations.getDimension()!=    t)    {    if(equations.getDimension()    >=    t)    {    	compilable	  [FE]  AssertionError  	24	1	replace
225	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  &&  equations.getDimension()  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(equations!=  null  &&  equations.getDimension()  >  0)  {	  if(equations!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	54	1	replace
226	[BUG]  [BUGGY]  if(equations!=  null  &&  equations.getDimension()  >  0)  {  [FE]  DimensionMismatchException  [FE]    DimensionMismatchException    [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(equations!=  null  &&  equations.getDimension()  >  0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(equations!=  null  &&  equations.getDimension()  >  0)  {	  if(equations!=    null)    {    	compilable	  [FE]  DimensionMismatchException  	54	1	replace
227	[BUG]  [BUGGY]  if(y0!=  null  ||  equations.getDimension()!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]              AssertionError      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0!=  null  ||  equations.getDimension()!=  null)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0!=  null  ||  equations.getDimension()!=  null)  {	  if(equations!=    null    ||    equations.getDimension()!=    null)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	64	None	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(y0.length  ==  t0)  {	  if(t0    ==    t0)    {    if(t0    ==    t0)    {    	compilable	  [FE]  AssertionError  	66	1	replace
229	[BUG]  [BUGGY]  if(y0.length  ==  t0)  {  [FE]  AssertionError  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(y0.length  ==  t0)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(y0.length  ==  t0)  {	  if(t0    ==    t0)    {    if(t0    ==    t0)    {    	compilable	  [FE]  AssertionError  	66	1	replace
230	[BUG]  [BUGGY]  [FE]  DimensionMismatchException  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y0.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	add	if(t0!=  y0.length)  {	  if(t0!=    y0)    {    	compilable	  [FE]  DimensionMismatchException  	76	1	replace
231	[BUG]  [BUGGY]  if(t0!=  y0.length)  {  [FE]  DimensionMismatchException  [FE]        DimensionMismatchException      [CONTEXT]      public  double  integrate(final  FirstOrderDifferentialEquations  equations,  final  double  t0,  final  double[]  y0,  final  double  t,  final  double[]  y)  throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }      [BUGGY]  if(t0!=  y0.length)  {  [BUGGY]      throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	203	203	1	replace	if(t0!=  y0.length)  {	  if(t0!=    y0)    {    	compilable	  [FE]  DimensionMismatchException  	76	1	replace
