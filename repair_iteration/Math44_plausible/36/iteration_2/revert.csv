projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(!statesInitialized){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(!isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates!=null){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=eventsStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=currentEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=events.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=this.events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=eventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(eventT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.resetOccurred(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep&&isInitialized){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()==1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=steps.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=events.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep){if(isLastStep)<
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=eventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(previousT,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=iterator.events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(previousT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=currentT.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventsInitialized.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(currentT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=state.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>t){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.events.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.stepHandlers.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventsStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=eventStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep){intisLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.eventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=this.eventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=es.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=currentEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventsList.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(expT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.events.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep&&currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=iterator.next();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=events.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.events.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.events.entrySet().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()==1){if(eventsStates.size()==1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()==1){If(eventsStates.size()==1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()==1){if(eventsStates.size()>=1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()==1){if(eventsStates.size()!=1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=this.eventStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.steps.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){if(isLastStep)<
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>t0){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT==currentT){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.resetOccurred();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.eventStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.eventStates.entrySet().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=stepHandlers.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.resetOccurred(previousT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.removeBegin(previousT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reset(previousT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(previousT,eventT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>previousT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT&&currentT<eventsStates.length){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>=currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()>1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()<1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()!=1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=otherEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventsEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){if(previousT>currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){If(previousT>currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){for(previousT>currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT==null){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT!=currentT){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(currentT,previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(interpolator,previousT,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(interpolator,previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.resetOccurred(previousT,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=currentEvent.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.resetOccurred(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.resetOccurred(currentT,previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=previousT.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=currentEvent.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.currentT.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newLinkedList<EventState>(this.eventStates.iterator());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.events.entrySet().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=events.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.stepHandlers!=null?this.stepHandlers.iterator():null;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newLinkedList<EventState>(this.stepHandlers.iterator());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT==currentT){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT==null){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT==t){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.events.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=eventsInitialized.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newLinkedList<EventState>(this.eventsList.iterator());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newArrayList<EventState>(this.eventsList.iterator());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newLinkedList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates(eventT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates(currentT,previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>eventT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>eventTEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>convergence){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(!isLastStep){intisLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep||isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){intisLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd){if(currentT>tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd){If(currentT>tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd){if(currentT>tEnd)<
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>tEnd||currentT>tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT<t0||currentT>tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>t0){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=this.events.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventsEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventsStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventsStates.entrySet().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventStates.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventHandlers.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates(currentT,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=this.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()==1){for(EventStatestate:eventsStates){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=(this.stepHandlers!=null)?null:this.stepHandlers.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=isLastStep?getEventStates(previousT):null;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventsInitialized.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(eventT,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(interpolator,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>this.currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT&&state.isLastStep()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates().values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=allEvents.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=es.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=state.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=es.eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventHandlers.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=events.events().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()>=1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventStates=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=stepHandlers.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>tEnd){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>0){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>t){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>0){intisLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>t){intisLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283intisLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitialize(currentT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeEnd(currentT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT&&currentT){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reset();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reset(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newArrayList<EventState>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){for(EventStatestate:eventsStates){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){inteventsStates=getEventsStates();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.resetOccurred(currentT-previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.stepHandlers.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.initializeBegin(previousT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitialize(previousT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventStates.values();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd){for(EventStatestate:eventsStates){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd){inttEnd=getEventState(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.stepHandlers.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.events.enterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(expandableODE,currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(currentT,expandableODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.initializeBegin(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=this.eventStates.enterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>=tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=getEventStates(currentT+1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates!=null){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>tEnd){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>t0){If(currentT==tEnd){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=(this.events!=null)?null:this.events.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitialize(currentT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates==null){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()>1){If(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>t0){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>0){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventsInitialized.enterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitializeBegin(currentT,resetOccurred);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()==1){if(eventsStates.size(){1){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=allEventStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=allEventStates().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep&&stateInitialized){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newLinkedList<EventState>(this.eventStates.size());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.initializeBegin(currentT,interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=iterator.events();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=iterator.allEvents();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=iterator.getEventStates(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=createEventStates(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=(this.stepHandlers!=null)?this.stepHandlers.values().iterator():null;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT&&currentT<eventsStates.size()){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=this.eventsStates.entrySet().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.removeBegin(previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>events=allEvents.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.reinitialize(currentT,previousT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=this.eventsStates.enterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(currentT>tEnd&&currentT<=t0){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>eventsStates=newLinkedList<EventState>(eventStates.iterator());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>stateInitialized){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates!=null){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates!=null){if(isLastStep)<
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(eventsStates.size()>1){if(isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Iterator<EventState>iterator=otherEvents.values().iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(isLastStep&&isLastStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283Statestate=currentEvent.getState();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283state.initializeBegin(interpolator);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java283if(previousT>currentT){inteventsStates=getEventStates();
