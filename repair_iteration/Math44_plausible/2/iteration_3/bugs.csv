bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "n "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "n "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(name.trim().equals( "n "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  false;  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	58	None	replace
2	[BUG]  [BUGGY]  this(name,  expandable,  isLastStep);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable,  isLastStep);	  this(name,    ExpandableStatefulODE,    isLastStep);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	142	None	replace
3	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  isInitialized);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  isInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE,  isLastStep,  isInitialized);	  this(name,    ExpandableStatefulODE,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	142	None	replace
4	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  isLastStep);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE,  isLastStep,  isLastStep);	  this(name,    ExpandableStatefulODE,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	142	None	replace
5	[BUG]  [BUGGY]  this(name,  ExpandableStatefulEvents,  isLastStep);  [CE]  cannot  find  symbol  ExpandableStatefulEvents  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulEvents,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulEvents,  isLastStep);	  this(name,    ExpandableStatefulODE,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulEvents	142	None	replace
6	[BUG]  [BUGGY]  this.name  =  name.trim();  if(this.expandable!=  null)  {  this.name  =  name.trim();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(this.expandable!=  null)  {  this.name  =  name.trim();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(this.expandable!=  null)  {  this.name  =  name.trim();  }	  this.name    =    name.trim();    if(name!=    null)    {    this.name    =    name.trim();    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	140	None	replace
7	[BUG]  [BUGGY]  this.name  =  name.trim();  if(this.expr!=  null)  {  this.name  =  name.trim();  }  [CE]  cannot  find  symbol  expr  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(this.expr!=  null)  {  this.name  =  name.trim();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(this.expr!=  null)  {  this.name  =  name.trim();  }	  this.name    =    name.trim();    if(name!=    null)    {    this.name    =    name.trim();    }    	non-compiled	[CE]  cannot  find  symbol  expr	140	None	replace
8	[BUG]  [BUGGY]  this.name  =  name  ==  null?  Name.valueOf(name):  Name.valueOf(name);  [CE]  cannot  find  symbol  Name  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  Name.valueOf(name):  Name.valueOf(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  Name.valueOf(name):  Name.valueOf(name);	  this.name    =    name    ==    null?    name    :    Name.valueOf(name);    	non-compiled	[CE]  cannot  find  symbol  Name	54	None	replace
9	[BUG]  [BUGGY]  this.name  =  name!=  null?  name  :  Name.valueOf(name);  [CE]  cannot  find  symbol  Name  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  name  :  Name.valueOf(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name!=  null?  name  :  Name.valueOf(name);	  this.name    =    name    ==    null?    name    :    Name.valueOf(name);    	non-compiled	[CE]  cannot  find  symbol  Name	54	None	replace
10	[BUG]  [BUGGY]  this.name  =  name.trim();  if(name  ==  null)  {  this.name  =  name.trim();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(name  ==  null)  {  this.name  =  name.trim();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(name  ==  null)  {  this.name  =  name.trim();  }	  this.name    =    name.trim();    if(name!=    null)    {    this.name    =    name.trim();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	139	None	replace
11	[BUG]  [BUGGY]  This.name  =  name.trim();  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.name  =  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.name  =  name.trim();	  this.name    =    name.trim();    this.name    =    name.trim();    	non-compiled	[CE]  cannot  find  symbol  This	55	None	replace
12	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  this.name  =  name.toUpperCase();  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  this.name  =  name.toUpperCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    this.name  =  name.toUpperCase();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	40	None	add
13	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    if(name.toUpperCase()!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	40	None	add
14	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()  ==  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()  ==  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    if(name.toUpperCase()  ==  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	40	None	add
15	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()!=  null)  {  this.name  =  name.toUpperCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()!=  null)  {  this.name  =  name.toUpperCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    if(name.toUpperCase()!=  null)  {  this.name  =  name.toUpperCase();  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	40	None	add
16	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()  ==  null)  {  this.name  =  name.toUpperCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  if(name.toUpperCase()  ==  null)  {  this.name  =  name.toUpperCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    if(name.toUpperCase()  ==  null)  {  this.name  =  name.toUpperCase();  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	40	None	add
17	[BUG]  [BUGGY]  this(name,  expandable.class,  ExpandableStatefulODE.class,  isLastStep);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable.class,  ExpandableStatefulODE.class,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable.class,  ExpandableStatefulODE.class,  isLastStep);	  this(name,    expandable.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
18	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandable.class);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandable.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  expandable.class);	  this(name,    expandable.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
19	[BUG]  [BUGGY]  this(name,  expandable,  null,  ExpandableStatefulODE.class);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable,  null,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable,  null,  ExpandableStatefulODE.class);	  this(name,    expandable.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	96	None	replace
20	[BUG]  [BUGGY]  this.expandable  =  exportable.equals(name);  [CE]  cannot  find  symbol  exportable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  exportable.equals(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  exportable.equals(name);	  this.expandable    =    name.equals(expandable);    	non-compiled	[CE]  cannot  find  symbol  exportable	21	None	replace
21	[BUG]  [BUGGY]  this.expandable  =  ExpandableStateful;  [CE]  cannot  find  symbol  ExpandableStateful  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStateful;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStateful;	  this.expandable    =    ExpandableStatefulODE;    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	90	None	replace
22	[BUG]  [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  name;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  name;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  name;  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	36	None	replace
23	[BUG]  [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =   " ";  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =   " ";  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =   " ";  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	36	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  new  String(name.toLowerCase());	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	compilable	  [FE]  AssertionError  	36	1	replace
25	[BUG]  [BUGGY]  this.name  =  new  String(name.toLowerCase());  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toLowerCase());	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	compilable	  [FE]  AssertionError  	36	1	replace
26	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  false);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  false);	  this.expandable    =    ExpandableStatefulODE.create(name,    true);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
27	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  true,  isLastStep);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  true,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  true,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.create(name,    true);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
28	[BUG]  [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "n "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "n "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(name.trim().equals( "n "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	59	None	replace
29	[BUG]  [BUGGY]  this.expandable  =  name;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  incompatible  types	144	None	replace
30	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  incompatible  types	144	None	replace
31	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  ExpandableStatefulODE;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  incompatible  types	144	None	replace
32	[BUG]  [BUGGY]  This.name  =  name  +  1;  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.name  =  name  +  1;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.name  =  name  +  1;	  this.name    =    name    +    1;    if(name!=    null)    {    this.name    =    name    +    1;    }    else    {    this.name    =    name    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  This	148	None	replace
33	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
34	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
35	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
36	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
37	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                super();        this.expandable    =    expandable;    this.expandable  =  expandable;	  	compilable	  [FE]  AssertionError  	24	1	add
39	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  this.expandable  =  expandable;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    this.expandable  =  expandable;	  	compilable	  [FE]  AssertionError  	24	1	add
40	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  super();  this.expandable  =  expandable;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  super();  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    super();  this.expandable  =  expandable;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	add
41	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  this.events  =  new  ArrayList  <  Integer>();  this.expandable  =  expandable;  [CE]  cannot  find  symbol  events  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  this.events  =  new  ArrayList  <  Integer>();  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    this.events  =  new  ArrayList  <  Integer>();  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  events	24	None	add
42	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  this.events  =  new  ArrayList  <  Incrementor>();  [CE]  cannot  find  symbol  events  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  this.events  =  new  ArrayList  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    this.events  =  new  ArrayList  <  Incrementor>();	  	non-compiled	[CE]  cannot  find  symbol  events	24	None	add
43	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  this.events  =  new  ArrayList  <  Incrementor>();  this.expandable  =  expandable;  [CE]  cannot  find  symbol  events  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  this.events  =  new  ArrayList  <  Incrementor>();  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    this.events  =  new  ArrayList  <  Incrementor>();  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  events	24	None	add
44	[BUG]  [BUGGY]  this(name.toLowerCase(),  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  isLastStep);	  this(name.toLowerCase(),    expandable);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	75	None	replace
45	[BUG]  [BUGGY]  this(name.toLowerCase(),  expandable,  isLastStep);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  expandable,  isLastStep);	  this(name.toLowerCase(),    expandable);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	75	None	replace
46	[BUG]  [BUGGY]  this(name.toLowerCase(),  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  expansionable);	  this(name.toLowerCase(),    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansionable	75	None	replace
47	[BUG]  [BUGGY]  This.name  =  name.toLowerCase();  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.name  =  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.name  =  name.toLowerCase();	  this.name    =    name.toLowerCase();    if(name.toLowerCase()    ==    null)    {    this.name    =    name.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  This	49	None	replace
48	[BUG]  [BUGGY]  this.expandable  =  name.equals(expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name.equals(expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name.equals(expansionable);	  this.expandable    =    expansionable.equals(name);    	non-compiled	[CE]  cannot  find  symbol  expansionable	114	None	replace
49	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.createIntegrator();  [CE]  cannot  find  symbol  expr  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expr  =  ExpandableStatefulODE.createIntegrator();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expr  =  ExpandableStatefulODE.createIntegrator();	          super();    this.expr    =    ExpandableStatefulODE.createIntegrator();    	non-compiled	[CE]  cannot  find  symbol  expr	105	None	replace
50	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.createIntegrator();  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expansion  =  ExpandableStatefulODE.createIntegrator();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expansion  =  ExpandableStatefulODE.createIntegrator();	          super();    this.expr    =    ExpandableStatefulODE.createIntegrator();    	non-compiled	[CE]  cannot  find  symbol  expansion	105	None	replace
51	[BUG]  [BUGGY]  null  =  ExpandableStatefulODE.createIntegrator();  [CE]  unexpected  type  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  null  =  ExpandableStatefulODE.createIntegrator();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	null  =  ExpandableStatefulODE.createIntegrator();	          super();    this.expr    =    ExpandableStatefulODE.createIntegrator();    	non-compiled	[CE]  unexpected  type	105	None	replace
52	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  incompatible  types	69	None	replace
53	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  false);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  false);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    true);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
54	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }	  this.name    =    name    +    1;    if(name!=    null)    {    this.name    =    name    +    1;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	149	None	replace
55	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(name!=  null)  {  this.name  =  name  +  1;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(name!=  null)  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(name!=  null)  {  this.name  =  name  +  1;  }	  this.name    =    name    +    1;    if(name!=    null)    {    this.name    =    name    +    1;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	149	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?   "null "  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  name!=  null?   "null "  :  name;	  this.name    =    name    ==    null?   "null   "    :    name;    	compilable	  [FE]  AssertionError  	134	1	replace
57	[BUG]  [BUGGY]  this.name  =  name!=  null?   "null "  :  name;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?   "null "  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name!=  null?   "null "  :  name;	  this.name    =    name    ==    null?   "null   "    :    name;    	compilable	  [FE]  AssertionError  	134	1	replace
58	[BUG]  [BUGGY]  this.name  =  name.toLowerCase();  if(this.name!=  null)  {  this.name  =  name.toLowerCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toLowerCase();  if(this.name!=  null)  {  this.name  =  name.toLowerCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.toLowerCase();  if(this.name!=  null)  {  this.name  =  name.toLowerCase();  }	  this.name    =    name.toLowerCase();    if(name!=    null)    {    this.name    =    name.toLowerCase();    }    else    {    this.name    =    name.toLowerCase();    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	131	None	replace
59	[BUG]  [BUGGY]  this.name  =  name.toLowerCase();  if(name  ==  null)  {  this.name  =  name.toLowerCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toLowerCase();  if(name  ==  null)  {  this.name  =  name.toLowerCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.toLowerCase();  if(name  ==  null)  {  this.name  =  name.toLowerCase();  }	  this.name    =    name.toLowerCase();    if(name!=    null)    {    this.name    =    name.toLowerCase();    }    else    {    this.name    =    name.toLowerCase();    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	131	None	replace
60	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  isLastStep);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
61	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  statesInitialized);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  statesInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  statesInitialized);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
62	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  state);  [CE]  cannot  find  symbol  state  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  state);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep,  state);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  state	42	None	replace
63	[BUG]  [BUGGY]  this(name,  isLastStep,  ExpandableStatefulODE.class);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  isLastStep,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  isLastStep,  ExpandableStatefulODE.class);	  this(name,    expandable,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	16	None	replace
64	[BUG]  [BUGGY]  this(name,  expandable,  ExpandableStatefulODE.class,  isLastStep);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable,  ExpandableStatefulODE.class,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable,  ExpandableStatefulODE.class,  isLastStep);	  this(name,    expandable,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	16	None	replace
65	[BUG]  [BUGGY]  this(name,  isFirstStep,  ExpandableStatefulODE.class);  [CE]  cannot  find  symbol  isFirstStep  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  isFirstStep,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  isFirstStep,  ExpandableStatefulODE.class);	  this(name,    expandable,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	16	None	replace
66	[BUG]  [BUGGY]  super(name,  ExpandableStateful);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStateful);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStateful);	  super(name,    ExpandableStatefulODE);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	3	None	replace
67	[BUG]  [BUGGY]  super(name,  ExpandableStateful.EMPTY);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStateful.EMPTY);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStateful.EMPTY);	  super(name,    ExpandableStatefulODE);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	3	None	replace
68	[BUG]  [BUGGY]  super(name,  null,  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  null,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  null,  expandable);	  super(name,    null);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	5	None	replace
69	[BUG]  [BUGGY]  super(name,  null,  ExpandableStatefulODE);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  null,  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  null,  ExpandableStatefulODE);	  super(name,    null);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	5	None	replace
70	[BUG]  [BUGGY]  super(name,  null,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  null,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  null,  expansionable);	  super(name,    null);    	non-compiled	[CE]  cannot  find  symbol  expansionable	5	None	replace
71	[BUG]  [BUGGY]  super(name,  null,  expandedable);  [CE]  cannot  find  symbol  expandedable  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  null,  expandedable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  null,  expandedable);	  super(name,    null);    	non-compiled	[CE]  cannot  find  symbol  expandedable	5	None	replace
72	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  this.name  =  name!=  null?  null  :  name.trim();  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  this.name  =  name!=  null?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.trim();    this.name  =  name!=  null?  null  :  name.trim();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	87	None	add
73	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  this.name  =  name  ==  null?  null  :  name.trim();  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  this.name  =  name  ==  null?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.trim();    this.name  =  name  ==  null?  null  :  name.trim();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	87	None	add
74	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  This.name  =  name!=  null?  null  :  name.trim();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  This.name  =  name!=  null?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.trim();    This.name  =  name!=  null?  null  :  name.trim();	  	non-compiled	[CE]  cannot  find  symbol  This	87	None	add
75	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  this.name  =  name  >>  null?  null  :  name.trim();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.trim();  this.name  =  name  >>  null?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.trim();    this.name  =  name  >>  null?  null  :  name.trim();	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	87	None	add
76	[BUG]  [BUGGY]  super(name.toLowerCase(),  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name.toLowerCase(),  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name.toLowerCase(),  expandable);	  super(name.toLowerCase());    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	107	None	replace
77	[BUG]  [BUGGY]  super(name.toLowerCase(),  true);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name.toLowerCase(),  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name.toLowerCase(),  true);	  super(name.toLowerCase());    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	107	None	replace
78	[BUG]  [BUGGY]  super(name,  evaluations.toLowerCase());  [CE]  cannot  reference  evaluations  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  evaluations.toLowerCase());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  evaluations.toLowerCase());	  super(name.toLowerCase());    	non-compiled	[CE]  cannot  reference  evaluations  before  supertype  constructor  has  been  called	107	None	replace
79	[BUG]  [BUGGY]  super(name.toLowerCase(),  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name.toLowerCase(),  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name.toLowerCase(),  expansionable);	  super(name.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol  expansionable	107	None	replace
80	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE,  expandable,  isLastStep);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE,  expandable,  isLastStep);	  this(name,    ExpandableStatefulODE,    expandable);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	115	None	replace
81	[BUG]  [BUGGY]  this(name,  expandable,  ExpandableStatefulODE);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable,  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable,  ExpandableStatefulODE);	  this(name,    ExpandableStatefulODE,    expandable);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	115	None	replace
82	[BUG]  [BUGGY]  super(name,  expandable);  this.expandable  =  expandable;  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  expandable);  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  expandable);  this.expandable  =  expandable;	  super(name);    this.expandable    =    expandable;    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	137	None	replace
83	[BUG]  [BUGGY]  super(name,  null);  this.expandable  =  expandable;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  null);  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  null);  this.expandable  =  expandable;	  super(name);    this.expandable    =    expandable;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	137	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  0L;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  name  +  0L;	  this.name    =    name    +    1L;    	compilable	  [FE]  AssertionError  	95	1	replace
85	[BUG]  [BUGGY]  this.name  =  name  +  0L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  0L;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  0L;	  this.name    =    name    +    1L;    	compilable	  [FE]  AssertionError  	95	1	replace
86	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  expandable);	  this(name,    ExpandableStatefulODE.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	138	None	replace
87	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  isLastStep);	  this(name,    ExpandableStatefulODE.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	138	None	replace
88	[BUG]  [BUGGY]  this(name,  new  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  new  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  new  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);	  this(name,    ExpandableStatefulODE.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
89	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  isLastStep);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
90	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  size);  [CE]  cannot  find  symbol  size  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  size);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  size);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol  size	43	None	replace
91	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  isLastStep);	  this(name,    ExpandableStatefulODE.class,    expansionable);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	17	None	replace
92	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  expansion);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  expansion);	  this(name,    ExpandableStatefulODE.class,    expansionable);    	non-compiled	[CE]  cannot  find  symbol  expansion	17	None	replace
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	145	1	add
94	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	145	1	add
95	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	145	1	add
96	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	145	1	add
97	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	145	1	add
98	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	145	1	add
99	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  expanable  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	145	None	add
100	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	145	1	add
101	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	145	1	add
102	[BUG]  [BUGGY]  this.events  =  new  LinkedList  <  Integer>();  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  LinkedList  <  Integer>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  LinkedList  <  Integer>();	  this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  events	79	None	replace
103	[BUG]  [BUGGY]  this.events  =  new  java.util.ArrayList  <  Integer>();  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  java.util.ArrayList  <  Integer>();	  this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  events	79	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	143	1	add
105	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	143	1	add
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	143	1	add
107	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	143	1	add
108	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
109	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	143	1	add
111	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	143	1	add
112	[BUG]  [BUGGY]  this.expanable  =  expandable.equals(name);  [CE]  cannot  find  symbol  expanable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expanable  =  expandable.equals(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expanable  =  expandable.equals(name);	  this.expandable    =    name.equals(expanable);    	non-compiled	[CE]  cannot  find  symbol  expanable	22	None	replace
113	[BUG]  [BUGGY]  this.expanable  =  expansionable.equals(name);  [CE]  cannot  find  symbol  expanable  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expanable  =  expansionable.equals(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expanable  =  expansionable.equals(name);	  this.expandable    =    name.equals(expanable);    	non-compiled	[CE]  cannot  find  symbol  expanable	22	None	replace
114	[BUG]  [BUGGY]  this.events  =  Collections.emptyList();  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  Collections.emptyList();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  Collections.emptyList();	          super();    this.events    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	129	None	replace
115	[BUG]  [BUGGY]  this.events  =  Lists.emptyList();  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  Lists.emptyList();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  Lists.emptyList();	          super();    this.events    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	129	None	replace
116	[BUG]  [BUGGY]  this.events  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  Collections.EMPTY_LIST;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  Collections.EMPTY_LIST;	          super();    this.events    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	129	None	replace
117	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(1);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(0);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
118	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(0,  name);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(0,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(0,  name);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(0);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
119	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.class,  name.getInstance();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.class,  name.getInstance();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.class,  name.getInstance();	  this.expandable    =    ExpandableStatefulODE.class.getInstance();    	non-compiled	[CE]  ';'  expected	102	None	replace
120	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getInstance(name);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getInstance(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.class.getInstance(name);	  this.expandable    =    ExpandableStatefulODE.class.getInstance();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
121	[BUG]  [BUGGY]  super(name,  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  isLastStep);	  super(name,    expandable);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	2	None	replace
122	[BUG]  [BUGGY]  super(name,  expandable,  isLastStep);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  expandable,  isLastStep);	  super(name,    expandable);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	2	None	replace
123	[BUG]  [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =   " ";  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =   " ";  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(isLastStep)  {  this.name  =   " ";  }  else  {  isLastStep  =  false;  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	34	None	replace
124	[BUG]  [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	34	None	replace
125	[BUG]  [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  else  {  isLastStep  =  false;  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	34	None	replace
126	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
127	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
128	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
129	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
130	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
131	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
132	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
133	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	64	None	add
134	[BUG]  [BUGGY]  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulEdge;  [CE]  cannot  find  symbol  ExpandableStatefulEdge  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulEdge;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulEdge;	          this.expandable    =    expandable;    this.expandable    =    ExpandableStatefulODE;    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulEdge	111	None	replace
135	[BUG]  [BUGGY]  this.events  =  new  LinkedList  <  Incrementor>();  [CE]  cannot  find  symbol  events  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  LinkedList  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  LinkedList  <  Incrementor>();	  this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  events	77	None	replace
136	[BUG]  [BUGGY]  this.events  =  new  TreeSet  <  Incrementor>();  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  TreeSet  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  TreeSet  <  Incrementor>();	  this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  events	77	None	replace
137	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.INstance;  [CE]  cannot  find  symbol  INstance  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.INstance;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.INstance;	  this.expandable    =    ExpandableStatefulODE.instance;    	non-compiled	[CE]  cannot  find  symbol  INstance	127	None	replace
138	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.INSTANCE;  [CE]  cannot  find  symbol  INSTANCE  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.INSTANCE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.INSTANCE;	  this.expandable    =    ExpandableStatefulODE.instance;    	non-compiled	[CE]  cannot  find  symbol  INSTANCE	127	None	replace
139	[BUG]  [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(1);  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	57	None	replace
140	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE.class,  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE.class,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE.class,  expandable);	  super(name,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	108	None	replace
141	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE.class,  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE.class,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE.class,  isLastStep);	  super(name,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	108	None	replace
142	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE.class,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE.class,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE.class,  expansionable);	  super(name,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol  expansionable	108	None	replace
143	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE.class,  expandedable);  [CE]  cannot  find  symbol  expandedable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE.class,  expandedable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE.class,  expandedable);	  super(name,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol  expandedable	108	None	replace
144	[BUG]  [BUGGY]  this.name  =  new  String(name);  this.name  =  new  String(name);  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name);  this.name  =  new  String(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    new    String(name);    this.name  =  new  String(name);	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	97	None	add
145	[BUG]  [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  this.name  =  new  String(name);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  this.name  =  new  String(name);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    new    String(name);    if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  this.name  =  new  String(name);  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	97	None	add
146	[BUG]  [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    new    String(name);    if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	97	None	add
147	[BUG]  [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    new    String(name);    if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	97	None	add
148	[BUG]  [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name);  if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    new    String(name);    if(name!=  null)  {  this.name  =  new  String(name);  }  else  {  isLastStep  =  true;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	97	None	add
149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	62	1	add
150	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	62	1	add
151	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	62	1	add
153	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  AssertionError  	62	1	add
154	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  This	62	None	add
155	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	62	None	add
156	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	83	None	replace
157	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.expandable  ==  null)  {  this.name  =  name  +  1;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.expandable  ==  null)  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.expandable  ==  null)  {  this.name  =  name  +  1;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	83	None	replace
158	[BUG]  [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  this.name  =  name  ==  null?   "null "  :  name;  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  this.name  =  name  ==  null?   "null "  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?   "null   "    :    name;    this.name  =  name  ==  null?   "null "  :  name;	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	133	None	add
159	[BUG]  [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  this.name  =  name  ==  null?   "null ",  name;  [CE]  :  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  this.name  =  name  ==  null?   "null ",  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?   "null   "    :    name;    this.name  =  name  ==  null?   "null ",  name;	  	non-compiled	[CE]  :  expected	133	None	add
160	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toUpperCase(),  isLastStep);	  this(name.toLowerCase(),    name.toUpperCase());    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	130	None	replace
161	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  true);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,boolean)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toUpperCase(),  true);	  this(name.toLowerCase(),    name.toUpperCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,boolean)	130	None	replace
162	[BUG]  [BUGGY]  this(name,  name.toLowerCase(),  name.toUpperCase());  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,String)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  name.toLowerCase(),  name.toUpperCase());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  name.toLowerCase(),  name.toUpperCase());	  this(name.toLowerCase(),    name.toUpperCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,String)	130	None	replace
163	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toUpperCase(),  expandable);	  this(name.toLowerCase(),    name.toUpperCase());    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	130	None	replace
164	[BUG]  [BUGGY]  if(expandable!=  null)  {  super();  this.expandable  =  ExpandableStatefulODE.createIntegrator();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(expandable!=  null)  {  super();  this.expandable  =  ExpandableStatefulODE.createIntegrator();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(expandable!=  null)  {  super();  this.expandable  =  ExpandableStatefulODE.createIntegrator();  }	          super();    this.expandable    =    ExpandableStatefulODE.createIntegrator();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	103	None	replace
165	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.newInstance(name);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.newInstance(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.newInstance(name);	  this.expandable    =    ExpandableStatefulODE.newInstance();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
166	[BUG]  [BUGGY]  This.expandable  =  ExpandableStatefulODE.newInstance();  [CE]  cannot  find  symbol  This  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.expandable  =  ExpandableStatefulODE.newInstance();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.expandable  =  ExpandableStatefulODE.newInstance();	  this.expandable    =    ExpandableStatefulODE.newInstance();    	non-compiled	[CE]  cannot  find  symbol  This	14	None	replace
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.substring(0,  name.length()  -  1));  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  new  String(name.substring(0,  name.length()  -  1));	  this.name    =       "       ";    this.name    =       "       ";    	compilable	  [FE]  AssertionError  	33	1	replace
168	[BUG]  [BUGGY]  this.name  =  new  String(name.substring(0,  name.length()  -  1));  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.substring(0,  name.length()  -  1));  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.substring(0,  name.length()  -  1));	  this.name    =       "       ";    this.name    =       "       ";    	compilable	  [FE]  AssertionError  	33	1	replace
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super();  this.name  =  name  ==  null?  name  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	super();  this.name  =  name  ==  null?  name  :  name;	  this.name    =    name    ==    null?    name    :    name;    super();    this.name    =    name    ==    null?    name    :    name;    	compilable	  [FE]  AssertionError  	99	1	replace
170	[BUG]  [BUGGY]  super();  this.name  =  name  ==  null?  name  :  name;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super();  this.name  =  name  ==  null?  name  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super();  this.name  =  name  ==  null?  name  :  name;	  this.name    =    name    ==    null?    name    :    name;    super();    this.name    =    name    ==    null?    name    :    name;    	compilable	  [FE]  AssertionError  	99	1	replace
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;	  	compilable	  [FE]  AssertionError  	60	1	add
172	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  expandable;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;	  	compilable	  [FE]  AssertionError  	60	1	add
173	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  This.expandable  =  expandable;  this.expandable  =  expandable;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  This.expandable  =  expandable;  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    This.expandable  =  expandable;  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  This	60	None	add
174	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	60	None	add
175	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  Expandable;  this.expandable  =  expandable;  [CE]  cannot  find  symbol  Expandable  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  Expandable;  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  Expandable;  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  Expandable	60	None	add
176	[BUG]  [BUGGY]  this.expandable  =  name.equals(expandable)&&  isLastStep;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name.equals(expandable)&&  isLastStep;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name.equals(expandable)&&  isLastStep;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  incompatible  types	113	None	replace
177	[BUG]  [BUGGY]  this.expandable  =  isLastStep.equals(expandable)&&  expandable;  [CE]  boolean  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  isLastStep.equals(expandable)&&  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  isLastStep.equals(expandable)&&  expandable;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  boolean  cannot  be  dereferenced	113	None	replace
178	[BUG]  [BUGGY]  super();  this.expandable  =  ExpandableStatefulODE;  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super();  this.expandable  =  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super();  this.expandable  =  ExpandableStatefulODE;	          super();    this.expandable    =    expandable;    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	25	None	replace
179	[BUG]  [BUGGY]  This.name  =  name  ==  null?  name  :  name;  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.name  =  name  ==  null?  name  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.name  =  name  ==  null?  name  :  name;	  this.name    =    name    ==    null?    name    :    name;    This.name    =    name    ==    null?    name    :    name;    	non-compiled	[CE]  cannot  find  symbol  This	20	None	replace
180	[BUG]  [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  isLastStep);  [CE]  no  suitable  constructor  found  for  String(String,String,boolean)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  isLastStep);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  isLastStep);	  this.name    =    new    String(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String,String,boolean)	72	None	replace
181	[BUG]  [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  true);  [CE]  no  suitable  constructor  found  for  String(String,String,boolean)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  true);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  true);	  this.name    =    new    String(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String,String,boolean)	72	None	replace
182	[BUG]  [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  false);  [CE]  no  suitable  constructor  found  for  String(String,String,boolean)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  false);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  false);	  this.name    =    new    String(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String,String,boolean)	72	None	replace
183	[BUG]  [BUGGY]  this(name,  ExpandableStateful.EMPTY,  expandable);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStateful.EMPTY,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStateful.EMPTY,  expandable);	  this(name,    ExpandableStateful.EMPTY);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	52	None	replace
184	[BUG]  [BUGGY]  this(name,  ExpandableStateful.EMPTY,  isLastStep);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStateful.EMPTY,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStateful.EMPTY,  isLastStep);	  this(name,    ExpandableStateful.EMPTY);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	52	None	replace
185	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.EMPTY);  [CE]  cannot  find  symbol  EMPTY  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.EMPTY);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.EMPTY);	  this(name,    ExpandableStateful.EMPTY);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	52	None	replace
186	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	82	None	replace
187	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase(Locale.ENGLISH);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name!=  null?  null  :  name.toLowerCase(Locale.ENGLISH);	  this.name    =    name.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
188	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase(Locale.ENGLISH);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  null  :  name.toLowerCase(Locale.ENGLISH);	  this.name    =    name.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
189	[BUG]  [BUGGY]  this(name,  name.trim());  This.name  =  name.trim();  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String)  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  name.trim());  This.name  =  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  name.trim());  This.name  =  name.trim();	  this.name    =    name.trim();    This.name    =    name.trim();    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String)	124	None	replace
190	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toLowerCase(),  isLastStep);	  this(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	106	None	replace
191	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  true);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,boolean)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toLowerCase(),  true);	  this(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,boolean)	106	None	replace
192	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  false);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,boolean)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toLowerCase(),  false);	  this(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,String,boolean)	106	None	replace
193	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
194	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
195	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
196	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
197	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
198	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
199	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
200	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	66	1	add
201	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	compilable	  [FE]  NullPointerException  	66	1	add
202	[BUG]  [BUGGY]  this(name,  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  isLastStep);	  this(name,    expandable);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	50	None	replace
203	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase();  this.name  =  name  ==  null?  null  :  name.toLowerCase();  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase();  this.name  =  name  ==  null?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?    null    :    name.toLowerCase();    this.name  =  name  ==  null?  null  :  name.toLowerCase();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	70	None	add
204	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase();  this.name  =  name!=  null?  null  :  name.toLowerCase();  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase();  this.name  =  name!=  null?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?    null    :    name.toLowerCase();    this.name  =  name!=  null?  null  :  name.toLowerCase();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	70	None	add
205	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase();  This.name  =  name  ==  null?  null  :  name.toLowerCase();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.toLowerCase();  This.name  =  name  ==  null?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?    null    :    name.toLowerCase();    This.name  =  name  ==  null?  null  :  name.toLowerCase();	  	non-compiled	[CE]  cannot  find  symbol  This	70	None	add
206	[BUG]  [BUGGY]  this.expandable  =  ExpandableStateful.class.getSimpleName();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStateful.class.getSimpleName();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStateful.class.getSimpleName();	  this.expandable    =    ExpandableStatefulODE.class.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
207	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getSimpleName(),  name;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getSimpleName(),  name;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.class.getSimpleName(),  name;	  this.expandable    =    ExpandableStatefulODE.class.getSimpleName();    	non-compiled	[CE]  ';'  expected	7	None	replace
208	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getSimpleName(),  name);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getSimpleName(),  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.class.getSimpleName(),  name);	  this.expandable    =    ExpandableStatefulODE.class.getSimpleName();    	non-compiled	[CE]  ';'  expected	7	None	replace
209	[BUG]  [BUGGY]  this(name,  ExpandableStateful.ODE);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStateful.ODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStateful.ODE);	  this(name,    ExpandableStateful);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	51	None	replace
210	[BUG]  [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Integer>();  }	          super();    this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	26	None	replace
211	[BUG]  [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          super();    this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	26	None	replace
212	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
213	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  true);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  true);	  this.expandable    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
214	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  null;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  null;	  this.name    =       "       ";    This.name    =       "       ";    	compilable	  [FE]  AssertionError  	93	1	replace
215	[BUG]  [BUGGY]  this.name  =  null;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  null;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  null;	  this.name    =       "       ";    This.name    =       "       ";    	compilable	  [FE]  AssertionError  	93	1	replace
216	[BUG]  [BUGGY]  super(name);  this.name  =  name  +  1;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name);  this.name  =  name  +  1;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name);  this.name  =  name  +  1;	  this.name    =    name    +    1;    super(name);    this.name    =    name    +    1;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	123	None	replace
217	[BUG]  [BUGGY]  super(name);  this.name  =  name  +  2;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name);  this.name  =  name  +  2;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name);  this.name  =  name  +  2;	  this.name    =    name    +    1;    super(name);    this.name    =    name    +    1;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	123	None	replace
218	[BUG]  [BUGGY]  this.expandable  =  expansionable.create();  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expansionable.create();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expansionable.create();	  this.expandable    =    expandable.create();    	non-compiled	[CE]  cannot  find  symbol  expansionable	13	None	replace
219	[BUG]  [BUGGY]  this.name  =  name  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  /  2;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  /  2;	  this.name    =    name    +    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	12	None	replace
220	[BUG]  [BUGGY]  this.expr  =  new  Incrementor();  [CE]  cannot  find  symbol  expr  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expr  =  new  Incrementor();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expr  =  new  Incrementor();	          super();    this.expr    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  expr	28	None	replace
221	[BUG]  [BUGGY]  null  =  new  Incrementor();  [CE]  unexpected  type  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  null  =  new  Incrementor();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	null  =  new  Incrementor();	          super();    this.expr    =    new    Incrementor();    	non-compiled	[CE]  unexpected  type	28	None	replace
222	[BUG]  [BUGGY]  null  =  null;  this.expr  =  new  Incrementor();  [CE]  unexpected  type  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  null  =  null;  this.expr  =  new  Incrementor();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	null  =  null;  this.expr  =  new  Incrementor();	          super();    this.expr    =    new    Incrementor();    	non-compiled	[CE]  unexpected  type	28	None	replace
223	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  expandable);  [CE]  cannot  find  symbol  DEFAULT  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.DEFAULT,  expandable);	  this(name,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	100	None	replace
224	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  isLastStep);  [CE]  cannot  find  symbol  DEFAULT  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  isLastStep);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.DEFAULT,  isLastStep);	  this(name,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	100	None	replace
225	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  expansion);  [CE]  cannot  find  symbol  DEFAULT  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  expansion);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.DEFAULT,  expansion);	  this(name,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	100	None	replace
226	[BUG]  [BUGGY]  this.name  =  name.trim();  super(name.toLowerCase());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(name.toLowerCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(name.toLowerCase());	  this.name    =    name.toLowerCase();    super(name.toLowerCase());    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	119	None	replace
227	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  true);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  new  ExpandableStatefulODE(name,  true);	  this.expandable    =    new    ExpandableStatefulODE();    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	89	None	replace
228	[BUG]  [BUGGY]  super(name.trim());  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name.trim());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name.trim());	  this.name    =    name.trim();    super(name.trim());    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	125	None	replace
229	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.getInstance();  [CE]  cannot  find  symbol  expr  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expr  =  ExpandableStatefulODE.getInstance();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expr  =  ExpandableStatefulODE.getInstance();	          super();    this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expr	104	None	replace
230	[BUG]  [BUGGY]  null  =  ExpandableStatefulODE.getInstance();  [CE]  unexpected  type  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  null  =  ExpandableStatefulODE.getInstance();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	null  =  ExpandableStatefulODE.getInstance();	          super();    this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  unexpected  type	104	None	replace
231	[BUG]  [BUGGY]  this.expansion  =  ExpandableStatefulODE.getInstance();  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expansion  =  ExpandableStatefulODE.getInstance();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expansion  =  ExpandableStatefulODE.getInstance();	          super();    this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expansion	104	None	replace
232	[BUG]  [BUGGY]  this(name.toLowerCase(),  false,  name);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,String)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  false,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  false,  name);	  this(name.toLowerCase(),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,String)	76	None	replace
233	[BUG]  [BUGGY]  this(name.toLowerCase(),  false,  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  false,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  false,  isLastStep);	  this(name.toLowerCase(),    false);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	76	None	replace
234	[BUG]  [BUGGY]  this(name.toLowerCase(),  false,  true);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,boolean)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  false,  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  false,  true);	  this(name.toLowerCase(),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,boolean)	76	None	replace
235	[BUG]  [BUGGY]  this(name.toLowerCase(),  true,  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  true,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  true,  isLastStep);	  this(name.toLowerCase(),    true);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	73	None	replace
236	[BUG]  [BUGGY]  this(name.toLowerCase(),  true,  false);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,boolean)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  true,  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  true,  false);	  this(name.toLowerCase(),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,boolean)	73	None	replace
237	[BUG]  [BUGGY]  this(name.toLowerCase(),  true,  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  true,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  true,  expandable);	  this(name.toLowerCase(),    true);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	73	None	replace
238	[BUG]  [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  this.name  =  name!=  null?  name.trim()  :   "null ";  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  this.name  =  name!=  null?  name.trim()  :   "null ";  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    name.trim()    :   "null   ";    this.name  =  name!=  null?  name.trim()  :   "null ";	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	135	None	add
239	[BUG]  [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  this.name  =  name  ==  null?  name.trim()  :   "null ";  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  this.name  =  name  ==  null?  name.trim()  :   "null ";  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    name.trim()    :   "null   ";    this.name  =  name  ==  null?  name.trim()  :   "null ";	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	135	None	add
240	[BUG]  [BUGGY]  this(name,  ExpandableStateful.DEFAULT,  expandable);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStateful.DEFAULT,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStateful.DEFAULT,  expandable);	  this(name,    ExpandableStateful.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	53	None	replace
241	[BUG]  [BUGGY]  this(name,  ExpandableStateful.DEFAULT,  isLastStep);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStateful.DEFAULT,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStateful.DEFAULT,  isLastStep);	  this(name,    ExpandableStateful.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	53	None	replace
242	[BUG]  [BUGGY]  this.name  =  name  +  2;  this.name  =  name  +  2;  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  this.name  =  name  +  2;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    this.name  =  name  +  2;	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
243	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
244	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  2;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  2;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  2;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
245	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
246	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name  ==  null)  {  this.name  =  name  +  2;  }  else  {  isLastStep  =  true;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
247	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  this.statesInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  this.statesInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  this.statesInitialized);	  this.expandable    =    ExpandableStatefulODE.create(name,    expansion);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
248	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandable,  isLastStep);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  expandable,  isLastStep);	  this(name,    ExpandableStatefulODE.class,    expandable);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	15	None	replace
249	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  isFirstStep);  [CE]  cannot  find  symbol  isFirstStep  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  isFirstStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  isFirstStep);	  this(name,    ExpandableStatefulODE.class,    expandable);    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	15	None	replace
250	[BUG]  [BUGGY]  this.name  =  name  +  1L;  this.name  =  name  +  1L;  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1L;  this.name  =  name  +  1L;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    1L;    this.name  =  name  +  1L;	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	94	None	add
251	[BUG]  [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    1L;    if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	94	None	add
252	[BUG]  [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  this.name  =  name  +  1L;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  this.name  =  name  +  1L;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    1L;    if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  this.name  =  name  +  1L;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	94	None	add
253	[BUG]  [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    1L;    if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  isLastStep  =  true;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	94	None	add
254	[BUG]  [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1L;  if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    1L;    if(name  ==  null)  {  this.name  =  name  +  1L;  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	94	None	add
255	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  isLastStep);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
256	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  state);  [CE]  cannot  find  symbol  state  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  state);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  state);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  state	9	None	replace
257	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
258	[BUG]  [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =   " ";  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =   " ";  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(isLastStep)  {  this.name  =   " ";  }  else  {  isLastStep  =  true;  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	35	None	replace
259	[BUG]  [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(isLastStep)  {  this.name  =  null;  }  else  {  isLastStep  =  true;  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	35	None	replace
260	[BUG]  [BUGGY]  this.name  =  name;  if(isLastStep  ==  false)  {  this.name  =  null;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(isLastStep  ==  false)  {  this.name  =  null;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(isLastStep  ==  false)  {  this.name  =  null;  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	35	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.trim());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  new  String(name.trim());	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
262	[BUG]  [BUGGY]  this.name  =  new  String(name.trim());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.trim());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.trim());	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
263	[BUG]  [BUGGY]  this(name.toUpperCase(),  true);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toUpperCase(),  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toUpperCase(),  true);	  this(name.toUpperCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean)	74	None	replace
264	[BUG]  [BUGGY]  this(name.toUpperCase(),  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toUpperCase(),  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toUpperCase(),  expandable);	  this(name.toUpperCase());    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	74	None	replace
265	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  AssertionError>();  [CE]  cannot  find  symbol  events  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  ArrayList  <  AssertionError>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  ArrayList  <  AssertionError>();	          super();    this.events    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol  events	128	None	replace
266	[BUG]  [BUGGY]  null  =  null;  this.events  =  new  ArrayList  <  AssertionError>();  [CE]  unexpected  type  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  null  =  null;  this.events  =  new  ArrayList  <  AssertionError>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	null  =  null;  this.events  =  new  ArrayList  <  AssertionError>();	          super();    this.events    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  unexpected  type	128	None	replace
267	[BUG]  [BUGGY]  this.events  =  new  LinkedList  <  AssertionError>();  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  LinkedList  <  AssertionError>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  LinkedList  <  AssertionError>();	          super();    this.events    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol  events	128	None	replace
268	[BUG]  [BUGGY]  null  =  new  ArrayList  <  Incrementor>();  [CE]  unexpected  type  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  null  =  new  ArrayList  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	null  =  new  ArrayList  <  Incrementor>();	          super();    this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  unexpected  type	23	None	replace
269	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  isLastStep);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.getInstance(name,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.getInstance(name);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
270	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  expandable);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.getInstance(name,  expandable);	  this.expandable    =    ExpandableStatefulODE.getInstance(name);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
271	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  true);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.getInstance(name,  true);	  this.expandable    =    ExpandableStatefulODE.getInstance(name);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
272	[BUG]  [BUGGY]  this(name,  expandable.toLowerCase(),  isLastStep);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable.toLowerCase(),  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable.toLowerCase(),  isLastStep);	  this(name,    expandable.toLowerCase());    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	92	None	replace
273	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.toLowerCase());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.toLowerCase());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.toLowerCase());	  this(name,    expandable.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
274	[BUG]  [BUGGY]  this(name,  expandable.toUpperCase());  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable.toUpperCase());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable.toUpperCase());	  this(name,    expandable.toLowerCase());    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	92	None	replace
275	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  0);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  0);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    expansion);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
276	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  size);  [CE]  cannot  find  symbol  size  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  size);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  size);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    expansion);    	non-compiled	[CE]  cannot  find  symbol  size	101	None	replace
277	[BUG]  [BUGGY]  this.events  =  new  LinkedList  <  Integrator>();  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  LinkedList  <  Integrator>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  LinkedList  <  Integrator>();	  this.events    =    new    ArrayList    <    Integrator>();    	non-compiled	[CE]  cannot  find  symbol  events	78	None	replace
278	[BUG]  [BUGGY]  this.events  =  new  TreeSet  <  Integrator>();  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  TreeSet  <  Integrator>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  TreeSet  <  Integrator>();	  this.events    =    new    ArrayList    <    Integrator>();    	non-compiled	[CE]  cannot  find  symbol  events	78	None	replace
279	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  this.name  =  name!=  null?  null  :  name.toLowerCase();  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  this.name  =  name!=  null?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.toLowerCase();    this.name  =  name!=  null?  null  :  name.toLowerCase();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	116	None	add
280	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  this.name  =  name  ==  null?  null  :  name.toLowerCase();  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  this.name  =  name  ==  null?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.toLowerCase();    this.name  =  name  ==  null?  null  :  name.toLowerCase();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	116	None	add
281	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  This.name  =  name!=  null?  null  :  name.toLowerCase();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  This.name  =  name!=  null?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.toLowerCase();    This.name  =  name!=  null?  null  :  name.toLowerCase();	  	non-compiled	[CE]  cannot  find  symbol  This	116	None	add
282	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  this.name  =  name  >>  null?  null  :  name.toLowerCase();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.toLowerCase();  this.name  =  name  >>  null?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    null    :    name.toLowerCase();    this.name  =  name  >>  null?  null  :  name.toLowerCase();	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	116	None	add
283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super();  this.name  =  name  +  1;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	super();  this.name  =  name  +  1;	  this.name    =    name    +    1;    super();    this.name    =    name    +    1;    	compilable	  [FE]  AssertionError  	122	1	replace
284	[BUG]  [BUGGY]  super();  this.name  =  name  +  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super();  this.name  =  name  +  1;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super();  this.name  =  name  +  1;	  this.name    =    name    +    1;    super();    this.name    =    name    +    1;    	compilable	  [FE]  AssertionError  	122	1	replace
285	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.trim();  this.name  =  name  ==  null?  null  :  name.trim();  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.trim();  this.name  =  name  ==  null?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?    null    :    name.trim();    this.name  =  name  ==  null?  null  :  name.trim();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	85	None	add
286	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.trim();  this.name  =  name!=  null?  null  :  name.trim();  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.trim();  this.name  =  name!=  null?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?    null    :    name.trim();    this.name  =  name!=  null?  null  :  name.trim();	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	85	None	add
287	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.trim();  This.name  =  name  ==  null?  null  :  name.trim();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.trim();  This.name  =  name  ==  null?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?    null    :    name.trim();    This.name  =  name  ==  null?  null  :  name.trim();	  	non-compiled	[CE]  cannot  find  symbol  This	85	None	add
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  name.trim()  : "null ";  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  name  ==  null?  name.trim()  : "null ";	  this.name    =    name!=    null?    name.trim()    :   "null   ";    	compilable	  [FE]  AssertionError  	136	1	replace
289	[BUG]  [BUGGY]  this.name  =  name  ==  null?  name.trim()  : "null ";  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  name.trim()  : "null ";  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  name.trim()  : "null ";	  this.name    =    name!=    null?    name.trim()    :   "null   ";    	compilable	  [FE]  AssertionError  	136	1	replace
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  name.trim()  : "  <  null> ";  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  name!=  null?  name.trim()  : "  <  null> ";	  this.name    =    name!=    null?    name.trim()    :   "null   ";    	compilable	  [FE]  AssertionError  	136	1	replace
291	[BUG]  [BUGGY]  this.name  =  name!=  null?  name.trim()  : "  <  null> ";  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  name.trim()  : "  <  null> ";  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name!=  null?  name.trim()  : "  <  null> ";	  this.name    =    name!=    null?    name.trim()    :   "null   ";    	compilable	  [FE]  AssertionError  	136	1	replace
292	[BUG]  [BUGGY]  super(name.trim(),  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name.trim(),  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name.trim(),  expandable);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	126	None	replace
293	[BUG]  [BUGGY]  this.name  =  name.trim();  super(expandable.trim(),  name);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(expandable.trim(),  name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(expandable.trim(),  name);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
294	[BUG]  [BUGGY]  this.name  =  name.trim();  super(expansion.trim(),  expandable);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(expansion.trim(),  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(expansion.trim(),  expandable);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
295	[BUG]  [BUGGY]  this.name  =  name.trim();  super(expandeable.trim(),  name);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(expandeable.trim(),  name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(expandeable.trim(),  name);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
296	[BUG]  [BUGGY]  this(name,  null,  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  null,  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  null,  expandable);	  this(name,    null);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	38	None	replace
297	[BUG]  [BUGGY]  this(name,  null,  ExpandableStatefulODE);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  null,  ExpandableStatefulODE);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  null,  ExpandableStatefulODE);	  this(name,    null);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	38	None	replace
298	[BUG]  [BUGGY]  this(name,  null,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  null,  expansionable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  null,  expansionable);	  this(name,    null);    	non-compiled	[CE]  cannot  find  symbol  expansionable	38	None	replace
299	[BUG]  [BUGGY]  this(name,  null,  expandedable);  [CE]  cannot  find  symbol  expandedable  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  null,  expandedable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  null,  expandedable);	  this(name,    null);    	non-compiled	[CE]  cannot  find  symbol  expandedable	38	None	replace
300	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  isLastStep);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  new  ExpandableStatefulODE(name,  isLastStep);	  this.expandable    =    new    ExpandableStatefulODE(name);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	91	None	replace
301	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  expandable);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  new  ExpandableStatefulODE(name,  expandable);	  this.expandable    =    new    ExpandableStatefulODE(name);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	91	None	replace
302	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  false);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  new  ExpandableStatefulODE(name,  false);	  this.expandable    =    new    ExpandableStatefulODE(name);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	91	None	replace
303	[BUG]  [BUGGY]  this.name  =  new  Integer(name.toString());  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  Integer(name.toString());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  Integer(name.toString());	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    	non-compiled	[CE]  incompatible  types	37	None	replace
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  = " "  +  name  +  1;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  = " "  +  name  +  1;	  this.name    =    name    +    1;    this.name    =    name    +    1;    	compilable	  [FE]  AssertionError  	80	1	replace
305	[BUG]  [BUGGY]  this.name  = " "  +  name  +  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  = " "  +  name  +  1;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  = " "  +  name  +  1;	  this.name    =    name    +    1;    this.name    =    name    +    1;    	compilable	  [FE]  AssertionError  	80	1	replace
306	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  expandable);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE,  isLastStep,  expandable);	  this(name,    ExpandableStatefulODE,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	142	None	replace
307	[BUG]  [BUGGY]  this(name,  ExpandableStatefulOccurred,  isLastStep);  [CE]  cannot  find  symbol  ExpandableStatefulOccurred  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulOccurred,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulOccurred,  isLastStep);	  this(name,    ExpandableStatefulODE,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulOccurred	142	None	replace
308	[BUG]  [BUGGY]  super(name,  expandable.toLowerCase());  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  expandable.toLowerCase());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  expandable.toLowerCase());	  super(name.toLowerCase());    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	107	None	replace
309	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE.toLowerCase());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE.toLowerCase());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE.toLowerCase());	  super(name.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
310	[BUG]  [BUGGY]  this.name  =  name.toLowerCase();  if(name.toLowerCase()  ==  null)  {  this.name  =  name.toLowerCase();  }  else  {  this.name  =  name.toLowerCase()  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toLowerCase();  if(name.toLowerCase()  ==  null)  {  this.name  =  name.toLowerCase();  }  else  {  this.name  =  name.toLowerCase()  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.toLowerCase();  if(name.toLowerCase()  ==  null)  {  this.name  =  name.toLowerCase();  }  else  {  this.name  =  name.toLowerCase()	  this.name    =    name.toLowerCase();    if(name.toLowerCase()    ==    null)    {    this.name    =    name.toLowerCase();    }    else    {    this.name    =    name.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	47	None	replace
311	[BUG]  [BUGGY]  This.expandable  =  ExpandableStatefulODE.class.getInstance();  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.expandable  =  ExpandableStatefulODE.class.getInstance();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.expandable  =  ExpandableStatefulODE.class.getInstance();	  this.expandable    =    ExpandableStatefulODE.class.getInstance();    	non-compiled	[CE]  cannot  find  symbol  This	102	None	replace
312	[BUG]  [BUGGY]  super(name.toLowerCase(),  false);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name.toLowerCase(),  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name.toLowerCase(),  false);	          super();    super();    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	27	None	replace
313	[BUG]  [BUGGY]  this.name  =  name;  if(this.expable  ==  null)  {  this.name  =   " ";  }  [CE]  cannot  find  symbol  expable  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(this.expable  ==  null)  {  this.name  =   " ";  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(this.expable  ==  null)  {  this.name  =   " ";  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  cannot  find  symbol  expable	36	None	replace
314	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep  +  1);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep  +  1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    isLastStep);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	42	None	replace
315	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep  -  1);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep  -  1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    isLastStep);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	42	None	replace
316	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	9	None	replace
317	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toUpperCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  new  String(name.toUpperCase());	  this.name    =       "       ";    this.name    =       "       ";    	compilable	  [FE]  AssertionError  	33	1	replace
318	[BUG]  [BUGGY]  this.name  =  new  String(name.toUpperCase());  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toUpperCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toUpperCase());	  this.name    =       "       ";    this.name    =       "       ";    	compilable	  [FE]  AssertionError  	33	1	replace
319	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    	non-compiled	[CE]  incompatible  types	146	None	replace
320	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  setMaxEvaluations(1);  }  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  setMaxEvaluations(1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    	non-compiled	[CE]  incompatible  types	146	None	replace
321	[BUG]  [BUGGY]  super(name,  ExpandableStatefulOccurred);  [CE]  cannot  find  symbol  ExpandableStatefulOccurred  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulOccurred);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulOccurred);	  super(name,    ExpandableStatefulODE);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulOccurred	3	None	replace
322	[BUG]  [BUGGY]  this.name  =  name.trim();  super(expable.trim(),  name);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(expable.trim(),  name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(expable.trim(),  name);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
323	[BUG]  [BUGGY]  this.name  =  name.trim();  super(expansionable.trim(),  name);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(expansionable.trim(),  name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(expansionable.trim(),  name);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
324	[BUG]  [BUGGY]  this.expanable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [CE]  cannot  find  symbol  expanable  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expanable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expanable  =  expandable;  this.expandable  =  ExpandableStatefulODE;	          this.expandable    =    expandable;    this.expandable    =    ExpandableStatefulODE;    	non-compiled	[CE]  cannot  find  symbol  expanable	111	None	replace
325	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expansionable);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansionable	43	None	replace
326	[BUG]  [BUGGY]  this.expandable  =  expansionable;  [CE]  cannot  find  symbol  expansionable  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expansionable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expansionable;	          this.expandable    =    expandable;    super();    this.expandable    =    expandable;    	non-compiled	[CE]  cannot  find  symbol  expansionable	112	None	replace
327	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expansionable);	  this.expandable    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansionable	8	None	replace
328	[BUG]  [BUGGY]  super(name);  this.name  =  name  +  0;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name);  this.name  =  name  +  0;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name);  this.name  =  name  +  0;	  this.name    =    name    +    1;    super(name);    this.name    =    name    +    1;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	123	None	replace
329	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.toLowerCase(),  true);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.toLowerCase(),  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.toLowerCase(),  true);	  this(name.toLowerCase(),    true);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
330	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
331	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
332	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	145	1	add
333	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	145	1	add
334	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
335	[BUG]  [BUGGY]  this.name  =  name  +  1L;  This.name  =  name  +  1L;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1L;  This.name  =  name  +  1L;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    1L;    This.name  =  name  +  1L;	  	non-compiled	[CE]  cannot  find  symbol  This	94	None	add
336	[BUG]  [BUGGY]  if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }	          super();    this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	26	None	replace
337	[BUG]  [BUGGY]  if(name  ==  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name  ==  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }	          super();    this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	26	None	replace
338	[BUG]  [BUGGY]  this.name  =  new  String(name);  This.name  =  new  String(name);  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name);  This.name  =  new  String(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    new    String(name);    This.name  =  new  String(name);	  	non-compiled	[CE]  cannot  find  symbol  This	97	None	add
339	[BUG]  [BUGGY]  this.name  =  new  String(name);  super();  this.name  =  new  String(name);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name);  super();  this.name  =  new  String(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    new    String(name);    super();  this.name  =  new  String(name);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	97	None	add
340	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  This.name  =  name.toUpperCase();  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  This.name  =  name.toUpperCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    This.name  =  name.toUpperCase();	  	non-compiled	[CE]  cannot  find  symbol  This	40	None	add
341	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  super(name.toUpperCase());  this.name  =  name.toUpperCase();  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  super(name.toUpperCase());  this.name  =  name.toUpperCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    super(name.toUpperCase());  this.name  =  name.toUpperCase();	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	40	None	add
342	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  this.name  =  name.toUpperCase();  setName(name.toUpperCase());  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  this.name  =  name.toUpperCase();  setName(name.toUpperCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    this.name  =  name.toUpperCase();  setName(name.toUpperCase());	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
343	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(name!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  if(name!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  if(name!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	69	None	replace
344	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	69	None	replace
345	[BUG]  [BUGGY]  this.name  =  name.toLowerCase();  if(name.toLowerCase()!=  null)  {  this.name  =  name.toLowerCase();  }  else  {  this.name  =  name.toLowerCase()  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toLowerCase();  if(name.toLowerCase()!=  null)  {  this.name  =  name.toLowerCase();  }  else  {  this.name  =  name.toLowerCase()  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.toLowerCase();  if(name.toLowerCase()!=  null)  {  this.name  =  name.toLowerCase();  }  else  {  this.name  =  name.toLowerCase()	  this.name    =    name.toLowerCase();    if(name.toLowerCase()!=    null)    {    this.name    =    name.toLowerCase();    }    else    {    this.name    =    name.toLowerCase();    }    	non-compiled	[CE]  ';'  expected	46	None	replace
346	[BUG]  [BUGGY]  this.name  =  name  ==  null?  Name.NONE  :  Name.valueOf(name);  [CE]  cannot  find  symbol  Name  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  Name.NONE  :  Name.valueOf(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  Name.NONE  :  Name.valueOf(name);	  this.name    =    name    ==    null?    name    :    Name.valueOf(name);    	non-compiled	[CE]  cannot  find  symbol  Name	54	None	replace
347	[BUG]  [BUGGY]  this.expandable  =  expansionable.equals(name)&&  isLastStep;  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expansionable.equals(name)&&  isLastStep;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expansionable.equals(name)&&  isLastStep;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expansionable	113	None	replace
348	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getSimpleName(name);  [CE]  method  getSimpleName  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.class.getSimpleName(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.class.getSimpleName(name);	  this.expandable    =    ExpandableStatefulODE.class.getSimpleName();    	non-compiled	[CE]  method  getSimpleName  in  class  Class<T>  cannot  be  applied  to  given  types;	7	None	replace
349	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  expansionable);  [CE]  cannot  find  symbol  DEFAULT  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.DEFAULT,  expansionable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.DEFAULT,  expansionable);	  this(name,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	100	None	replace
350	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);	  super(name,    ExpandableStatefulODE.class);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	108	None	replace
351	[BUG]  [BUGGY]  super();  this.expr  =  ExpandableStatefulODE.createIntegrator(name);  [CE]  cannot  find  symbol  expr  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super();  this.expr  =  ExpandableStatefulODE.createIntegrator(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super();  this.expr  =  ExpandableStatefulODE.createIntegrator(name);	          super();    this.expr    =    ExpandableStatefulODE.createIntegrator();    	non-compiled	[CE]  cannot  find  symbol  expr	105	None	replace
352	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [CE]  variable  name  might  not  have  been  initialized  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	65	None	replace
353	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE.class);  this.expandable  =  expandable;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE.class);  this.expandable  =  expandable;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE.class);  this.expandable  =  expandable;	  super(name);    this.expandable    =    expandable;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	137	None	replace
354	[BUG]  [BUGGY]  if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }	          super();    this.events    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	128	None	replace
355	[BUG]  [BUGGY]  if(name  ==  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name  ==  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }	          super();    this.events    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	128	None	replace
356	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(ex  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(ex  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(ex	  	non-compiled	[CE]  ')'  expected	68	None	add
357	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	68	None	add
358	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  nu  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  nu  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  nu	  	non-compiled	[CE]  ')'  expected	68	None	add
359	[BUG]  [BUGGY]  this.name  =  name.toLowerCase();  super(name.toUpperCase());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toLowerCase();  super(name.toUpperCase());  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.toLowerCase();  super(name.toUpperCase());	  this.name    =    name.toLowerCase();    super(name.toLowerCase());    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	119	None	replace
360	[BUG]  [BUGGY]  this(name,  ExpandableStateful.EMPTY  |  ExpandableStateful.ODE);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStateful.EMPTY  |  ExpandableStateful.ODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStateful.EMPTY  |  ExpandableStateful.ODE);	  this(name,    ExpandableStateful.EMPTY);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	52	None	replace
361	[BUG]  [BUGGY]  this.name  =  name  +  2;  This.name  =  name  +  2;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  This.name  =  name  +  2;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    This.name  =  name  +  2;	  	non-compiled	[CE]  cannot  find  symbol  This	11	None	add
362	[BUG]  [BUGGY]  this.name  =  name  +  2;  super();  this.name  =  name  +  2;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  super();  this.name  =  name  +  2;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    super();  this.name  =  name  +  2;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	11	None	add
363	[BUG]  [BUGGY]  this.name  =  name  +  2;  this.name  =  name  +  3;  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  this.name  =  name  +  3;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    this.name  =  name  +  3;	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
364	[BUG]  [BUGGY]  this(name);  [CE]  recursive  constructor  invocation  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name);	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  recursive  constructor  invocation	144	None	replace
365	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.toLowerCase(),  false);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.toLowerCase(),  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.toLowerCase(),  false);	  this(name.toLowerCase(),    false);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
366	[BUG]  [BUGGY]  this(name.toLowerCase(),  isLastStep,  false);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  isLastStep,  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  isLastStep,  false);	  this(name.toLowerCase(),    false);    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	76	None	replace
367	[BUG]  [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( ". "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( ". "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(name.trim().equals( ". "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	59	None	replace
368	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.expandable  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.expandable  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.expandable  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	83	None	replace
369	[BUG]  [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  expandable);  [CE]  no  suitable  constructor  found  for  String(String,String,ExpandableStatefulODE)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  expandable);	  this.name    =    new    String(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String,String,ExpandableStatefulODE)	72	None	replace
370	[BUG]  [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  expansionable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toLowerCase(),  name.toLowerCase(),  expansionable);	  this.name    =    new    String(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol  expansionable	72	None	replace
371	[BUG]  [BUGGY]  This.name  =  name!=  null?  name  :  name;  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.name  =  name!=  null?  name  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.name  =  name!=  null?  name  :  name;	  this.name    =    name!=    null?    name    :    name;    This.name    =    name!=    null?    name    :    name;    	non-compiled	[CE]  cannot  find  symbol  This	31	None	replace
372	[BUG]  [BUGGY]  this.name  =  name  ==  null?  Name  :  name;  [CE]  cannot  find  symbol  Name  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  Name  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  Name  :  name;	  this.name    =    name    ==    null?    name    :    name;    this.name    =    name    ==    null?    name    :    name;    	non-compiled	[CE]  cannot  find  symbol  Name	18	None	replace
373	[BUG]  [BUGGY]  this.events  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  Collections.EMPTYList();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  Collections.EMPTYList();	          super();    this.events    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	129	None	replace
374	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  incompatible  types	67	None	replace
375	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [CE]  variable  name  might  not  have  been  initialized  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(2);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	67	None	replace
376	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    this.expandable  =  ExpandableStatefulODE;	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	24	None	add
377	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  this.expanable  =  expandable;  [CE]  cannot  find  symbol  expanable  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  this.expanable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    this.expanable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  expanable	24	None	add
378	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  super();  this.expandable  =  ExpandableStatefulODE;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  super();  this.expandable  =  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    super();  this.expandable  =  ExpandableStatefulODE;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	add
379	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  expandable);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toLowerCase(),  expandable);	  this(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	106	None	replace
380	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toLowerCase(),  expansionable);	  this(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol  expansionable	106	None	replace
381	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandable,  ExpandableStatefulODE.class);  [CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandable,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  expandable,  ExpandableStatefulODE.class);	  this(name,    ExpandableStatefulODE.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  reference  expandable  before  supertype  constructor  has  been  called	138	None	replace
382	[BUG]  [BUGGY]  this(name,  expandable.class,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  expandable.class,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  expandable.class,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class);	  this(name,    ExpandableStatefulODE.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
383	[BUG]  [BUGGY]  this(name.toUpperCase(),  ExpandableStatefulODE);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toUpperCase(),  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toUpperCase(),  ExpandableStatefulODE);	  this(name.toUpperCase());    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	74	None	replace
384	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.toUpperCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  name  ==  null?  null  :  name.toUpperCase();	  this.name    =    name.toUpperCase();    	compilable	  [FE]  AssertionError  	41	1	replace
385	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  name.toUpperCase();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  name.toUpperCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  null  :  name.toUpperCase();	  this.name    =    name.toUpperCase();    	compilable	  [FE]  AssertionError  	41	1	replace
386	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.toUpperCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  name!=  null?  null  :  name.toUpperCase();	  this.name    =    name.toUpperCase();    	compilable	  [FE]  AssertionError  	41	1	replace
387	[BUG]  [BUGGY]  this.name  =  name!=  null?  null  :  name.toUpperCase();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  null  :  name.toUpperCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name!=  null?  null  :  name.toUpperCase();	  this.name    =    name.toUpperCase();    	compilable	  [FE]  AssertionError  	41	1	replace
388	[BUG]  [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  this.expandable  =  expandable;  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulODE;  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        this.expandable    =    expandable;    this.expandable  =  ExpandableStatefulODE;  this.expandable  =  expandable;	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	60	None	add
389	[BUG]  [BUGGY]  if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name!=  null)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }	          super();    this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	23	None	replace
390	[BUG]  [BUGGY]  if(!isLastStep)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(!isLastStep)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(!isLastStep)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }	          super();    this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	23	None	replace
391	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  variable  name  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	63	None	replace
392	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulEOF;  [CE]  cannot  find  symbol  ExpandableStatefulEOF  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulEOF;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulEOF;	  this.expandable    =    ExpandableStatefulODE;    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulEOF	90	None	replace
393	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expanable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
394	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
395	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
396	[BUG]  [BUGGY]  This.events  =  new  ArrayList  <  Incrementor>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.events  =  new  ArrayList  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.events  =  new  ArrayList  <  Incrementor>();	  this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  This	77	None	replace
397	[BUG]  [BUGGY]  This.events  =  new  ArrayList  <  Integer>();  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.events  =  new  ArrayList  <  Integer>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.events  =  new  ArrayList  <  Integer>();	  this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  This	79	None	replace
398	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandedable);  [CE]  cannot  find  symbol  expandedable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  expandedable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  expandedable);	  this(name,    ExpandableStatefulODE.class,    expansionable);    	non-compiled	[CE]  cannot  find  symbol  expandedable	17	None	replace
399	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name  +  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  new  String(name  +  1);	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
400	[BUG]  [BUGGY]  this.name  =  new  String(name  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name  +  1);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name  +  1);	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
401	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  new  String();	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
402	[BUG]  [BUGGY]  this.name  =  new  String();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String();	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
403	[BUG]  [BUGGY]  super();  this.expandable  =  ExpandableStatefulODE.createIntegrator(name);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super();  this.expandable  =  ExpandableStatefulODE.createIntegrator(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super();  this.expandable  =  ExpandableStatefulODE.createIntegrator(name);	          super();    this.expandable    =    ExpandableStatefulODE.createIntegrator();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
404	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	64	1	add
405	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	64	1	add
406	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
407	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
408	[BUG]  [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  This.name  =  name  ==  null?   "null "  :  name;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  This.name  =  name  ==  null?   "null "  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?   "null   "    :    name;    This.name  =  name  ==  null?   "null "  :  name;	  	non-compiled	[CE]  cannot  find  symbol  This	133	None	add
409	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toUpperCase(),  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toUpperCase(),  expansionable);	  this(name.toLowerCase(),    name.toUpperCase());    	non-compiled	[CE]  cannot  find  symbol  expansionable	130	None	replace
410	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	81	None	replace
411	[BUG]  [BUGGY]  this(expansionable,  name.class,  ExpandableStatefulODE.class);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(expansionable,  name.class,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(expansionable,  name.class,  ExpandableStatefulODE.class);	  this(name,    expandable.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol  expansionable	96	None	replace
412	[BUG]  [BUGGY]  this.name  =  name.trim();  super(name.trim(),  isLastStep);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(name.trim(),  isLastStep);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(name.trim(),  isLastStep);	  this.name    =    name.trim();    super(name.trim());    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	125	None	replace
413	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
414	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
415	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable  ==  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
416	[BUG]  [BUGGY]  this.name  =  name.trim();  if(this.name!=  null)  {  this.name  =  name.trim();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(this.name!=  null)  {  this.name  =  name.trim();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(this.name!=  null)  {  this.name  =  name.trim();  }	  this.name    =    name.trim();    if(name!=    null)    {    this.name    =    name.trim();    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	140	None	replace
417	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.name!=  null)  {  this.name  =  name  +  1;  }  else  {  this.name  =  name  +  1;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.name!=  null)  {  this.name  =  name  +  1;  }  else  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.name!=  null)  {  this.name  =  name  +  1;  }  else  {  this.name  =  name  +  1;  }	  this.name    =    name    +    1;    if(name!=    null)    {    this.name    =    name    +    1;    }    else    {    this.name    =    name    +    1;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	148	None	replace
418	[BUG]  [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  This.name  =  name!=  null?  name.trim()  :   "null ";  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  This.name  =  name!=  null?  name.trim()  :   "null ";  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    name.trim()    :   "null   ";    This.name  =  name!=  null?  name.trim()  :   "null ";	  	non-compiled	[CE]  cannot  find  symbol  This	135	None	add
419	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expanded);  [CE]  cannot  find  symbol  expanded  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expanded);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expanded);	  this.expandable    =    ExpandableStatefulODE.create(name,    expansion);    	non-compiled	[CE]  cannot  find  symbol  expanded	109	None	replace
420	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	66	1	add
421	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;	  	compilable	  [FE]  NullPointerException  	66	1	add
422	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
423	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(2);  }	  	compilable	  [FE]  NullPointerException  	66	1	add
424	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  else  {  this.name  =  name  +  1;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  else  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  else  {  this.name  =  name  +  1;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    this.name    =    name    +    1;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	147	None	replace
425	[BUG]  [BUGGY]  this.events  =  new  HashSet  <  Integrator>();  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.events  =  new  HashSet  <  Integrator>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.events  =  new  HashSet  <  Integrator>();	  this.events    =    new    ArrayList    <    Integrator>();    	non-compiled	[CE]  cannot  find  symbol  events	78	None	replace
426	[BUG]  [BUGGY]  this.name  =  name.trim();  if(this.name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(this.name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(this.name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  false;  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	58	None	replace
427	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE,  expandable);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE,  expandable);	  super(name,    ExpandableStatefulODE);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	3	None	replace
428	[BUG]  [BUGGY]  super(name,  ExpandableStatefulODE,  isLastStep);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  ExpandableStatefulODE,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  ExpandableStatefulODE,  isLastStep);	  super(name,    ExpandableStatefulODE);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	3	None	replace
429	[BUG]  [BUGGY]  this.expansionable  =  expansionable.equals(name);  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expansionable  =  expansionable.equals(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expansionable  =  expansionable.equals(name);	  this.expandable    =    expansionable.equals(name);    	non-compiled	[CE]  cannot  find  symbol  expansionable	114	None	replace
430	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.name  ==  null)  {  this.name  =  name  +  1;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	84	None	replace
431	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  [CE]  cannot  find  symbol  value  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  value	84	None	replace
432	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  statesInitialized);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE,  isLastStep,  statesInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE,  isLastStep,  statesInitialized);	  this(name,    ExpandableStatefulODE,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	142	None	replace
433	[BUG]  [BUGGY]  if(this.expr  ==  null)  {  super();  this.expr  =  new  Incrementor();  }  [CE]  cannot  find  symbol  expr  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.expr  ==  null)  {  super();  this.expr  =  new  Incrementor();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.expr  ==  null)  {  super();  this.expr  =  new  Incrementor();  }	          super();    this.expr    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  expr	28	None	replace
434	[BUG]  [BUGGY]  if(this.expr  ==  null)  {  super();  this.expr  =  new  Incrementor();  }  else  {  this.expr  =  new  Incrementor();  }  [CE]  cannot  find  symbol  expr  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.expr  ==  null)  {  super();  this.expr  =  new  Incrementor();  }  else  {  this.expr  =  new  Incrementor();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.expr  ==  null)  {  super();  this.expr  =  new  Incrementor();  }  else  {  this.expr  =  new  Incrementor();  }	          super();    this.expr    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  expr	28	None	replace
435	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
436	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
437	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	64	1	add
438	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
439	[BUG]  [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  else  {  this.events  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  events  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  else  {  this.events  =  Collections.emptyList();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  else  {  this.events  =  Collections.emptyList();  }	          super();    this.events    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	129	None	replace
440	[BUG]  [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }	          super();    this.events    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	129	None	replace
441	[BUG]  [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  else  {  this.events  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  else  {  this.events  =  new  ArrayList  <  EventState>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.events!=  null)  {  super();  this.events  =  Collections.emptyList();  }  else  {  this.events  =  new  ArrayList  <  EventState>();  }	          super();    this.events    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  events	129	None	replace
442	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    this.expandable  =  ExpandableStatefulODE;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	145	None	add
443	[BUG]  [BUGGY]  this(name,  ExpandableStateful.DEFAULT,  ExpandableStateful.DEFAULT);  [CE]  cannot  find  symbol  ExpandableStateful  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStateful.DEFAULT,  ExpandableStateful.DEFAULT);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStateful.DEFAULT,  ExpandableStateful.DEFAULT);	  this(name,    ExpandableStateful.DEFAULT);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStateful	53	None	replace
444	[BUG]  [BUGGY]  this.name  =  name.trim();  if(this.name!=  null)  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(this.name!=  null)  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(this.name!=  null)  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(-1);  }	  this.name    =    name.trim();    if(name!=    null)    {    this.name    =    name.trim();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	139	None	replace
445	[BUG]  [BUGGY]  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulEOF;  [CE]  cannot  find  symbol  ExpandableStatefulEOF  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulEOF;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  this.expandable  =  ExpandableStatefulEOF;	          this.expandable    =    expandable;    this.expandable    =    ExpandableStatefulODE;    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulEOF	111	None	replace
446	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.class,  name.getSimpleName();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.class,  name.getSimpleName();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.class,  name.getSimpleName();	  this.expandable    =    ExpandableStatefulODE.class.getSimpleName();    	non-compiled	[CE]  ';'  expected	7	None	replace
447	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(name,  expansion);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  new  ExpandableStatefulODE(name,  expansion);	  this.expandable    =    new    ExpandableStatefulODE(name);    	non-compiled	[CE]  cannot  find  symbol  expansion	91	None	replace
448	[BUG]  [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "* "))  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "* "))  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(name.trim().equals( "* "))  {  this.name  =  name.trim();  }  else  {  setMaxEvaluations(-1);  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	57	None	replace
449	[BUG]  [BUGGY]  super(name,  null,  ExpandableStatefulODE.class);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name,  null,  ExpandableStatefulODE.class);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name,  null,  ExpandableStatefulODE.class);	  super(name,    null);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	5	None	replace
450	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.INIT;  [CE]  cannot  find  symbol  INIT  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.INIT;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.INIT;	  this.expandable    =    ExpandableStatefulODE.instance;    	non-compiled	[CE]  cannot  find  symbol  INIT	127	None	replace
451	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [CE]  cannot  find  symbol  value  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
452	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  true;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	83	None	replace
453	[BUG]  [BUGGY]  This.name  =  name;  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.name  =  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.name  =  name;	  this.name    =       "       ";    This.name    =       "       ";    	non-compiled	[CE]  cannot  find  symbol  This	93	None	replace
454	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.name!=  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.name!=  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.name!=  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }	  this.name    =    name    +    1;    if(name!=    null)    {    this.name    =    name    +    1;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	149	None	replace
455	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.value!=  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  value  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.value!=  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.value!=  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }	  this.name    =    name    +    1;    if(name!=    null)    {    this.name    =    name    +    1;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  cannot  find  symbol  value	149	None	replace
456	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  incompatible  types	144	None	replace
457	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  ExpandableStatefulODE;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  incompatible  types	144	None	replace
458	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =(name  ==  null)?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =(name  ==  null)?  null  :  name.toLowerCase();	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    	compilable	  [FE]  AssertionError  	37	1	replace
459	[BUG]  [BUGGY]  this.name  =(name  ==  null)?  null  :  name.toLowerCase();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =(name  ==  null)?  null  :  name.toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =(name  ==  null)?  null  :  name.toLowerCase();	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    	compilable	  [FE]  AssertionError  	37	1	replace
460	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =(name  ==  null)?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =(name  ==  null)?  null  :  name.trim();	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    	compilable	  [FE]  AssertionError  	37	1	replace
461	[BUG]  [BUGGY]  this.name  =(name  ==  null)?  null  :  name.trim();  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =(name  ==  null)?  null  :  name.trim();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =(name  ==  null)?  null  :  name.trim();	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    	compilable	  [FE]  AssertionError  	37	1	replace
462	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =(name  ==  null)?   "null "  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =(name  ==  null)?   "null "  :  name;	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    	compilable	  [FE]  AssertionError  	37	1	replace
463	[BUG]  [BUGGY]  this.name  =(name  ==  null)?   "null "  :  name;  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =(name  ==  null)?   "null "  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =(name  ==  null)?   "null "  :  name;	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    	compilable	  [FE]  AssertionError  	37	1	replace
464	[BUG]  [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [CE]  cannot  find  symbol  events  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }	          super();    this.events    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol  events	128	None	replace
465	[BUG]  [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  AssertionError>();  }	          super();    this.events    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	128	None	replace
466	[BUG]  [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  ExpandableStatefulODE);  [CE]  cannot  find  symbol  ExpandableStatefulODE  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  name.toLowerCase(),  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  name.toLowerCase(),  ExpandableStatefulODE);	  this(name.toLowerCase(),    name.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulODE	106	None	replace
467	[BUG]  [BUGGY]  this.expandable  =  name.equals(expanable)&&  isLastStep;  [CE]  cannot  find  symbol  expanable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name.equals(expanable)&&  isLastStep;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name.equals(expanable)&&  isLastStep;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expanable	113	None	replace
468	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  new  String(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  name  ==  null?  null  :  new  String(name);	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
469	[BUG]  [BUGGY]  this.name  =  name  ==  null?  null  :  new  String(name);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  null  :  new  String(name);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  null  :  new  String(name);	  this.name    =    new    String(name);    	compilable	  [FE]  AssertionError  	98	1	replace
470	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  value  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  setMaxEvaluations(-1);  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  cannot  find  symbol  value	81	None	replace
471	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.getInstance(name);  [CE]  cannot  find  symbol  expr  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expr  =  ExpandableStatefulODE.getInstance(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expr  =  ExpandableStatefulODE.getInstance(name);	          super();    this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  cannot  find  symbol  expr	104	None	replace
472	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.class;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.class;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.class;	  this.expandable    =    ExpandableStatefulODE.class.getInstance();    	non-compiled	[CE]  incompatible  types	102	None	replace
473	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
474	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    isLastStep    =    false;    }    This.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
475	[BUG]  [BUGGY]  this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulODE.class,  ExpandableStatefulODE.class,  expansionable);	  this(name,    ExpandableStatefulODE.class,    ExpandableStatefulODE.class);    	non-compiled	[CE]  cannot  find  symbol  expansionable	138	None	replace
476	[BUG]  [BUGGY]  this(name.toLowerCase(),  false,  name.toLowerCase());  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,String)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  false,  name.toLowerCase());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  false,  name.toLowerCase());	  this(name.toLowerCase(),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,String)	76	None	replace
477	[BUG]  [BUGGY]  this(name.toLowerCase(),  false,  null);  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,<null>)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  false,  null);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  false,  null);	  this(name.toLowerCase(),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(String,boolean,<null>)	76	None	replace
478	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase()).toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	add	this.name  =  new  String(name.toLowerCase()).toLowerCase();	  this.name    =       "       ";    this.name    =       "       ";    	compilable	  [FE]  AssertionError  	33	1	replace
479	[BUG]  [BUGGY]  this.name  =  new  String(name.toLowerCase()).toLowerCase();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  new  String(name.toLowerCase()).toLowerCase();  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  new  String(name.toLowerCase()).toLowerCase();	  this.name    =       "       ";    this.name    =       "       ";    	compilable	  [FE]  AssertionError  	33	1	replace
480	[BUG]  [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(this);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  new  ExpandableStatefulODE(this);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  new  ExpandableStatefulODE(this);	  this.expandable    =    new    ExpandableStatefulODE();    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	89	None	replace
481	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }  [CE]  cannot  find  symbol  value  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.value  ==  null)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	82	None	replace
482	[BUG]  [BUGGY]  this.name  =  name  +  1;  if(this.isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  1;  if(this.isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  +  1;  if(this.isLastStep)  {  this.name  =  name  +  1;  }  else  {  isLastStep  =  false;  }	  this.name    =    name    +    1;    if(name    ==    null)    {    this.name    =    name    +    1;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	82	None	replace
483	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  not  have  been  initialized  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	65	None	replace
484	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  incompatible  types	65	None	replace
485	[BUG]  [BUGGY]  this.name  =  name.trim();  if(this.expandable!=  null)  {  this.name  =  name.trim();  }  else  {  this.expandable  =  false;  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(this.expandable!=  null)  {  this.name  =  name.trim();  }  else  {  this.expandable  =  false;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(this.expandable!=  null)  {  this.name  =  name.trim();  }  else  {  this.expandable  =  false;  }	  this.name    =    name.trim();    if(name!=    null)    {    this.name    =    name.trim();    }    else    {    this.expandable    =    false;    }    	non-compiled	[CE]  incompatible  types	141	None	replace
486	[BUG]  [BUGGY]  this.name  =  name!=  null?  Locale.ENGLISH  :  name.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  Locale.ENGLISH  :  name.toLowerCase(Locale.ENGLISH);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name!=  null?  Locale.ENGLISH  :  name.toLowerCase(Locale.ENGLISH);	  this.name    =    name.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
487	[BUG]  [BUGGY]  this.name  =  name  ==  null? "null "  :  name.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null? "null "  :  name.toLowerCase(Locale.ENGLISH);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null? "null "  :  name.toLowerCase(Locale.ENGLISH);	  this.name    =    name.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
488	[BUG]  [BUGGY]  this.name  =  name  ==  null?  name  :  Name.valueOf(name)+  1;  [CE]  cannot  find  symbol  Name  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?  name  :  Name.valueOf(name)+  1;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name  ==  null?  name  :  Name.valueOf(name)+  1;	  this.name    =    name    ==    null?    name    :    Name.valueOf(name);    	non-compiled	[CE]  cannot  find  symbol  Name	54	None	replace
489	[BUG]  [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  name;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    	non-compiled	[CE]  incompatible  types	146	None	replace
490	[BUG]  [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [CE]  variable  name  might  not  have  been  initialized  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expandable;  if(this.expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  setMaxEvaluations(-1);  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	146	None	replace
491	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  if(name!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  if(name!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    if(name!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.name  =  name.toUpperCase();  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	40	None	add
492	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  if(name!=  null)  {  this.name  =  name.toUpperCase();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  if(name!=  null)  {  this.name  =  name.toUpperCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    if(name!=  null)  {  this.name  =  name.toUpperCase();  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	40	None	add
493	[BUG]  [BUGGY]  this.name  =  name.toUpperCase();  if(name!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.size  =  name.toUpperCase();  }  [CE]  cannot  find  symbol  size  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.toUpperCase();  if(name!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.size  =  name.toUpperCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name.toUpperCase();    if(name!=  null)  {  this.name  =  name.toUpperCase();  }  else  {  this.size  =  name.toUpperCase();  }	  	non-compiled	[CE]  cannot  find  symbol  size	40	None	add
494	[BUG]  [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  name;  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  name;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  name;  }  else  {  setMaxEvaluations(-1);  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	36	None	replace
495	[BUG]  [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =   " ";  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =   " ";  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =   " ";  }  else  {  setMaxEvaluations(-1);  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	36	None	replace
496	[BUG]  [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  new  Integrator();  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  new  Integrator();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name;  if(this.expandable  ==  null)  {  this.name  =  new  Integrator();  }	  this.name    =       "       ";    if(name    ==    null)    {    this.name    =       "       ";    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
497	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
498	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this	  	non-compiled	[CE]  not  a  statement	143	None	add
499	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.ex  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.expandable  =  expandable;  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.ex  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    this.expandable    =    expandable;    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  this.ex	  	non-compiled	[CE]  not  a  statement	143	None	add
500	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
501	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(1);  }  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    else    {    setMaxEvaluations(1);    }    this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  if(expandable!=  null)  {  this.expandable  =  expandable;  setMaxEvaluations(1);  }	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
502	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	add
503	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  else  {  ExpandableStatefulODE  expansionable  =  new  ExpandableStatefulODE();  setMaxEvaluations(-1);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  else  {  ExpandableStatefulODE  expansionable  =  new  ExpandableStatefulODE();  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  else  {  ExpandableStatefulODE  expansionable  =  new  ExpandableStatefulODE();  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	add
504	[BUG]  [BUGGY]          super();    this.expandable  =  expandable;  if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          super();    this.expandable  =  expandable;  if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                super();        this.expandable    =    expandable;    if(expandable!=  null)  {  super();  this.expandable  =  expandable;  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	24	None	add
505	[BUG]  [BUGGY]  super(name.toLowerCase(),  isLastStep);  [CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name.toLowerCase(),  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name.toLowerCase(),  isLastStep);	  super(name.toLowerCase());    	non-compiled	[CE]  cannot  reference  isLastStep  before  supertype  constructor  has  been  called	107	None	replace
506	[BUG]  [BUGGY]  this.name  =  name.trim();  super(expable.trim(),  expandable);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(expable.trim(),  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(expable.trim(),  expandable);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
507	[BUG]  [BUGGY]  this.name  =  name.trim();  super(expansionable.trim(),  expandable);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(expansionable.trim(),  expandable);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(expansionable.trim(),  expandable);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
508	[BUG]  [BUGGY]  this.name  =  name.trim();  super(name.trim(),  expandable,  isLastStep);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  super(name.trim(),  expandable,  isLastStep);  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  super(name.trim(),  expandable,  isLastStep);	  this.name    =    name.trim();    super(name.trim(),    expandable);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	126	None	replace
509	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  2;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  2;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  2;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
510	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  1;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  1;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  this.name  =  name  +  1;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
511	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  name  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name!=  null)  {  this.name  =  name  +  2;  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
512	[BUG]  [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  +  2;  if(name!=  null)  {  this.name  =  name  +  2;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    +    2;    if(name!=  null)  {  this.name  =  name  +  2;  }	  	non-compiled	[CE]  variable  name  might  already  have  been  assigned	11	None	add
513	[BUG]  [BUGGY]  super(name);  this.name  =  name;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  super(name);  this.name  =  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	super(name);  this.name  =  name;	  this.name    =    name    +    1;    super(name);    this.name    =    name    +    1;    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	123	None	replace
514	[BUG]  [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "* "))  {  this.name  =  name.trim();  }  [CE]  variable  name  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name.trim();  if(name.trim().equals( "* "))  {  this.name  =  name.trim();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name  =  name.trim();  if(name.trim().equals( "* "))  {  this.name  =  name.trim();  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    	non-compiled	[CE]  variable  name  might  already  have  been  assigned	56	None	replace
515	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.createIntegrator(name);  [CE]  cannot  find  symbol  expr  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expr  =  ExpandableStatefulODE.createIntegrator(name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expr  =  ExpandableStatefulODE.createIntegrator(name);	          super();    this.expr    =    ExpandableStatefulODE.createIntegrator();    	non-compiled	[CE]  cannot  find  symbol  expr	105	None	replace
516	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.getInstance(name,  expansion);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.getInstance(name,  expansion);	  this.expandable    =    ExpandableStatefulODE.getInstance(name);    	non-compiled	[CE]  cannot  find  symbol  expansion	6	None	replace
517	[BUG]  [BUGGY]  this(name.toLowerCase(),  true,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name.toLowerCase(),  true,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name.toLowerCase(),  true,  expansionable);	  this(name.toLowerCase(),    true);    	non-compiled	[CE]  cannot  find  symbol  expansionable	73	None	replace
518	[BUG]  [BUGGY]  this(name,  ExpandableStatefulOccurred);  [CE]  cannot  find  symbol  ExpandableStatefulOccurred  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this(name,  ExpandableStatefulOccurred);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this(name,  ExpandableStatefulOccurred);	  this(name,    ExpandableStateful);    	non-compiled	[CE]  cannot  find  symbol  ExpandableStatefulOccurred	51	None	replace
519	[BUG]  [BUGGY]  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	          this.expandable    =    expandable;    if(expandable!=    null)    {    this.expandable    =    expandable;    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	63	None	replace
520	[BUG]  [BUGGY]  if(name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }  [CE]  variable  name  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name.trim().equals( "   "))  {  this.name  =  name.trim();  }  else  {  isLastStep  =  true;  }	  this.name    =    name.trim();    if(name.trim().equals(   "   "))    {    this.name    =    name.trim();    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  variable  name  might  not  have  been  initialized	59	None	replace
521	[BUG]  [BUGGY]  This.events  =  new  ArrayList  <  Integrator>();  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.events  =  new  ArrayList  <  Integrator>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.events  =  new  ArrayList  <  Integrator>();	  this.events    =    new    ArrayList    <    Integrator>();    	non-compiled	[CE]  cannot  find  symbol  This	78	None	replace
522	[BUG]  [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  Integer>();  }	          super();    this.events    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol  events	26	None	replace
523	[BUG]  [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]          this.expandable    =    expandable;    if(expandable!=  null)  {  this.expandable  =  expandable;  }  this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	                this.expandable        =        expandable;        if(expandable!=    null)    {    this.expandable    =    expandable;    }    this.expandable  =  expansionable;  if(expandable!=  null)  {  this.expandable  =  expandable;  }	  	non-compiled	[CE]  cannot  find  symbol  expansionable	62	None	add
524	[BUG]  [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  this.name  =  name  ==  null?   "null ",  :  name;  [CE]  :  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name  ==  null?   "null   "  :  name;  this.name  =  name  ==  null?   "null ",  :  name;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name    ==    null?   "null   "    :    name;    this.name  =  name  ==  null?   "null ",  :  name;	  	non-compiled	[CE]  :  expected	133	None	add
525	[BUG]  [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [CE]  cannot  find  symbol  events  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(this.events!=  null)  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }	          super();    this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  events	23	None	replace
526	[BUG]  [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name.equals( " "))  {  super();  this.events  =  new  ArrayList  <  Incrementor>();  }	          super();    this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	23	None	replace
527	[BUG]  [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  this.name  =  name!=  null?  name.trim()  :   "null ",;  [CE]  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.name  =  name!=  null?  name.trim()  :   "null   ";  this.name  =  name!=  null?  name.trim()  :   "null ",;  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.name    =    name!=    null?    name.trim()    :   "null   ";    this.name  =  name!=  null?  name.trim()  :   "null ",;	  	non-compiled	[CE]  	135	None	add
528	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  null);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  null);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable,  null);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name,    expandable);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
529	[BUG]  [BUGGY]  if(name!=  null)  {  super();  }  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  if(name!=  null)  {  super();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	if(name!=  null)  {  super();  }	          super();    super();    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	replace
530	[BUG]  [BUGGY]  This.name  =  name.toLowerCase();  if(name!=  null)  {  this.name  =  name.toLowerCase();  }  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {      [BUGGY]  This.name  =  name.toLowerCase();  if(name!=  null)  {  this.name  =  name.toLowerCase();  }  [BUGGY]      stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	86	86	1	replace	This.name  =  name.toLowerCase();  if(name!=  null)  {  this.name  =  name.toLowerCase();  }	  this.name    =    name.toLowerCase();    if(name!=    null)    {    this.name    =    name.toLowerCase();    }    	non-compiled	[CE]  cannot  find  symbol  This	132	None	replace
