bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	ArrayList  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    TreeSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  incompatible  types	100	None	replace
2	[BUG]  [BUGGY]  List  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  List  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	List  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    TreeSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  incompatible  types	100	None	replace
3	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepSize,  stepStart);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(stepSize,  stepStart);	  Incrementor    evaluations    =    new    Incrementor(stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	82	None	replace
4	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepStart,  stepSize);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(stepStart,  stepSize);	  Incrementor    evaluations    =    new    Incrementor(stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	82	None	replace
5	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(1);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	14	None	add
6	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(1);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	14	None	add
7	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(1);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	14	None	add
8	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(1);    evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	14	None	add
9	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  cannot  find  symbol  Evaluations  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(1);    Evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  cannot  find  symbol  Evaluations	14	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	36	1	add
11	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	36	1	add
12	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	36	None	add
13	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  '('  or  '['  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  '('  or  '['  expected	36	None	add
14	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>(;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>(;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>(;	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
15	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluates  =  new  Incrementor(0);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	17	1	replace
16	[BUG]  [BUGGY]  Incrementor  evaluates  =  new  Incrementor(0);  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluates  =  new  Incrementor(0);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	17	1	replace
17	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluates  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluates  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	17	1	replace
18	[BUG]  [BUGGY]  Incrementor  evaluates  =  new  Incrementor(1);  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluates  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluates  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	17	1	replace
19	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluates  =  new  Incrementor();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluates  =  new  Incrementor();	  evaluations    =    new    Incrementor(0);    Incrementor    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	17	1	replace
20	[BUG]  [BUGGY]  Incrementor  evaluates  =  new  Incrementor();  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluates  =  new  Incrementor();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluates  =  new  Incrementor();	  evaluations    =    new    Incrementor(0);    Incrementor    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	17	1	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);	  	compilable	  [FE]  AssertionError  	11	1	add
22	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);	  	compilable	  [FE]  AssertionError  	11	1	add
23	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluates  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  [CE]  cannot  find  symbol  evaluates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluates  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    evaluates  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  cannot  find  symbol  evaluates	11	None	add
24	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  Evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  [CE]  cannot  find  symbol  Evaluations  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  Evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    Evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  cannot  find  symbol  Evaluations	11	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);	  	compilable	  [FE]  AssertionError  	11	1	add
26	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);	  	compilable	  [FE]  AssertionError  	11	1	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);	  	compilable	  [FE]  AssertionError  	11	1	add
28	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);	  	compilable	  [FE]  AssertionError  	11	1	add
29	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	9	None	add
30	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	9	None	add
31	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	9	None	add
32	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [CE]  cannot  find  symbol  Evaluations  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(0);    Evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  cannot  find  symbol  Evaluations	9	None	add
33	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	9	None	add
34	[BUG]  [BUGGY]  Assessments  evaluations  =  new  Incrementable(),  isLastStep;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  Incrementable(),  isLastStep;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  Incrementable(),  isLastStep;	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
35	[BUG]  [BUGGY]  Assessments  evaluations  =  new  Incremental();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  Incremental();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  Incremental();	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
36	[BUG]  [BUGGY]  Assessments  evaluations  =  new  Incrementable().eventsStates;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  Incrementable().eventsStates;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  Incrementable().eventsStates;	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
37	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);	  evaluations    =    new    Incrementor(stepStart,    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean)	92	None	replace
38	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);	  evaluations    =    new    Incrementor(stepStart,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	51	1	add
40	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	51	1	add
41	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  ';'  expected	51	None	add
42	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	51	None	add
43	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  INCrementor();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  INCrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  INCrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
44	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integer  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integer  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  incompatible  types	81	None	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	compilable	  [FE]  NullPointerException  	81	1	replace
46	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	compilable	  [FE]  NullPointerException  	81	1	replace
47	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	76	1	replace
48	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	76	1	replace
49	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMinEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
50	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMinEvaluations(1);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMinEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMinEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMinEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);	  	compilable	  [FE]  AssertionError  	102	1	add
52	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);	  	compilable	  [FE]  AssertionError  	102	1	add
53	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluates  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [CE]  cannot  find  symbol  evaluates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluates  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    evaluates  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  cannot  find  symbol  evaluates	102	None	add
54	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  Evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [CE]  cannot  find  symbol  Evaluations  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  Evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    Evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  cannot  find  symbol  Evaluations	102	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);	  	compilable	  [FE]  AssertionError  	102	1	add
56	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(1);	  	compilable	  [FE]  AssertionError  	102	1	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(2);	  	compilable	  [FE]  AssertionError  	102	1	add
58	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(2);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    evaluations  =  new  Incrementor(1);  evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        evaluations    =    new    Incrementor(1);    evaluations  =  new  Incrementor(0);  evaluations  =  new  Incrementor(2);	  	compilable	  [FE]  AssertionError  	102	1	add
59	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol  This	42	None	replace
60	[BUG]  [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  unexpected  type  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  unexpected  type	37	None	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	28	1	replace
62	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	28	1	replace
63	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	28	1	replace
64	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	28	1	replace
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	28	1	replace
66	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	28	1	replace
67	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	39	None	replace
68	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	39	None	replace
69	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
70	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(0);  [CE]  cannot  find  symbol  Evaluations  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(0);	  evaluations    =    new    Incrementor(0);    Evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	13	None	replace
71	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(1);  [CE]  cannot  find  symbol  Evaluations  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    Evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	13	None	replace
72	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepSize);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepSize);	  evaluations    =    new    Incrementor(0);    Evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	13	None	replace
73	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incompatible  types	41	None	replace
74	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	41	None	replace
75	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	26	1	replace
76	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	26	1	replace
77	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepSize,  stepStart,  isLastStep);	  Evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	109	None	replace
78	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);  [CE]  cannot  find  symbol  Evaluations  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);	  Evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	109	None	replace
79	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart  +  1);  [CE]  cannot  find  symbol  Evaluations  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart  +  1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepSize,  stepStart  +  1);	  Evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	109	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	64	1	add
81	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	64	1	add
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	64	1	add
83	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	64	1	add
84	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
85	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	  	non-compiled	[CE]  ';'  expected	64	None	add
86	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  statesInitialized);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double,double,boolean)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  statesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  statesInitialized);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    statesInitialized);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double,double,boolean)	7	None	replace
87	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double,double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    statesInitialized);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double,double)	7	None	replace
88	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  statesInitialized,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean,boolean)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  statesInitialized,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepStart,  stepSize,  statesInitialized,  isLastStep);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    statesInitialized);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean,boolean)	7	None	replace
89	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean)  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    statesInitialized);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean)	7	None	replace
90	[BUG]  [BUGGY]  evaluates  =  new  Incrementor(0);  [CE]  cannot  find  symbol  evaluates  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluates  =  new  Incrementor(0);	  evaluations    =    new    Incrementor(0);    evaluates    =    new    Incrementor(0);    	non-compiled	[CE]  cannot  find  symbol  evaluates	101	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	101	1	replace
92	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(1);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    evaluates    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	101	1	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	61	1	add
94	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	61	1	add
95	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	61	None	add
96	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	61	None	add
97	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incremental();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incremental();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incremental();	  evaluations    =    new    Incremental();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
98	[BUG]  [BUGGY]  evaluates  =  new  Incremental();  [CE]  cannot  find  symbol  evaluates  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluates  =  new  Incremental();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluates  =  new  Incremental();	  evaluations    =    new    Incremental();    	non-compiled	[CE]  cannot  find  symbol  evaluates	95	None	replace
99	[BUG]  [BUGGY]  evaluations  =  new  Incremental().eventsStates;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incremental().eventsStates;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incremental().eventsStates;	  evaluations    =    new    Incremental();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }	  	compilable	  [FE]  AssertionError  	55	1	add
101	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }	  	compilable	  [FE]  AssertionError  	55	1	add
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }	  	compilable	  [FE]  AssertionError  	55	1	add
103	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }	  	compilable	  [FE]  AssertionError  	55	1	add
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  }	  	compilable	  [FE]  AssertionError  	55	1	add
105	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  }  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  }	  	compilable	  [FE]  AssertionError  	55	1	add
106	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }	  	non-compiled	[CE]  ';'  expected	55	None	add
107	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepSize);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  stepSize);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double)	50	None	replace
108	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double)  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepStart);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  stepStart);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double)	50	None	replace
109	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)	50	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
111	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
113	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
115	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
116	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }	  	non-compiled	[CE]  ';'  expected	21	None	add
117	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	108	1	replace
118	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	108	1	replace
119	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(1);  resetEvaluations();	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(1);    resetEvaluations();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
120	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(0);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setSize(0);	  Incrementor    evaluations    =    new    Incrementor();    setSize(-1);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
121	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(1);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setSize(1);	  Incrementor    evaluations    =    new    Incrementor();    setSize(-1);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
122	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	43	1	replace
123	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	43	1	replace
124	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  NullPointerException  	71	1	replace
125	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  NullPointerException  	71	1	replace
126	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepStart);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double)	93	None	replace
127	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepSize);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double)	93	None	replace
128	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(this.name);  [CE]  no  suitable  constructor  found  for  Incrementor(String)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(this.name);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(this.name);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String)	93	None	replace
129	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(name,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(name,  stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(name,  stepSize);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
130	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	45	1	replace
131	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	compilable	  [FE]  NullPointerException  	45	1	replace
132	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
133	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	compilable	  [FE]  NullPointerException  	62	1	replace
134	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	compilable	  [FE]  NullPointerException  	62	1	replace
135	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventsStates);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,Collection<EventState>)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventsStates);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepSize,  stepStart,  eventsStates);	  evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,Collection<EventState>)	4	None	replace
136	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setStepSize(-1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	77	1	replace
137	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setStepSize(-1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	77	1	replace
138	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  resetEvaluations();  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	73	1	replace
139	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  resetEvaluations();  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  resetEvaluations();  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	73	1	replace
140	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep);  [CE]  cannot  find  symbol  Evaluations  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep);	  Evaluations    =    new    Incrementor(stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	97	None	replace
141	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  statesInitialized);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  statesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepStart,  stepSize,  statesInitialized);	  Evaluations    =    new    Incrementor(stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	97	None	replace
142	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(this.stepStart,  stepSize);  [CE]  cannot  find  symbol  Evaluations  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(this.stepStart,  stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(this.stepStart,  stepSize);	  Evaluations    =    new    Incrementor(stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	97	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	59	1	add
144	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	59	1	add
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	59	1	add
146	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	59	1	add
147	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	59	None	add
148	[BUG]  [BUGGY]  evaluations  =  new  Incrementable(),  stepSize;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementable(),  stepSize;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementable(),  stepSize;	  evaluations    =    new    Incrementable(),    isLastStep;    	non-compiled	[CE]  ';'  expected	35	None	replace
149	[BUG]  [BUGGY]  evaluations  =  new  Incrementable(),  stepStart;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementable(),  stepStart;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementable(),  stepStart;	  evaluations    =    new    Incrementable(),    isLastStep;    	non-compiled	[CE]  ';'  expected	35	None	replace
150	[BUG]  [BUGGY]  evaluations  =  new  Incrementable(),  isLastStep  +  1;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementable(),  isLastStep  +  1;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementable(),  isLastStep  +  1;	  evaluations    =    new    Incrementable(),    isLastStep;    	non-compiled	[CE]  ';'  expected	35	None	replace
151	[BUG]  [BUGGY]  evaluations  =  new  Incrementable(),  isLastStep  +  stepSize;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementable(),  isLastStep  +  stepSize;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementable(),  isLastStep  +  stepSize;	  evaluations    =    new    Incrementable(),    isLastStep;    	non-compiled	[CE]  ';'  expected	35	None	replace
152	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
153	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
154	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(this.events,  stepSize,  stepStart);  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(this.events,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(this.events,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    this.events);    	non-compiled	[CE]  cannot  find  symbol  events	106	None	replace
155	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  this.events);  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepSize,  stepStart,  this.events);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepSize,  stepStart,  this.events);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    this.events);    	non-compiled	[CE]  cannot  find  symbol  events	106	None	replace
156	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(this.stepStart,  stepSize,  this.events);  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(this.stepStart,  stepSize,  this.events);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(this.stepStart,  stepSize,  this.events);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    this.events);    	non-compiled	[CE]  cannot  find  symbol  events	106	None	replace
157	[BUG]  [BUGGY]  Evaluations  =  new  Incrementable(),  isLastStep;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementable(),  isLastStep;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementable(),  isLastStep;	  Evaluations    =    new    Incrementable();    	non-compiled	[CE]  ';'  expected	34	None	replace
158	[BUG]  [BUGGY]  Assessments  =  new  Incrementable();  [CE]  cannot  find  symbol  Assessments  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  =  new  Incrementable();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  =  new  Incrementable();	  Evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  Assessments	34	None	replace
159	[BUG]  [BUGGY]  Evaluations  =  new  Incremental();  [CE]  cannot  find  symbol  Evaluations  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incremental();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incremental();	  Evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  Evaluations	34	None	replace
160	[BUG]  [BUGGY]  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	96	None	replace
161	[BUG]  [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  exprStates  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.exprStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  exprStates	86	None	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	69	1	add
163	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	69	1	add
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	69	1	add
165	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	69	1	add
166	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	69	None	add
167	[BUG]  [BUGGY]  RectangleEvaluator  evaluations  =  new  RectangleEvaluator();  setMaxEvaluations(1);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  RectangleEvaluator  evaluations  =  new  RectangleEvaluator();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	RectangleEvaluator  evaluations  =  new  RectangleEvaluator();  setMaxEvaluations(1);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
168	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  [CE]  cannot  find  symbol  hasLastStep  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	88	None	replace
169	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  hasLastStep  =  true;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  hasLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  hasLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
170	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    This.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  This	68	None	replace
171	[BUG]  [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    This.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  incompatible  types	68	None	replace
172	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventsState>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventsState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  LinkedList  <  EventsState>();	  this.eventsStates    =    new    ArrayList    <    EventsState>();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
173	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(1);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setEvents(1);	  Incrementor    evaluations    =    new    Incrementor();    setEvents(-1);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
174	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(0);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setEvents(0);	  Incrementor    evaluations    =    new    Incrementor();    setEvents(-1);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
175	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(2);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setEvents(2);	  Incrementor    evaluations    =    new    Incrementor();    setEvents(-1);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
176	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventsStates);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventsStates);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventsStates);	  Evaluations    evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
177	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  statesInitialized);	  Evaluations    evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
178	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepStart,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepStart,  stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(stepStart,  stepSize);	  Evaluations    evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
179	[BUG]  [BUGGY]  int  evaluations  =  new  Incrementor();  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  int  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	int  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Integer    evaluations    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	80	None	replace
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	66	1	add
181	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	66	1	add
182	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  This	66	None	add
183	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	66	None	add
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	66	1	add
185	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	66	1	add
186	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
187	[BUG]  [BUGGY]  this.events  =  new  Incrementable();  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.events  =  new  Incrementable();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.events  =  new  Incrementable();	  evaluates    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  events	33	None	replace
188	[BUG]  [BUGGY]  evaluates  =  new  Incrementable().events;  [CE]  cannot  find  symbol  evaluates  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluates  =  new  Incrementable().events;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluates  =  new  Incrementable().events;	  evaluates    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  evaluates	33	None	replace
189	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	10	1	replace
190	[BUG]  [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	10	1	replace
191	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	10	1	replace
192	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(1);  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	10	1	replace
193	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  incompatible  types	27	None	replace
194	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	23	1	replace
195	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    resetEvaluations();    	compilable	  [FE]  NullPointerException  	23	1	replace
196	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    resetEvaluations();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
197	[BUG]  [BUGGY]  this.reventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  reventsStates  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.reventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.reventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  reventsStates	90	None	replace
198	[BUG]  [BUGGY]  this.eventStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  eventStates  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  eventStates	90	None	replace
199	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(isLastStep,  stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(boolean,double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(isLastStep,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(isLastStep,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(boolean,double,double)	5	None	replace
200	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  statesInitialized);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean,boolean)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  statesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  statesInitialized);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean,boolean)	5	None	replace
201	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  stepHandlers,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,Collection<StepHandler>,boolean)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  stepHandlers,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepStart,  stepSize,  stepHandlers,  isLastStep);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,Collection<StepHandler>,boolean)	5	None	replace
202	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	setMaxEvaluations(0);	  setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	99	1	replace
203	[BUG]  [BUGGY]  setMaxEvaluations(0);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(0);	  setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	99	1	replace
204	[BUG]  [BUGGY]  setEventStates(-1);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setEventStates(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setEventStates(-1);	  setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
205	[BUG]  [BUGGY]  setStates(-1);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setStates(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setStates(-1);	  setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
206	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(int,double)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  stepSize);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  stepSize);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,double)	49	None	replace
207	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	79	None	replace
208	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	79	None	replace
209	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	79	None	replace
210	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  This	63	None	replace
211	[BUG]  [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	63	None	replace
212	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	48	None	add
213	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	48	None	add
214	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	48	None	add
215	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(2);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	48	None	add
216	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	54	1	replace
217	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	54	1	replace
218	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor(2);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(1);    	compilable	  [FE]  NullPointerException  	15	1	replace
219	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(2);  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(2);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(1);    	compilable	  [FE]  NullPointerException  	15	1	replace
220	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  1);	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(1);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	15	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
222	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
224	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
226	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
228	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
229	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  resetEvaluations();	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMinEvaluations(-1);    resetEvaluations();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
230	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double,double,boolean)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  isLastStep);	  evaluations    =    new    Incrementor(name,    stepStart,    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double,double,boolean)	6	None	replace
231	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  eventsStates);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double,double,Collection<EventState>)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  eventsStates);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  eventsStates);	  evaluations    =    new    Incrementor(name,    stepStart,    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double,double,Collection<EventState>)	6	None	replace
232	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
233	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
234	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
235	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
236	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
237	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
238	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
239	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
240	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
241	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
242	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	38	None	add
243	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	38	None	add
244	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
245	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  false;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	67	None	replace
246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	40	1	add
247	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	40	1	add
248	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
249	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
250	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	40	None	add
251	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	40	None	add
252	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(expansion,  stepSize,  stepStart);  [CE]  cannot  find  symbol  expansion  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(expansion,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(expansion,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansion	94	None	replace
253	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(expandable,  stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(ExpandableStatefulODE,double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(expandable,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(expandable,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    expandable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(ExpandableStatefulODE,double,double)	94	None	replace
254	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(expansion,  stepSize,  stepStart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(expansion,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(expansion,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    expandable);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
255	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(expandeable,  stepSize,  stepStart);  [CE]  cannot  find  symbol  expandeable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(expandeable,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(expandeable,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandeable	94	None	replace
256	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    	compilable	  [FE]  NullPointerException  	46	1	replace
257	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    	compilable	  [FE]  NullPointerException  	46	1	replace
258	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
259	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
260	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
261	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
262	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
263	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
264	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(-1);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(-1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setSize(-1);  resetEvaluations();	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setSize(-1);    resetEvaluations();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	1	1	add
266	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	1	1	add
267	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isFirstStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	1	None	add
268	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    If(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
269	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluates    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)	16	None	add
270	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluates    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)	16	None	add
271	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [CE]  cannot  find  symbol  Evaluations  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluates    =    new    Incrementor(0);    Evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);	  	non-compiled	[CE]  cannot  find  symbol  Evaluations	16	None	add
272	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluates    =    new    Incrementor(0);    evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)	16	None	add
273	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(1);  [CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluates    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)	16	None	add
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
275	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
277	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
279	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
281	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
282	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	setMaxEvaluations(-1);    setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	98	1	add
283	[BUG]  [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	98	1	add
284	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  stepsInitialized  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  stepsInitialized  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  stepsInitialized  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
285	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
286	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  stepsInitialized  =  new  HashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  stepsInitialized  =  new  HashSet  <  Incrementor>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  stepsInitialized  =  new  HashSet  <  Incrementor>();	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
287	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	evaluations  =  new  Incrementor(2);	  evaluations    =    new    Incrementor(0);    evaluations    =    new    Incrementor(1);    	compilable	  [FE]  AssertionError  	103	1	replace
289	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(2);	  evaluations    =    new    Incrementor(0);    evaluations    =    new    Incrementor(1);    	compilable	  [FE]  AssertionError  	103	1	replace
290	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(1);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
291	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
292	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(isLastStep,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(boolean,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(isLastStep,  stepSize);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(isLastStep,  stepSize);	  evaluations    =    new    Incrementor(stepSize,    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(boolean,double)	8	None	replace
293	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	64	1	add
294	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	64	1	add
295	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	64	None	add
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	64	1	add
297	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	64	1	add
298	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	64	1	add
299	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	64	1	add
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
301	[BUG]  [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
302	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	10	1	replace
303	[BUG]  [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  NullPointerException  	10	1	replace
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
305	[BUG]  [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
306	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLa  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLa  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLa	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
307	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	43	1	replace
308	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	43	1	replace
309	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();	  if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    	compilable	  [FE]  NullPointerException  	85	1	replace
310	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();	  if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    	compilable	  [FE]  NullPointerException  	85	1	replace
311	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();	  if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
312	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(1);	  if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
313	[BUG]  [BUGGY]  assesses  =  new  Incrementable();  [CE]  cannot  find  symbol  assesses  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  assesses  =  new  Incrementable();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	assesses  =  new  Incrementable();	  evaluates    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  assesses	33	None	replace
314	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
315	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
316	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
317	[BUG]  [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  Set  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    Set  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
318	[BUG]  [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  [CE]  unexpected  type  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	null  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  unexpected  type	90	None	replace
319	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	ArrayList  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
320	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  that  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  that	104	None	replace
321	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
322	[BUG]  [BUGGY]  null  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  unexpected  type  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  null  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	null  =  new  ArrayList  <  EventState>();  that.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  unexpected  type	104	None	replace
323	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	88	None	replace
324	[BUG]  [BUGGY]  if(hasLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(hasLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(hasLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	88	None	replace
325	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(this.name,  stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(this.name,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(this.name,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    this.events);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double,double)	106	None	replace
326	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	ArrayList  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();	  Set    <    Incrementor>    evaluations    =    new    TreeSet    <    Incrementor>();    setMaxEvaluations(-1);    resetEvaluations();    	non-compiled	[CE]  incompatible  types	107	None	replace
327	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize  -  1);  [CE]  cannot  find  symbol  Evaluations  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize  -  1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepStart,  stepSize  -  1);	  Evaluations    =    new    Incrementor(stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	97	None	replace
328	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  evaluations);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  evaluations);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepStart,  stepSize,  evaluations);	  Evaluations    =    new    Incrementor(stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	97	None	replace
329	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	105	None	replace
330	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	105	None	replace
331	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	105	1	replace
332	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  NullPointerException  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	105	1	replace
333	[BUG]  [BUGGY]  Evaluations  =  new  Incrementable().expandable;  [CE]  cannot  find  symbol  Evaluations  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementable().expandable;  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementable().expandable;	  Evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  Evaluations	34	None	replace
334	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    	compilable	  [FE]  NullPointerException  	25	1	replace
335	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    	compilable	  [FE]  NullPointerException  	25	1	replace
336	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
337	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integrator  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
338	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  [CE]  incompatible  types  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    	non-compiled	[CE]  incompatible  types	25	None	replace
339	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(expansionable,  stepSize,  stepStart);  [CE]  cannot  find  symbol  expansionable  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(expansionable,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(expansionable,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansionable	94	None	replace
340	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  incompatible  types	42	None	replace
341	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  incompatible  types	42	None	replace
342	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	67	1	replace
343	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	67	1	replace
344	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	67	1	replace
345	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	67	1	replace
346	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.exprStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  exprStates  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.exprStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.exprStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  exprStates	36	None	add
347	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  reventsStates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  reventsStates	36	None	add
348	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	70	1	replace
349	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	70	1	replace
350	[BUG]  [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  exprStates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  exprStates	70	None	replace
351	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMinEvaluations(-1);  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMinEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  else  {  setMinEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMinEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
352	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
353	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }	  	compilable	  [FE]  NullPointerException  	84	1	add
354	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	60	1	replace
355	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	60	1	replace
356	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	60	1	replace
357	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	60	1	replace
358	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	79	None	replace
359	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  expandable);  [CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  expandable);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  expandable);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)	93	None	replace
360	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  expansionable);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  expansionable);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  cannot  find  symbol  expansionable	93	None	replace
361	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	76	1	replace
362	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	76	1	replace
363	[BUG]  [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODE();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODE();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  IncrementalStatefulODE();	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
364	[BUG]  [BUGGY]  Assessments  evaluations  =  new  Incrementable(expable);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  Incrementable(expable);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  Incrementable(expable);	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
365	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(5);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(5);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
366	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(5);  resetEvaluations();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(5);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(5);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	24	1	add
367	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
368	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(0);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	21	1	add
369	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(isLastStep,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(boolean,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(isLastStep,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(isLastStep,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(boolean,double)	92	None	replace
370	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  exprStates  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.exprStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  exprStates	86	None	replace
371	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	37	1	replace
372	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	37	1	replace
373	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	37	None	replace
374	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	37	1	replace
375	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	37	1	replace
376	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  not  a  statement	39	None	replace
377	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepHandlers,  stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(Collection<StepHandler>,double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepHandlers,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepHandlers,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(Collection<StepHandler>,double,double)	4	None	replace
378	[BUG]  [BUGGY]  Set  <  Increment>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Increment>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Increment>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
379	[BUG]  [BUGGY]  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMinEvaluations(-1);    resetEvaluations();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	61	1	add
381	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	61	1	add
382	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	61	1	add
383	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	61	1	add
384	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	61	1	add
385	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	61	1	add
386	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Integer  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    	non-compiled	[CE]  incompatible  types	20	None	replace
387	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor((0));  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor((0));  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor((0));	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	48	None	add
388	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  stateStates);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  stateStates);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  stateStates);	  Evaluations    evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
389	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(2);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor();  setSize(2);	  Incrementor    evaluations    =    new    Incrementor();    setSize(-1);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
390	[BUG]  [BUGGY]  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  steps  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  resetEvaluations();	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setStepSize(-1);    resetEvaluations();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
391	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  expansionable);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  expansionable);	  evaluations    =    new    Incrementor(name,    stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  expansionable	6	None	replace
392	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  this.expable);  [CE]  cannot  find  symbol  expable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  this.expable);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  this.expable);	  evaluations    =    new    Incrementor(name,    stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  expable	6	None	replace
393	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	26	1	replace
394	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	26	1	replace
395	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  }	  	compilable	  [FE]  AssertionError  	55	1	add
396	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  }	  	compilable	  [FE]  AssertionError  	55	1	add
397	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  }	  	compilable	  [FE]  AssertionError  	55	1	add
398	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  }	  	compilable	  [FE]  AssertionError  	55	1	add
399	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	59	1	add
400	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	59	1	add
401	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	59	None	add
402	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	59	1	add
403	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	59	1	add
404	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	9	None	add
405	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluates  =  new  Incrementor(0);  [CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluates  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluates    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluates  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)	16	None	add
406	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(1);  [CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluates    =    new    Incrementor(0);    Incrementor  evaluates  =  new  Incrementor(0);  Incrementor  evaluates  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluates  is  already  defined  in  constructor  AbstractIntegrator(String)	16	None	add
407	[BUG]  [BUGGY]  setStep(stepSize);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setStep(stepSize);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setStep(stepSize);	  setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
408	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(2);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(2);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(1);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(2);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	14	None	add
409	[BUG]  [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor((1);  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor((1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations        =        new        Incrementor(0);        Incrementor    evaluations    =    new    Incrementor(1);    Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor((1);	  	non-compiled	[CE]  ')'  expected	14	None	add
410	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  evaluations);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  evaluations);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepSize,  stepStart,  evaluations);	  Evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	109	None	replace
411	[BUG]  [BUGGY]  Set  <  Increment>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Increment>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Increment>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
412	[BUG]  [BUGGY]  Set  <  Increment>  evaluations  =  new  HashSet  <  Increment>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Increment>  evaluations  =  new  HashSet  <  Increment>();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Increment>  evaluations  =  new  HashSet  <  Increment>();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
413	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepStart,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(double,boolean)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepStart,  isLastStep);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(stepStart,  isLastStep);	  Incrementor    evaluations    =    new    Incrementor(stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,boolean)	82	None	replace
414	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.stepHandlers  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incompatible  types	41	None	replace
415	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incompatible  types	41	None	replace
416	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  events  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  cannot  find  symbol  events	41	None	replace
417	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
418	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  resetEvaluations();  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    resetEvaluations();    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(4);  resetEvaluations();  }	  	compilable	  [FE]  AssertionError  	19	1	add
419	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	66	1	add
420	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	66	1	add
421	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
422	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
423	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	87	1	replace
424	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	87	1	replace
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	69	1	add
426	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        false;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	69	1	add
427	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
428	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	40	None	add
429	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(1);    	compilable	  [FE]  NullPointerException  	15	1	replace
430	[BUG]  [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(1);    	compilable	  [FE]  NullPointerException  	15	1	replace
431	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  expandable);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)	50	None	replace
432	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepStart);  Evaluations  =  new  Incrementor(0);  [CE]  no  suitable  constructor  found  for  Incrementor(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepStart);  Evaluations  =  new  Incrementor(0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepStart);  Evaluations  =  new  Incrementor(0);	  evaluations    =    new    Incrementor(0);    Evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double)	13	None	replace
433	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  expandable);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean,ExpandableStatefulODE)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  expandable);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  expandable);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    isLastStep);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,boolean,ExpandableStatefulODE)	5	None	replace
434	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  expansionable);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepStart,  stepSize,  isLastStep,  expansionable);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expansionable	5	None	replace
435	[BUG]  [BUGGY]  evaluations  =  new  Incremental(stepStart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incremental(stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incremental(stepStart);	  evaluations    =    new    Incremental();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
436	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  isLastStep;  i++)  {  Incrementor  evaluations  =  new  INCrementor();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  isLastStep;  i++)  {  Incrementor  evaluations  =  new  INCrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  isLastStep;  i++)  {  Incrementor  evaluations  =  new  INCrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
437	[BUG]  [BUGGY]  evaluates  =  new  Incrementor(1);  [CE]  cannot  find  symbol  evaluates  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluates  =  new  Incrementor(1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluates  =  new  Incrementor(1);	  evaluations    =    new    Incrementor(0);    evaluates    =    new    Incrementor(0);    	non-compiled	[CE]  cannot  find  symbol  evaluates	101	None	replace
438	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
439	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  [CE]  '('  or  '['  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new	  	non-compiled	[CE]  '('  or  '['  expected	40	None	add
440	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setSize(-1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setSize(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setSize(-1);	  Incrementor    evaluations    =    new    Incrementor();    setSize(-1);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
441	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  isLastStep);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)	93	None	replace
442	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepsInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepsInitialized);	  evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	93	None	replace
443	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-2);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-2);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-2);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
444	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  this.eventsStates  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    this.eventsStates    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	79	None	replace
445	[BUG]  [BUGGY]  progressStates  =  new  Incrementable();  [CE]  cannot  find  symbol  progressStates  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  progressStates  =  new  Incrementable();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	progressStates  =  new  Incrementable();	  evaluates    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  progressStates	33	None	replace
446	[BUG]  [BUGGY]  steps  =  new  Incrementable();  [CE]  cannot  find  symbol  steps  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  steps  =  new  Incrementable();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	steps  =  new  Incrementable();	  evaluates    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  steps	33	None	replace
447	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(0,  0);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(0,  0);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(0,  0);	  evaluations    =    new    Incrementor(0);    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	12	None	replace
448	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  cannot  find  symbol  exprStates  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.exprStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.exprStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  exprStates	86	None	replace
449	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  0);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	49	None	replace
450	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	setMaxEvaluations(1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    	compilable	  [FE]  NullPointerException  	29	1	replace
451	[BUG]  [BUGGY]  setMaxEvaluations(1);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    	compilable	  [FE]  NullPointerException  	29	1	replace
452	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
453	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  events  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  events	65	None	replace
454	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	105	None	replace
455	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	105	1	replace
456	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    false;    	compilable	  [FE]  NullPointerException  	105	1	replace
457	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    }    if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  false;  }	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	1	None	add
458	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	43	1	replace
459	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	43	1	replace
460	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
461	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
462	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
463	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    that.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	104	1	replace
464	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	39	None	replace
465	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(0,  1);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(0,  1);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(0,  1);	  evaluations    =    new    Incrementor(0);    evaluations    =    new    Incrementor(1);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	103	None	replace
466	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  valuesInitialized);  [CE]  cannot  find  symbol  Evaluations  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepStart,  stepSize,  valuesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepStart,  stepSize,  valuesInitialized);	  Evaluations    =    new    Incrementor(stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	97	None	replace
467	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(isLastStep)  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  }	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	51	None	add
468	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
469	[BUG]  [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  evaluations  =  new  Incrementor(0);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
470	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  evaluations  =  new  Incrementor(1);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
471	[BUG]  [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(1);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  evaluations  =  new  Incrementor(1);  }  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  evaluations  =  new  Incrementor(1);  }	  evaluations    =    new    Incrementor(0);    Incrementor    evaluations    =    new    Incrementor(0);    	compilable	  [FE]  AssertionError  	10	1	replace
472	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(this.stepStart,  stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(this.stepStart,  stepSize,  stepStart);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(this.stepStart,  stepSize,  stepStart);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    this.events);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double,double)	106	None	replace
473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	61	1	add
474	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	61	1	add
475	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  this.events);  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  this.events);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(name,  stepStart,  stepSize,  this.events);	  evaluations    =    new    Incrementor(name,    stepStart,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  events	6	None	replace
476	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(0);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  TreeSet  <  Incrementor>();  setMaxEvaluations(0);	  Set    <    Incrementor>    evaluations    =    new    TreeSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
477	[BUG]  [BUGGY]  setStandardEvents(true);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setStandardEvents(true);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setStandardEvents(true);	  setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
478	[BUG]  [BUGGY]  setStandardEvents(false);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setStandardEvents(false);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setStandardEvents(false);	  setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
479	[BUG]  [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incompatible  types	89	None	replace
480	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	41	None	replace
481	[BUG]  [BUGGY]  evaluations  =  new  IncrementalIntegrator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  IncrementalIntegrator();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  IncrementalIntegrator();	  evaluations    =    new    Incremental();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
482	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  hasLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	88	None	replace
483	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  not  a  statement	62	None	replace
484	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  List  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    List    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	96	None	replace
485	[BUG]  [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  valuesInitialized);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  Incrementor(stepSize,  stepStart,  valuesInitialized);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  Incrementor(stepSize,  stepStart,  valuesInitialized);	  Evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	109	None	replace
486	[BUG]  [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventStates);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventStates);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  evaluations  =  new  Incrementor(stepSize,  stepStart,  eventStates);	  Evaluations    evaluations    =    new    Incrementor(stepSize,    stepStart);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
487	[BUG]  [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  stepsInitialized,  isLastStep);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  evaluations  =  new  Incrementor(stepStart,  stepSize,  stepsInitialized,  isLastStep);  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	evaluations  =  new  Incrementor(stepStart,  stepSize,  stepsInitialized,  isLastStep);	  evaluations    =    new    Incrementor(stepStart,    stepSize,    statesInitialized);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	7	None	replace
488	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	76	None	replace
489	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    resetEvaluations();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	76	None	replace
490	[BUG]  [BUGGY]  Evaluations  =  new  IncrementalStatefulODEvaluator();  [CE]  cannot  find  symbol  Evaluations  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Evaluations  =  new  IncrementalStatefulODEvaluator();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Evaluations  =  new  IncrementalStatefulODEvaluator();	  Evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol  Evaluations	34	None	replace
491	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
492	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	60	1	replace
493	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	60	1	replace
494	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setEvents(-1);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setEvents(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setEvents(-1);	  Incrementor    evaluations    =    new    Incrementor();    setEvents(-1);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
495	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  List  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	36	None	add
496	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	38	None	add
497	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	37	1	replace
498	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	37	1	replace
499	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	setMaxEvaluations(-1);    setMaxEvaluations(-2);	  	compilable	  [FE]  NullPointerException  	98	1	add
500	[BUG]  [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-2);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    setMaxEvaluations(-2);	  	compilable	  [FE]  NullPointerException  	98	1	add
501	[BUG]  [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  setMaxEvaluations(-1);  setMaxEvaluations(-);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	setMaxEvaluations(-1);    setMaxEvaluations(-);	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
502	[BUG]  [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODEvaluator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODEvaluator();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  IncrementalStatefulODEvaluator();	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
503	[BUG]  [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODEvaluators();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODEvaluators();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  IncrementalStatefulODEvaluators();	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
504	[BUG]  [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODEvaluations();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Assessments  evaluations  =  new  IncrementalStatefulODEvaluations();  [BUGGY]      setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Assessments  evaluations  =  new  IncrementalStatefulODEvaluations();	  Assessments    evaluations    =    new    Incrementable();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
505	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	70	1	replace
506	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	compilable	  [FE]  NullPointerException  	70	1	replace
507	[BUG]  [BUGGY]  Set  <  EventState>  events  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  EventState>  events  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  EventState>  events  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
508	[BUG]  [BUGGY]  Set  <  EventState>  events  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;      [BUGGY]  Set  <  EventState>  events  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	92	92	1	replace	Set  <  EventState>  events  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
