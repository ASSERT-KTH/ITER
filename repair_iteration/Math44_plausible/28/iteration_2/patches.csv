bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  length	36	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	36	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
4	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	53	None	replace
5	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  >  expected	53	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  extendable  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  extendable	56	None	replace
7	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	45	None	replace
8	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  t);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  t);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  t);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	45	None	replace
9	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	58	None	replace
11	[BUG]  [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	58	None	replace
12	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	58	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	111	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	111	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	111	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	111	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	1	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	1	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluates  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	16	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expansionable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expansionable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	4	None	replace
23	[BUG]  [BUGGY]  evaluations.add(new  Integer(t),  y);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t),  y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t),  y);	  evaluations.add(new    Integer(y),    t);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	26	None	replace
24	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  yDot),  t);  [CE]  no  suitable  constructor  found  for  Integer(double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  yDot),  t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  yDot),  t);	  evaluations.add(new    Integer(y),    t);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],double[])	26	None	replace
25	[BUG]  [BUGGY]  evaluations.add(new  Integer(y),  t,  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y),  t,  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y),  t,  expandable);	  evaluations.add(new    Integer(y),    t);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	26	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot  +  1);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot  +  1);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot  +  1);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot,  i  +  1);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot,  i  +  1);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot,  i  +  1);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	44	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	44	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  inputs  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  inputs	35	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluates.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	35	None	replace
33	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
34	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isLastStep);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isLastStep);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  isLastStep);	  evaluateDerivatives(t,    y,    yDot,    expansionable);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
35	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  convergence);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  convergence);	  evaluateDerivatives(t,    y,    yDot,    expansionable);    	non-compiled	[CE]  cannot  find  symbol  convergence	14	None	replace
36	[BUG]  [BUGGY]  evaluations.remove(t,  y);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.remove(t,  y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(t,  y);	  evaluations.remove(y,    t);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
37	[BUG]  [BUGGY]  evaluates.remove(y,  t);  [CE]  cannot  find  symbol  evaluates  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.remove(y,  t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(y,  t);	  evaluations.remove(y,    t);    	non-compiled	[CE]  cannot  find  symbol  evaluates	7	None	replace
38	[BUG]  [BUGGY]  evaluates.remove(t,  y);  [CE]  cannot  find  symbol  evaluates  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.remove(t,  y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(t,  y);	  evaluations.remove(y,    t);    	non-compiled	[CE]  cannot  find  symbol  evaluates	7	None	replace
39	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations().intValue();  [CE]  int  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations().intValue();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluations().intValue();	  Integer    evaluations    =    getEvaluations();    	non-compiled	[CE]  int  cannot  be  dereferenced	65	None	replace
40	[BUG]  [BUGGY]  Integer  evaluations  =  getAllEvaluations();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getAllEvaluations();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getAllEvaluations();	  Integer    evaluations    =    getEvaluations();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
41	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations().size();  [CE]  int  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations().size();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluations().size();	  Integer    evaluations    =    getEvaluations();    	non-compiled	[CE]  int  cannot  be  dereferenced	65	None	replace
42	[BUG]  [BUGGY]  Evaluations.checkState(expandable,  t.getModule());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expandable,  t.getModule());  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expandable,  t.getModule());	  Evaluations.checkState(expansions,    t.getModule());    	non-compiled	[CE]  double  cannot  be  dereferenced	98	None	replace
43	[BUG]  [BUGGY]  Evaluations.checkState(expandableODE,  t.getModule());  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expandableODE,  t.getModule());  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expandableODE,  t.getModule());	  Evaluations.checkState(expansions,    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  expandableODE	98	None	replace
44	[BUG]  [BUGGY]  Evaluations.checkState(y,  t.getModule());  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(y,  t.getModule());  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(y,  t.getModule());	  Evaluations.checkState(expansions,    t.getModule());    	non-compiled	[CE]  double  cannot  be  dereferenced	98	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y,  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	60	None	replace
48	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	60	None	replace
49	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount();  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	60	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  ')'  expected	99	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }  [CE]  'void'  type  not  allowed  here  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  'void'  type  not  allowed  here	99	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  y.incrementCount());  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  y.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  y.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  cannot  find  symbol  length	99	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  yDot.incrementCount());  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  yDot.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  yDot.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  cannot  find  symbol  length	99	None	replace
54	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	83	None	replace
55	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	83	None	replace
56	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	83	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    expandable);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	39	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    expandable);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	39	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  inputs  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    expandable);    }    	non-compiled	[CE]  cannot  find  symbol  inputs	39	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	72	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	72	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	72	None	replace
63	[BUG]  [BUGGY]  int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	20	None	replace
64	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	20	None	replace
65	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  expandable.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
66	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
67	[BUG]  [BUGGY]  int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	10	None	replace
68	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y,  yDot[0]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	104	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [CE]  cannot  find  symbol  evaluates  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	112	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  yDot[i]);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  new  Double(yDot[i]));  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  new  Double(yDot[i]));  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  new  Double(yDot[i]));  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
73	[BUG]  [BUGGY]  evaluateDerivativesInitialized.incrementCount();  [CE]  cannot  find  symbol  evaluateDerivativesInitialized  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivativesInitialized.incrementCount();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivativesInitialized.incrementCount();	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivativesInitialized	63	None	replace
74	[BUG]  [BUGGY]  evaluateStatesInitialized.incrementCount();  [CE]  cannot  find  symbol  evaluateStatesInitialized  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateStatesInitialized.incrementCount();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateStatesInitialized.incrementCount();	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluateStatesInitialized	63	None	replace
75	[BUG]  [BUGGY]  evaluateInitialized.incrementCount();  [CE]  cannot  find  symbol  evaluateInitialized  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateInitialized.incrementCount();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateInitialized.incrementCount();	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluateInitialized	63	None	replace
76	[BUG]  [BUGGY]  evaluates.incrementCount(t,  y);  [CE]  cannot  find  symbol  evaluates  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.incrementCount(t,  y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.incrementCount(t,  y);	  evaluates.incrementCount(t);    	non-compiled	[CE]  cannot  find  symbol  evaluates	6	None	replace
77	[BUG]  [BUGGY]  evaluates.incrementCount(t,  yDot);  [CE]  cannot  find  symbol  evaluates  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.incrementCount(t,  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.incrementCount(t,  yDot);	  evaluates.incrementCount(t);    	non-compiled	[CE]  cannot  find  symbol  evaluates	6	None	replace
78	[BUG]  [BUGGY]  assessors.incrementCount(t);  [CE]  cannot  find  symbol  assessors  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  assessors.incrementCount(t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	assessors.incrementCount(t);	  evaluates.incrementCount(t);    	non-compiled	[CE]  cannot  find  symbol  assessors	6	None	replace
79	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandedable);  [CE]  cannot  find  symbol  expandedable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandedable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  expandedable);	  evaluateDerivatives(t,    y,    yDot,    expansion);    	non-compiled	[CE]  cannot  find  symbol  expandedable	15	None	replace
80	[BUG]  [BUGGY]  Evaluations.checkState(y.length  ==  1);  [CE]  cannot  find  symbol  Evaluations  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(y.length  ==  1);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(y.length  ==  1);	  Evaluations.checkState(expansions.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	76	None	replace
81	[BUG]  [BUGGY]  Evaluations.checkState(expandable.length  ==  1);  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expandable.length  ==  1);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expandable.length  ==  1);	  Evaluations.checkState(expansions.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  length	76	None	replace
82	[BUG]  [BUGGY]  Evaluations.checkState(expansions.length!=  1);  [CE]  cannot  find  symbol  expansions  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expansions.length!=  1);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expansions.length!=  1);	  Evaluations.checkState(expansions.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  expansions	76	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    null,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  length	96	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    null,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	96	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  null,  expandable);  }  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  null,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  null,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    null,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	73	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	73	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	73	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	42	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	34	None	replace
93	[BUG]  [BUGGY]  evaluations.add(new  Integer(yDot),  t);  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(yDot),  t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(yDot),  t);	  evaluations.add(new    Integer(yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	97	None	replace
94	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  y,  yDot));  [CE]  no  suitable  constructor  found  for  Integer(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  y,  yDot));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  y,  yDot));	  evaluations.add(new    Integer(y,    yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double[],double[])	86	None	replace
95	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  yDot),  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  yDot),  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  yDot),  expandable);	  evaluations.add(new    Integer(y,    yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],double[])	86	None	replace
96	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  new  Integer(yDot));  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  new  Integer(yDot));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  new  Integer(yDot));	  evaluations.add(new    Integer(y,    yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	86	None	replace
97	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  yDot),  expansionable);  [CE]  no  suitable  constructor  found  for  Integer(double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  yDot),  expansionable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  yDot),  expansionable);	  evaluations.add(new    Integer(y,    yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],double[])	86	None	replace
98	[BUG]  [BUGGY]  assessors.remove(yDot);  [CE]  cannot  find  symbol  assessors  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  assessors.remove(yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	assessors.remove(yDot);	  evaluates.remove(yDot);    	non-compiled	[CE]  cannot  find  symbol  assessors	48	None	replace
99	[BUG]  [BUGGY]  evaluate(t,  y,  yDot);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluate(t,  y,  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluate(t,  y,  yDot);	  evaluations.remove(y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
100	[BUG]  [BUGGY]  evaluates.remove(y,  yDot);  [CE]  cannot  find  symbol  evaluates  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.remove(y,  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(y,  yDot);	  evaluations.remove(y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  evaluates	62	None	replace
101	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  y,  0));  [CE]  no  suitable  constructor  found  for  Integer(double,double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  y,  0));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  y,  0));	  evaluations.add(new    Integer(y,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double[],int)	24	None	replace
102	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  0,  yDot));  [CE]  no  suitable  constructor  found  for  Integer(double[],int,double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  0,  yDot));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  0,  yDot));	  evaluations.add(new    Integer(y,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],int,double[])	24	None	replace
103	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  0),  t);  [CE]  no  suitable  constructor  found  for  Integer(double[],int)  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  0),  t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  0),  t);	  evaluations.add(new    Integer(y,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],int)	24	None	replace
104	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  1,  0));  [CE]  no  suitable  constructor  found  for  Integer(double[],int,int)  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  1,  0));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  1,  0));	  evaluations.add(new    Integer(y,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],int,int)	24	None	replace
105	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expandable  }  );  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expandable  }  );  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expandable  }  );	  evaluateDerivatives(t,    y,    new    Double[]    {    yDot    }    );    	non-compiled	[CE]  incompatible  types	74	None	replace
106	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  maxCheckInterval  }  );  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  maxCheckInterval  }  );  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  maxCheckInterval  }  );	  evaluateDerivatives(t,    y,    new    Double[]    {    yDot    }    );    	non-compiled	[CE]  incompatible  types	74	None	replace
107	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expansionable  }  );  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expansionable  }  );  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expansionable  }  );	  evaluateDerivatives(t,    y,    new    Double[]    {    yDot    }    );    	non-compiled	[CE]  incompatible  types	74	None	replace
108	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot  },  expandable);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot  },  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  new  Double[]  {  yDot  },  expandable);	  evaluateDerivatives(t,    y,    new    Double[]    {    yDot    }    );    	non-compiled	[CE]  incompatible  types	74	None	replace
109	[BUG]  [BUGGY]  Evaluations.checkState(y.length  ==  0);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(y.length  ==  0);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(y.length  ==  0);	  Evaluations.checkState(expansions.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	77	None	replace
110	[BUG]  [BUGGY]  Evaluations.checkState(expandable.length  ==  0);  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expandable.length  ==  0);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expandable.length  ==  0);	  Evaluations.checkState(expansions.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  length	77	None	replace
111	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	59	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	59	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	  for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	40	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  inputs  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  inputs.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	  for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  inputs	40	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  events  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	  for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  events	40	None	replace
116	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
117	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
118	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount());    }    	non-compiled	[CE]  ')'  expected	101	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount());    }    	non-compiled	[CE]  ')'  expected	101	None	replace
121	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	81	None	replace
122	[BUG]  [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(isLastStep)  {  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	81	None	replace
123	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  t));  [CE]  no  suitable  constructor  found  for  Integer(double[],double)  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  t));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  t));	  evaluations.add(new    Integer(t,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],double)	25	None	replace
124	[BUG]  [BUGGY]  Evaluations.add(new  Integer(t,  y,  yDot));  [CE]  no  suitable  constructor  found  for  Integer(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.add(new  Integer(t,  y,  yDot));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.add(new  Integer(t,  y,  yDot));	  evaluations.add(new    Integer(t,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double[],double[])	25	None	replace
125	[BUG]  [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y,  yDot);  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y,  yDot);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  y  =  evaluateDerivatives(t,  y,  yDot);	  Integer    y    =    evaluateDerivatives(t,    y);    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	75	None	replace
126	[BUG]  [BUGGY]  Integer  y  =  evaluateDerivatives(t,  yDot);  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  y  =  evaluateDerivatives(t,  yDot);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  y  =  evaluateDerivatives(t,  yDot);	  Integer    y    =    evaluateDerivatives(t,    y);    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	75	None	replace
127	[BUG]  [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y,  0);  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y,  0);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  y  =  evaluateDerivatives(t,  y,  0);	  Integer    y    =    evaluateDerivatives(t,    y);    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	75	None	replace
128	[BUG]  [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y.length);  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y.length);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  y  =  evaluateDerivatives(t,  y.length);	  Integer    y    =    evaluateDerivatives(t,    y);    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	75	None	replace
129	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	92	None	replace
130	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	92	None	replace
131	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandedable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandedable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandedable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	92	None	replace
132	[BUG]  [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable  ==  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	100	None	replace
133	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	100	None	replace
134	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	89	None	replace
135	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	89	None	replace
136	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	89	None	replace
137	[BUG]  [BUGGY]  evaluateStates.clear();  [CE]  cannot  find  symbol  evaluateStates  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateStates.clear();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateStates.clear();	  evaluates.clear();    	non-compiled	[CE]  cannot  find  symbol  evaluateStates	49	None	replace
138	[BUG]  [BUGGY]  evaluate(t,  y);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluate(t,  y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluate(t,  y);	  evaluates.clear();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  length	38	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	38	None	replace
141	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandedable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandedable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandedable.computeDerivatives(t,  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
145	[BUG]  [BUGGY]  int  y  =  0;  y  <  expandableODE.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  expandableODE.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  expandableODE.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandableODE.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	11	None	replace
146	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
147	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	31	None	replace
148	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	31	None	replace
149	[BUG]  [BUGGY]  luateDerivatives.add(t);  [CE]  cannot  find  symbol  luateDerivatives  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives.add(t);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives.add(t);	  luateDerivatives.add(y);    	non-compiled	[CE]  cannot  find  symbol  luateDerivatives	79	None	replace
150	[BUG]  [BUGGY]  luateDerivatives.add(y,  t);  [CE]  cannot  find  symbol  luateDerivatives  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives.add(y,  t);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives.add(y,  t);	  luateDerivatives.add(y);    	non-compiled	[CE]  cannot  find  symbol  luateDerivatives	79	None	replace
151	[BUG]  [BUGGY]  evaluates.remove(t);  [CE]  cannot  find  symbol  evaluates  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.remove(t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(t);	  evaluations.remove(t);    	non-compiled	[CE]  cannot  find  symbol  evaluates	8	None	replace
152	[BUG]  [BUGGY]  evaluations.add(t);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(t);	  evaluations.remove(t);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  inputs  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  inputs.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  inputs.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  inputs	110	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	110	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i    +    1,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  length	95	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i    +    1,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	95	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i    +    1,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	95	None	replace
158	[BUG]  [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  expandable));  [CE]  no  suitable  constructor  found  for  Incrementor(double,double[],double[],ExpandableStatefulODE)  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  expandable));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Incrementor(t,  y,  yDot,  expandable));	  evaluations.add(new    Incrementor(t,    y,    yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double[],double[],ExpandableStatefulODE)	50	None	replace
159	[BUG]  [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  expansion));  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  expansion));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Incrementor(t,  y,  yDot,  expansion));	  evaluations.add(new    Incrementor(t,    y,    yDot));    	non-compiled	[CE]  cannot  find  symbol  expansion	50	None	replace
160	[BUG]  [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  expansionable));  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  expansionable));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Incrementor(t,  y,  yDot,  expansionable));	  evaluations.add(new    Incrementor(t,    y,    yDot));    	non-compiled	[CE]  cannot  find  symbol  expansionable	50	None	replace
161	[BUG]  [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  convergence));  [CE]  cannot  find  symbol  convergence  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot,  convergence));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Incrementor(t,  y,  yDot,  convergence));	  evaluations.add(new    Incrementor(t,    y,    yDot));    	non-compiled	[CE]  cannot  find  symbol  convergence	50	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	37	None	replace
163	[BUG]  [BUGGY]  int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluations.size();    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	22	None	replace
164	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluations.size();    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
165	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  maxCheckInterval);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  maxCheckInterval);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  maxCheckInterval);  }	  for(int    y    =    0;    y    <    evaluations.size();    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
166	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().doubleValue();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().doubleValue();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitialized().doubleValue();	  Integer    evaluations    =    getEvaluationsInitialized();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
167	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().intValue();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().intValue();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitialized().intValue();	  Integer    evaluations    =    getEvaluationsInitialized();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
168	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitializing();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitializing();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitializing();	  Integer    evaluations    =    getEvaluationsInitialized();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  evaluates  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	27	None	replace
171	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluates  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	17	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	17	None	replace
174	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	47	None	replace
175	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	47	None	replace
176	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandableODE);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandableODE);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	47	None	replace
177	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  expandable);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives(t,  y,  yDot,  expandable);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives(t,  y,  yDot,  expandable);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
178	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives(t,  y,  yDot,  expansionable);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionable	12	None	replace
179	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives(t,  y,  yDot,  expansion);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives(t,  y,  yDot,  expansion);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansion	12	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	55	None	replace
181	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandableODE);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  expandableODE);	  evaluateDerivatives(t,    y,    yDot,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	13	None	replace
182	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable.cloneTree());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable.cloneTree());  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  expandable.cloneTree());	  evaluateDerivatives(t,    y,    yDot,    expandable);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
183	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluationsInitialized();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer[]  evaluations  =  getEvaluationsInitialized();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEvaluationsInitialized();	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
184	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[0]);  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[0]);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[0]);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  int  cannot  be  dereferenced	66	None	replace
185	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[references.size()  ]);  [CE]  cannot  find  symbol  references  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[references.size()  ]);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[references.size()  ]);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  cannot  find  symbol  references	66	None	replace
186	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().intValue();  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer[]  evaluations  =  getEvaluations().intValue();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEvaluations().intValue();	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  int  cannot  be  dereferenced	66	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	109	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	109	None	replace
189	[BUG]  [BUGGY]  evaluateDerivatives.add(t);  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives.add(t);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives.add(t);	  evaluateDerivatives.add(y);    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	78	None	replace
190	[BUG]  [BUGGY]  evaluateDerivatives.add(t,  y);  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives.add(t,  y);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives.add(t,  y);	  evaluateDerivatives.add(y);    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	78	None	replace
191	[BUG]  [BUGGY]  evaluateDerivatives.add(y,  t);  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives.add(y,  t);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives.add(y,  t);	  evaluateDerivatives.add(y);    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	78	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  extendable.computeDerivatives(t,  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    extendable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  length	29	None	replace
193	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  evaluates  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    extendable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	29	None	replace
194	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	80	None	replace
195	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	103	None	replace
196	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	103	None	replace
197	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	103	None	replace
198	[BUG]  [BUGGY]  Integer  evaluations  =  getEventsInitialized();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEventsInitialized();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEventsInitialized();	  Integer    evaluations    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
199	[BUG]  [BUGGY]  Integer  evaluations  =  getEvents().intValue();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvents().intValue();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvents().intValue();	  Integer    evaluations    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
200	[BUG]  [BUGGY]  Integer  evaluations  =  getEventsCount();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEventsCount();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEventsCount();	  Integer    evaluations    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  cannot  find  symbol  extendable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    extendable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol  extendable	43	None	replace
202	[BUG]  [BUGGY]  int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  >  expected	33	None	replace
203	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	33	None	replace
204	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	33	None	replace
205	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	9	None	replace
206	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	9	None	replace
207	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	9	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [CE]  cannot  find  symbol  length  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    null);    }    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
209	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    null);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	41	None	replace
210	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [CE]  cannot  find  symbol  assessments  [FE]                              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    null);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	41	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	2	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluates  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	2	None	replace
214	[BUG]  [BUGGY]  evaluations.add(new  Integer(0),  y);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(0),  y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(0),  y);	  evaluations.add(new    Integer(0));    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
215	[BUG]  [BUGGY]  evaluates.add(new  Integer(0));  [CE]  cannot  find  symbol  evaluates  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.add(new  Integer(0));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.add(new  Integer(0));	  evaluations.add(new    Integer(0));    	non-compiled	[CE]  cannot  find  symbol  evaluates	87	None	replace
216	[BUG]  [BUGGY]  evaluations.add(new  Integer(0),  yDot);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(0),  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(0),  yDot);	  evaluations.add(new    Integer(0));    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  x[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluates  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	18	None	replace
220	[BUG]  [BUGGY]  t.incrementCount();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  t.incrementCount();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	t.incrementCount();	  assessors.incrementCount();    	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	replace
221	[BUG]  [BUGGY]  assessors.add(t);  [CE]  cannot  find  symbol  assessors  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  assessors.add(t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	assessors.add(t);	  assessors.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  assessors	5	None	replace
222	[BUG]  [BUGGY]  assessors.clear();  [CE]  cannot  find  symbol  assessors  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  assessors.clear();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	assessors.clear();	  assessors.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  assessors	5	None	replace
223	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  >  expected	30	None	replace
224	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	88	None	replace
225	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  evaluations  =  getEvaluations();  [CE]  variable  evaluations  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  evaluations  =  getEvaluations();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer    evaluations    =    getEvaluations();    Integer  evaluations  =  getEvaluations();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  method  computeDerivatives(double,double[],double[])	64	None	add
226	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations();  int  evaluations  =  getEvaluations();  [CE]  variable  evaluations  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations();  int  evaluations  =  getEvaluations();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer    evaluations    =    getEvaluations();    int  evaluations  =  getEvaluations();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  method  computeDerivatives(double,double[],double[])	64	None	add
227	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  evaluates  =  getEvaluations();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  evaluates  =  getEvaluations();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer    evaluations    =    getEvaluations();    Integer  evaluates  =  getEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
228	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  assessments  =  getEvaluations();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  assessments  =  getEvaluations();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer    evaluations    =    getEvaluations();    Integer  assessments  =  getEvaluations();	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
229	[BUG]  [BUGGY]  evaluateDerivatives(t,  y);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y);	  evaluateDerivatives.clear();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
230	[BUG]  [BUGGY]  luateDerivatives.clear();  [CE]  cannot  find  symbol  luateDerivatives  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives.clear();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives.clear();	  evaluateDerivatives.clear();    	non-compiled	[CE]  cannot  find  symbol  luateDerivatives	51	None	replace
231	[BUG]  [BUGGY]  int  y  =  0;  y  <  evaluates.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  evaluates.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  evaluates.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluates.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	23	None	replace
232	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	102	None	replace
233	[BUG]  [BUGGY]  evaluations.remove(y,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.remove(y,  expandableODE);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(y,  expandableODE);	  evaluations.remove(y,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	82	None	replace
234	[BUG]  [BUGGY]  evaluates.remove(y,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.remove(y,  expandableODE);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(y,  expandableODE);	  evaluations.remove(y,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	82	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluates  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	3	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	3	None	replace
238	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	32	None	replace
239	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  >  expected	32	None	replace
240	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	32	None	replace
241	[BUG]  [BUGGY]  evaluates.remove(y,  expandable);  [CE]  cannot  find  symbol  evaluates  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.remove(y,  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(y,  expandable);	  evaluates.remove(y);    	non-compiled	[CE]  cannot  find  symbol  evaluates	108	None	replace
242	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluations.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluations.add(y);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluations.add(y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluations.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	46	None	replace
243	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y,  t);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y,  t);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y,  t);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluations.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	46	None	replace
244	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluations.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	46	None	replace
245	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	57	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	57	None	replace
247	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	107	None	replace
248	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	107	None	replace
249	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  >  expected	107	None	replace
250	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  >  expected	54	None	replace
251	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	54	None	replace
252	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  y,  expandable));  [CE]  no  suitable  constructor  found  for  Integer(double,double[],ExpandableStatefulODE)  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  y,  expandable));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  y,  expandable));	  evaluations.add(new    Integer(y,    expandable));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double[],ExpandableStatefulODE)	85	None	replace
253	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  y,  expandableODE));  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  y,  expandableODE));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  y,  expandableODE));	  evaluations.add(new    Integer(y,    expandable));    	non-compiled	[CE]  cannot  find  symbol  expandableODE	85	None	replace
254	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  expandableODE));  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  expandableODE));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  expandableODE));	  evaluations.add(new    Integer(y,    expandable));    	non-compiled	[CE]  cannot  find  symbol  expandableODE	85	None	replace
255	[BUG]  [BUGGY]  Evaluations.add(new  Integer(t,  y,  expandable));  [CE]  no  suitable  constructor  found  for  Integer(double,double[],ExpandableStatefulODE)  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.add(new  Integer(t,  y,  expandable));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.add(new  Integer(t,  y,  expandable));	  evaluations.add(new    Integer(y,    expandable));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double[],ExpandableStatefulODE)	85	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  x[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  x[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	71	None	replace
259	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	94	None	replace
260	[BUG]  [BUGGY]  evaluateDerivatives.add(null);  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives.add(null);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives.add(null);	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	94	None	replace
261	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	94	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  ')'  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  ')'  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.compute    	non-compiled	[CE]  ')'  expected	61	None	replace
263	[BUG]  [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(isLastStep)  {  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.compute    	non-compiled	[CE]  ')'  expected	61	None	replace
264	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	21	None	replace
265	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	21	None	replace
266	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  >  expected	52	None	replace
267	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	52	None	replace
268	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  expandable.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
269	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  evaluations  =  getEvaluations().incrementCount();  [CE]  variable  evaluations  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations();  Integer  evaluations  =  getEvaluations().incrementCount();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer    evaluations    =    getEvaluations();    Integer  evaluations  =  getEvaluations().incrementCount();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  method  computeDerivatives(double,double[],double[])	64	None	add
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [CE]  cannot  find  symbol  evaluators  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    null);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	41	None	replace
271	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [CE]  cannot  find  symbol  events  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    null);    }    	non-compiled	[CE]  cannot  find  symbol  events	41	None	replace
272	[BUG]  [BUGGY]  Evaluations.checkState(expable.length  ==  1);  [CE]  cannot  find  symbol  expable  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expable.length  ==  1);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expable.length  ==  1);	  Evaluations.checkState(expansions.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  expable	76	None	replace
273	[BUG]  [BUGGY]  Evaluations.checkState(yDot.length  ==  1);  [CE]  cannot  find  symbol  Evaluations  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(yDot.length  ==  1);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(yDot.length  ==  1);	  Evaluations.checkState(expansions.length    ==    1);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	76	None	replace
274	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluates.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluates.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluates.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluates.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	23	None	replace
275	[BUG]  [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable  ==  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.compute    	non-compiled	[CE]  ')'  expected	61	None	replace
276	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.compute    	non-compiled	[CE]  ')'  expected	61	None	replace
277	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[resources.size()  ]);  [CE]  cannot  find  symbol  resources  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[resources.size()  ]);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[resources.size()  ]);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  cannot  find  symbol  resources	66	None	replace
278	[BUG]  [BUGGY]  assessors.remove(y);  [CE]  cannot  find  symbol  assessors  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  assessors.remove(y);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	assessors.remove(y);	  assessors.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  assessors	5	None	replace
279	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	100	None	replace
280	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  evaluators  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	38	None	replace
281	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  >  expected	45	None	replace
282	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	27	None	replace
283	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInit();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInit();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInit();	  Integer    evaluations    =    getEvaluations();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
284	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().values();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().values();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitialized().values();	  Integer    evaluations    =    getEvaluationsInitialized();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
285	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().evaluate(y,  yDot);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().evaluate(y,  yDot);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitialized().evaluate(y,  yDot);	  Integer    evaluations    =    getEvaluationsInitialized();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
286	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().evaluate(y);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().evaluate(y);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitialized().evaluate(y);	  Integer    evaluations    =    getEvaluationsInitialized();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  assessments  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    extendable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	29	None	replace
288	[BUG]  [BUGGY]  Evaluations.checkState(expable.length  ==  0);  [CE]  cannot  find  symbol  expable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expable.length  ==  0);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expable.length  ==  0);	  Evaluations.checkState(expansions.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  expable	77	None	replace
289	[BUG]  [BUGGY]  Evaluations.checkState(yDot.length  ==  0);  [CE]  cannot  find  symbol  Evaluations  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(yDot.length  ==  0);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(yDot.length  ==  0);	  Evaluations.checkState(expansions.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  Evaluations	77	None	replace
290	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	47	None	replace
291	[BUG]  [BUGGY]  evaluatesInitializedODE.incrementCount();  [CE]  cannot  find  symbol  evaluatesInitializedODE  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluatesInitializedODE.incrementCount();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitializedODE.incrementCount();	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluatesInitializedODE	63	None	replace
292	[BUG]  [BUGGY]  evaluatesInitialized.incrementCount(t);  [CE]  cannot  find  symbol  evaluatesInitialized  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluatesInitialized.incrementCount(t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitialized.incrementCount(t);	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluatesInitialized	63	None	replace
293	[BUG]  [BUGGY]  evaluatesInitialized.reset();  [CE]  cannot  find  symbol  evaluatesInitialized  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluatesInitialized.reset();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitialized.reset();	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluatesInitialized	63	None	replace
294	[BUG]  [BUGGY]  evaluations.add(new  Integer(y),  yDot);  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y),  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y),  yDot);	  evaluations.add(new    Integer(yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	97	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  assessments  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    expandable);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	39	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  events  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    expandable);    }    	non-compiled	[CE]  cannot  find  symbol  events	39	None	replace
297	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  evaluates  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    expandable);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	39	None	replace
298	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluations.add(y);    }    	non-compiled	[CE]  >  expected	46	None	replace
299	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y  +  1);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y  +  1);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y  +  1);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluations.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	46	None	replace
300	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  assessments  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y,  i);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y,  i);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expansionable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	28	None	replace
301	[BUG]  [BUGGY]  evaluations.add(new  Integer(0),  expandable);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(0),  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(0),  expandable);	  evaluations.add(new    Integer(0));    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  oDot);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  oDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  oDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
303	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	72	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	72	None	replace
305	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  assessments.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  assessments.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  assessments.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	20	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	73	None	replace
307	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount();  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	102	None	replace
308	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	18	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	18	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluators  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	36	None	replace
311	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluates  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	36	None	replace
312	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  assessments.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  assessments.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  assessments.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	33	None	replace
313	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	60	None	replace
314	[BUG]  [BUGGY]  evaluates.incrementCount(t,  isLastStep);  [CE]  cannot  find  symbol  evaluates  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.incrementCount(t,  isLastStep);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.incrementCount(t,  isLastStep);	  evaluates.incrementCount(t);    	non-compiled	[CE]  cannot  find  symbol  evaluates	6	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  >=  ')'  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  >=  ')'  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  >=  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	59	None	replace
316	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	37	None	replace
317	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot  +  1);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot  +  1);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot  +  1);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
318	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  expansionableODE);  }  [CE]  cannot  find  symbol  expansionableODE  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  expansionableODE);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  expansionableODE);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	42	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	84	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }  [CE]  cannot  find  symbol  evaluates  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	84	None	replace
321	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  0));  [CE]  no  suitable  constructor  found  for  Integer(double,int)  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  0));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  0));	  evaluations.add(new    Integer(y,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,int)	24	None	replace
322	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  0),  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double[],int)  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  0),  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  0),  expandable);	  evaluations.add(new    Integer(y,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],int)	24	None	replace
323	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandableODE.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
324	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable,  yDot,  expandable);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  expandable,  yDot,  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  expandable,  yDot,  expandable);	  evaluateDerivatives(t,    y,    yDot,    expandable);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
325	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluates  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	1	None	replace
326	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  yDot[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i][i],  yDot[i]);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i][i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i][i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
328	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  evaluations.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  evaluations.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	80	None	replace
329	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	111	None	replace
330	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	81	None	replace
331	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  ')'  expected	99	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >  evaluations.incrementCount());  }  [CE]  'void'  type  not  allowed  here  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >  evaluations.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >  evaluations.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  'void'  type  not  allowed  here	99	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluators  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	17	None	replace
335	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [CE]  cannot  find  symbol  evaluators  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    null,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	96	None	replace
336	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    null,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	96	None	replace
337	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  assessments.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  assessments.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  assessments.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    evaluations.size();    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
338	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  yDot),  ExpandableStatefulODE);  [CE]  no  suitable  constructor  found  for  Integer(double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  yDot),  ExpandableStatefulODE);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  yDot),  ExpandableStatefulODE);	  evaluations.add(new    Integer(y,    yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],double[])	86	None	replace
339	[BUG]  [BUGGY]  evaluatesInitialized.clear();  [CE]  cannot  find  symbol  evaluatesInitialized  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluatesInitialized.clear();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitialized.clear();	  evaluates.clear();    	non-compiled	[CE]  cannot  find  symbol  evaluatesInitialized	49	None	replace
340	[BUG]  [BUGGY]  assesses.clear();  [CE]  cannot  find  symbol  assesses  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  assesses.clear();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	assesses.clear();	  evaluates.clear();    	non-compiled	[CE]  cannot  find  symbol  assesses	49	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	16	None	replace
342	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount());  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  assessments.incrementCount());  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount());    }    	non-compiled	[CE]  ')'  expected	101	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  expansionableODE);  }  [CE]  cannot  find  symbol  expansionableODE  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  expansionableODE);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  expansionableODE);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	44	None	replace
344	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  isLastStep);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  isLastStep);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i],  isLastStep);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	44	None	replace
345	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  For(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	For(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  '.class'  expected	9	None	replace
346	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0]);    }    	non-compiled	[CE]  >  expected	83	None	replace
347	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	83	None	replace
348	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	34	None	replace
349	[BUG]  [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot),  expandable);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot),  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Incrementor(t,  y,  yDot),  expandable);	  evaluations.add(new    Incrementor(t,    y,    yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double[],double[])	50	None	replace
350	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  y),  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double,double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  y),  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  y),  expandable);	  evaluations.add(new    Integer(t,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double[])	25	None	replace
351	[BUG]  [BUGGY]  Evaluations.add(new  Integer(y,  t));  [CE]  no  suitable  constructor  found  for  Integer(double[],double)  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.add(new  Integer(y,  t));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.add(new  Integer(y,  t));	  evaluations.add(new    Integer(t,    y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],double)	25	None	replace
352	[BUG]  [BUGGY]  evaluations.remove(null);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.remove(null);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(null);	  evaluations.remove(t);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
353	[BUG]  [BUGGY]  evaluateDerivatives(t,  y.length,  yDot);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y.length,  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y.length,  yDot);	  evaluateDerivatives.clear();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
354	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	19	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  extendable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  extendable	57	None	replace
356	[BUG]  [BUGGY]  evaluations.add(new  Integer(y),  t,  expansionable);  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y),  t,  expansionable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y),  t,  expansionable);	  evaluations.add(new    Integer(y),    t);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	26	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [CE]  cannot  find  symbol  evaluators  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i    +    1,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	95	None	replace
358	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i    +    1,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	95	None	replace
359	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEquivalences();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer[]  evaluations  =  getEquivalences();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEquivalences();	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
360	[BUG]  [BUGGY]  evaluates.remove(yDot,  expandable);  [CE]  cannot  find  symbol  evaluates  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.remove(yDot,  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(yDot,  expandable);	  evaluates.remove(yDot);    	non-compiled	[CE]  cannot  find  symbol  evaluates	48	None	replace
361	[BUG]  [BUGGY]  luateDerivatives.add(null);  [CE]  cannot  find  symbol  luateDerivatives  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives.add(null);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives.add(null);	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  cannot  find  symbol  luateDerivatives	94	None	replace
362	[BUG]  [BUGGY]  luateDerivatives(t,  y,  null);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives(t,  y,  null);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives(t,  y,  null);	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
363	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  expandable,  y));  [CE]  no  suitable  constructor  found  for  Integer(double,ExpandableStatefulODE,double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  expandable,  y));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  expandable,  y));	  evaluations.add(new    Integer(y,    expandable));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,ExpandableStatefulODE,double[])	85	None	replace
364	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  expandable,  yDot));  [CE]  no  suitable  constructor  found  for  Integer(double,ExpandableStatefulODE,double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(t,  expandable,  yDot));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  expandable,  yDot));	  evaluations.add(new    Integer(y,    expandable));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,ExpandableStatefulODE,double[])	85	None	replace
365	[BUG]  [BUGGY]  Evaluations.checkState(expable,  t.getModule());  [CE]  cannot  find  symbol  expable  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(expable,  t.getModule());  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expable,  t.getModule());	  Evaluations.checkState(expansions,    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  expable	98	None	replace
366	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	71	None	replace
367	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    x[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	71	None	replace
368	[BUG]  [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y[0],  yDot);  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y[0],  yDot);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  y  =  evaluateDerivatives(t,  y[0],  yDot);	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
369	[BUG]  [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y.length,  yDot);  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y.length,  yDot);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  y  =  evaluateDerivatives(t,  y.length,  yDot);	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
370	[BUG]  [BUGGY]  Integer  evaluations  =  getEvents().values();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvents().values();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvents().values();	  Integer    evaluations    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
371	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
372	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
373	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable.length);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable.length);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable.length);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
374	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandableODE.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
375	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	72	None	replace
376	[BUG]  [BUGGY]  evaluates.incrementCount(t0);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluates.incrementCount(t0);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.incrementCount(t0);	  evaluates.incrementCount(t);    	non-compiled	[CE]  cannot  find  symbol  t0	6	None	replace
377	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  0,  yDot.length));  [CE]  no  suitable  constructor  found  for  Integer(double[],int,int)  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  0,  yDot.length));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  0,  yDot.length));	  evaluations.add(new    Integer(y,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],int,int)	24	None	replace
378	[BUG]  [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	55	None	replace
379	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  >=  ')'  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  >=  ')'  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  >=  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	81	None	replace
380	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
381	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
382	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i][0],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	73	None	replace
383	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
384	[BUG]  [BUGGY]  evaluations.remove(y,  t0);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.remove(y,  t0);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(y,  t0);	  evaluations.remove(y,    t);    	non-compiled	[CE]  cannot  find  symbol  t0	7	None	replace
385	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
386	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
387	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }	  for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	20	None	replace
388	[BUG]  [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  >  expected	42	None	replace
389	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expandable.cloneTree()  }  );  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expandable.cloneTree()  }  );  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  new  Double[]  {  yDot,  expandable.cloneTree()  }  );	  evaluateDerivatives(t,    y,    new    Double[]    {    yDot    }    );    	non-compiled	[CE]  incompatible  types	74	None	replace
390	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	27	None	replace
391	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  odd);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  odd);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  odd);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
392	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    }    	non-compiled	[CE]  ')'  expected	60	None	replace
393	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[values.size()  ]);  [CE]  cannot  find  symbol  values  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[values.size()  ]);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEvaluations().toArray(new  Integer[values.size()  ]);	  Integer[]    evaluations    =    getEvaluations();    	non-compiled	[CE]  cannot  find  symbol  values	66	None	replace
394	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations().values();  [CE]  int  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluations().values();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluations().values();	  Integer    evaluations    =    getEvaluations();    	non-compiled	[CE]  int  cannot  be  dereferenced	65	None	replace
395	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitiator();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitiator();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitiator();	  Integer    evaluations    =    getEvaluations();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
396	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  extendable.computeDerivatives(t,  y,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    extendable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	29	None	replace
397	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    null);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	41	None	replace
398	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	83	None	replace
399	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
400	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expansionable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	28	None	replace
401	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
402	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    evaluations.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
403	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	19	None	replace
404	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
405	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  >  expected	31	None	replace
406	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	34	None	replace
407	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  evaluators  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    expandable);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	39	None	replace
408	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expand  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expand  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expand	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.computeDe    	non-compiled	[CE]  ')'  expected	59	None	replace
409	[BUG]  [BUGGY]  Evaluations.checkState(isLastStep,  t.getModule());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Evaluations.checkState(isLastStep,  t.getModule());  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(isLastStep,  t.getModule());	  Evaluations.checkState(expansions,    t.getModule());    	non-compiled	[CE]  double  cannot  be  dereferenced	98	None	replace
410	[BUG]  [BUGGY]  Integer  evaluations  =  getEvents(t,  y);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvents(t,  y);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvents(t,  y);	  Integer    evaluations    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
411	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	37	None	replace
412	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
413	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	57	None	replace
414	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	36	None	replace
415	[BUG]  [BUGGY]  evaluations.add(new  Integer(yDot,  0));  [CE]  no  suitable  constructor  found  for  Integer(double[],int)  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(yDot,  0));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(yDot,  0));	  evaluations.add(new    Integer(yDot));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],int)	97	None	replace
416	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  '  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  '  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  '	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.compute    	non-compiled	[CE]  ')'  expected	61	None	replace
417	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  >=  	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    evaluations.incrementCount();    expandable.compute    	non-compiled	[CE]  ')'  expected	61	None	replace
418	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  evaluations);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  luateDerivatives(t,  y,  yDot,  evaluations);  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives(t,  y,  yDot,  evaluations);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
419	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	17	None	replace
420	[BUG]  [BUGGY]  evaluations.remove(yDot,  t);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.remove(yDot,  t);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(yDot,  t);	  evaluations.remove(y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
421	[BUG]  [BUGGY]  evaluations.add(new  Integer[0]);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer[0]);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer[0]);	  evaluations.add(new    Integer(0));    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
422	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
423	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
424	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot,  i  +  1);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot,  i  +  1);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot,  i  +  1);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	84	None	replace
425	[BUG]  [BUGGY]  if(evaluators!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(evaluators!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(evaluators!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	100	None	replace
426	[BUG]  [BUGGY]  evaluatesInitialized(t,  y,  yDot);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluatesInitialized(t,  y,  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitialized(t,  y,  yDot);	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
427	[BUG]  [BUGGY]  evaluatesInitialized();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluatesInitialized();  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitialized();	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
428	[BUG]  [BUGGY]  evaluatesInitialized  =  true;  [CE]  cannot  find  symbol  evaluatesInitialized  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluatesInitialized  =  true;  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitialized  =  true;	  evaluatesInitialized.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluatesInitialized	63	None	replace
429	[BUG]  [BUGGY]  evaluate(t,  yDot);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluate(t,  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluate(t,  yDot);	  evaluates.remove(yDot);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
430	[BUG]  [BUGGY]  evaluate().remove(yDot);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluate().remove(yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluate().remove(yDot);	  evaluates.remove(yDot);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
431	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  expandableODE,  yDot));  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y,  expandableODE,  yDot));  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  expandableODE,  yDot));	  evaluations.add(new    Integer(y,    expandable));    	non-compiled	[CE]  cannot  find  symbol  expandableODE	85	None	replace
432	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    null,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	96	None	replace
433	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }	  for(int    y    =    0;    y    <    evaluations.size();    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
434	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  isLastStep);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  isLastStep);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  isLastStep);  }	  for(int    y    =    0;    y    <    evaluations.size();    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
435	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  null);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  null);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  null);  }	  for(int    y    =    0;    y    <    evaluations.size();    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
436	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().getValues();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized().getValues();  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitialized().getValues();	  Integer    evaluations    =    getEvaluationsInitialized();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
437	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	16	None	replace
438	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
439	[BUG]  [BUGGY]  evaluations.add(new  Integer(y),  t,  yDot);  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  evaluations.add(new  Integer(y),  t,  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y),  t,  yDot);	  evaluations.add(new    Integer(y),    t);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	26	None	replace
440	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  -  evaluations.incrementCount());  }  [CE]  'void'  type  not  allowed  here  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  -  evaluations.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  -  evaluations.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  'void'  type  not  allowed  here	99	None	replace
441	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    evaluations.incrementCount());    }    	non-compiled	[CE]  cannot  find  symbol  length	99	None	replace
442	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot  +  1;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot  +  1;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot  +  1;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	9	None	replace
443	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  evaluations);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  evaluations);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  evaluations);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	21	None	replace
444	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]      evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  >  expected	47	None	replace
