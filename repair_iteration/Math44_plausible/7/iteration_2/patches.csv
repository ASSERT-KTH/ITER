bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [CE]  cannot  find  symbol  Lists  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Lists.  <  EventState>emptyList();	  this.eventsStates    =    Collections.    <    EventState>emptyList();    	non-compiled	[CE]  cannot  find  symbol  Lists	31	None	replace
2	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(int,double)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  stepSize);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,double)	53	None	replace
3	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepStart,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(stepStart,  stepSize);	  Incrementor    evaluations    =    new    Incrementor(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	51	None	replace
4	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepSize,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(stepSize,  stepStart);	  Incrementor    evaluations    =    new    Incrementor(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	51	None	replace
5	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(false);  [CE]  no  suitable  constructor  found  for  Incrementor(boolean)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(false);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(false);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor(true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(boolean)	111	None	replace
6	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(true);  [CE]  no  suitable  constructor  found  for  Incrementor(boolean)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(true);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(true);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor(true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(boolean)	111	None	replace
7	[BUG]  [BUGGY]  statesInitialized  =  new  LinkedHashMap  <  String,  EventState>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  LinkedHashMap  <  String,  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  LinkedHashMap  <  String,  EventState>();	  statesInitialized    =    new    HashMap    <    String,    EventState>();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
8	[BUG]  [BUGGY]  stateInitialized  =  new  HashMap  <  String,  EventState>();  [CE]  cannot  find  symbol  stateInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stateInitialized  =  new  HashMap  <  String,  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stateInitialized  =  new  HashMap  <  String,  EventState>();	  statesInitialized    =    new    HashMap    <    String,    EventState>();    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	103	None	replace
9	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	11	None	replace
10	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incompatible  types	11	None	replace
11	[BUG]  [BUGGY]  StatefulStatefulODE  =  false;  [CE]  cannot  find  symbol  StatefulStatefulODE  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulStatefulODE  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulStatefulODE  =  false;	  StatefulStatefulODE    =    true;    	non-compiled	[CE]  cannot  find  symbol  StatefulStatefulODE	102	None	replace
12	[BUG]  [BUGGY]  StatefulStatefulODE  =  null;  [CE]  cannot  find  symbol  StatefulStatefulODE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulStatefulODE  =  null;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulStatefulODE  =  null;	  StatefulStatefulODE    =    true;    	non-compiled	[CE]  cannot  find  symbol  StatefulStatefulODE	102	None	replace
13	[BUG]  [BUGGY]  StatefulStatefulOccurred  =  true;  [CE]  cannot  find  symbol  StatefulStatefulOccurred  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulStatefulOccurred  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulStatefulOccurred  =  true;	  StatefulStatefulODE    =    true;    	non-compiled	[CE]  cannot  find  symbol  StatefulStatefulOccurred	102	None	replace
14	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEvents(eventsStates);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEvents(eventsStates);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEvents(eventsStates);	  Incrementor    evaluations    =    getEvents(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
15	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEvents(null,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEvents(null,  null);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEvents(null,  null);	  Incrementor    evaluations    =    getEvents(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
16	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	109	None	add
17	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	109	None	add
18	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	109	None	add
19	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	109	None	add
20	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  stateStates  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    stateStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  stateStates	109	None	add
21	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	104	None	replace
22	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	104	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  AssertionError  	104	1	replace
24	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  AssertionError  	104	1	replace
25	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  [CE]  cannot  find  symbol  setStatesInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  setStatesInitialized	83	None	replace
26	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  [CE]  cannot  find  symbol  setStatesInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  setStatesInitialized	83	None	replace
27	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  else  {  isLastStep  =  false;  }  [CE]  cannot  find  symbol  setStatesInitialized  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  else  {  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  else  {  isLastStep  =  false;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  setStatesInitialized	83	None	replace
28	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  else  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  else  {  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  else  {	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized    =    true;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
29	[BUG]  [BUGGY]  StatefulODE  =  false;  [CE]  cannot  find  symbol  StatefulODE  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulODE  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulODE  =  false;	  StatesInitialized    =    false;    	non-compiled	[CE]  cannot  find  symbol  StatefulODE	60	None	replace
30	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  stepStart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(name,  stepStart);	  Incrementor    evaluations    =    getEventsStates(name);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
31	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(name.toLowerCase());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(name.toLowerCase());  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(name.toLowerCase());	  Incrementor    evaluations    =    getEventsStates(name);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
32	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(name,  stepSize);	  Incrementor    evaluations    =    getEventsStates(name);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
33	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  stateStates  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  }	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  stateStates	108	None	replace
34	[BUG]  [BUGGY]  stateStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  stateStates  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stateStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stateStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  stateStates	108	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	eventsStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	108	1	replace
36	[BUG]  [BUGGY]  eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	eventsStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	108	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  false;  eventsStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	108	1	replace
38	[BUG]  [BUGGY]  statesInitialized  =  false;  eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  false;  eventsStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	108	1	replace
39	[BUG]  [BUGGY]  StatefulODE  =  null;  [CE]  cannot  find  symbol  StatefulODE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulODE  =  null;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulODE  =  null;	  StatefulODE    =    true;    	non-compiled	[CE]  cannot  find  symbol  StatefulODE	61	None	replace
40	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepSize,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>(stepSize,  stepStart);	  this.eventsStates    =    new    ArrayList    <    EventState>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	7	None	replace
41	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>(stepStart);	  this.eventsStates    =    new    ArrayList    <    EventState>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	7	None	replace
42	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>(stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>(stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>(stepSize);	  this.eventsStates    =    new    ArrayList    <    EventState>(stepSize);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
43	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	add
44	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  setMaxEvaluations(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  setMaxEvaluations(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	add
45	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	add
46	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	add
47	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  isLastStep  =  true;  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Integer  evaluations  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Integer  evaluations  =  new  Incrementor();  isLastStep  =  true;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Integer    evaluations    =    new    Incrementor();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	2	None	replace
48	[BUG]  [BUGGY]  Iterator  <  Integer>  evaluations  =  new  Incrementor();  isLastStep  =  true;  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Iterator  <  Integer>  evaluations  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Iterator  <  Integer>  evaluations  =  new  Incrementor();  isLastStep  =  true;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Integer    evaluations    =    new    Incrementor();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	2	None	replace
49	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        isLastStep        =        true;        Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
50	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  [CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        isLastStep        =        true;        Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;	  	non-compiled	[CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
51	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Integer  evaluations  =  new  Incrementor();  isLastStep  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Integer  evaluations  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        isLastStep        =        true;        Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    Integer  evaluations  =  new  Incrementor();  isLastStep  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
52	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        isLastStep        =        true;        Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
53	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        isLastStep        =        true;        Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
55	[BUG]  [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
56	[BUG]  [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  not  a  statement	67	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
58	[BUG]  [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
59	[BUG]  [BUGGY]  statesInitialized  =  isLastStep  +  stepSize;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep  +  stepSize;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  isLastStep  +  stepSize;	  statesInitialized    =    isLastStep;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	91	None	replace
60	[BUG]  [BUGGY]  statesInitialized  =  isLastStep  +  stepStart;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep  +  stepStart;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  isLastStep  +  stepStart;	  statesInitialized    =    isLastStep;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	91	None	replace
61	[BUG]  [BUGGY]  statesInitialized  =  isFirstStep;  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isFirstStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  isFirstStep;	  statesInitialized    =    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	91	None	replace
62	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
63	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
64	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	10	None	add
65	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
66	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	10	None	add
67	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  false;  [CE]  cannot  find  symbol  isFirstStep  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  false;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	76	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	76	1	replace
69	[BUG]  [BUGGY]  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	76	1	replace
70	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsInitializer(name);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsInitializer(name);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsInitializer(name);	  Incrementor    evaluations    =    getEventsInitializer();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
71	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStatesInitializer();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStatesInitializer();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStatesInitializer();	  Incrementor    evaluations    =    getEventsInitializer();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
72	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Integer  evaluations  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Integer  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	17	None	replace
73	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Integrator  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
74	[BUG]  [BUGGY]  null  evaluations  =  new  Incrementor();  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  null  evaluations  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	null  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  not  a  statement	17	None	replace
75	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  INCrementor();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  INCrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  INCrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
76	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	84	None	replace
77	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	84	None	replace
78	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  isLastStep  =  true;  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  isLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  isLastStep  =  true;  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	84	None	replace
79	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
80	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
81	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
82	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
83	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	72	None	add
84	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    Collection  <  EventState>  eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
85	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  Collection  <  EventState>  eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    Collection  <  EventState>  eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
86	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
87	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
88	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  This  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  This.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    This.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  cannot  find  symbol  This	28	None	add
89	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
90	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
91	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  false;	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
92	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  false;  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  false;	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
93	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newArrayList  <  EventState>(stepSize);  [CE]  cannot  find  symbol  Lists  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Lists.newArrayList  <  EventState>(stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Lists.newArrayList  <  EventState>(stepSize);	  this.eventsStates    =    Lists.newArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  Lists	65	None	replace
94	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newLinkedList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Lists.newLinkedList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Lists.newLinkedList  <  EventState>();	  this.eventsStates    =    Lists.newArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
95	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized(true);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
96	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(false);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(false);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(false);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized(true);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
97	[BUG]  [BUGGY]  Integer  evaluations  =  new  Incrementor();  setStatesInitialized(true);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Integer  evaluations  =  new  Incrementor();  setStatesInitialized(true);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Integer  evaluations  =  new  Incrementor();  setStatesInitialized(true);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized(true);    	non-compiled	[CE]  incompatible  types	82	None	replace
98	[BUG]  [BUGGY]  EventStatement  evaluations  =  new  Incrementor();  setStatesInitialized(true);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  EventStatement  evaluations  =  new  Incrementor();  setStatesInitialized(true);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	EventStatement  evaluations  =  new  Incrementor();  setStatesInitialized(true);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized(true);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
99	[BUG]  [BUGGY]  Integrator  evaluations  =  new  Incrementor();  isLastStep  =  true;  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Integrator  evaluations  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Integrator  evaluations  =  new  Incrementor();  isLastStep  =  true;	  if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
100	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.EMPTYList();	          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
101	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  stepSize);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double)	54	None	replace
102	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(String,double)  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  stepStart);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,double)	54	None	replace
103	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);  [CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  isLastStep);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,boolean)	54	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  statesInitialized  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized    =    isLastStep;    statesInitialized  =  isLastStep;	  	compilable	  [FE]  AssertionError  	90	1	add
105	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  statesInitialized  =  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  statesInitialized  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    statesInitialized  =  isLastStep;	  	compilable	  [FE]  AssertionError  	90	1	add
106	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  stateStatesInitialized  =  isLastStep;  [CE]  cannot  find  symbol  stateStatesInitialized  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  stateStatesInitialized  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    stateStatesInitialized  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  stateStatesInitialized	90	None	add
107	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  isInitialized  =  isLastStep;  [CE]  cannot  find  symbol  isInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  isInitialized  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    isInitialized  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  isInitialized	90	None	add
108	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  stateStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  stateStates  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  stateStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    stateStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  stateStates	90	None	add
109	[BUG]  [BUGGY]  phaseInitialized  =  false;  [CE]  cannot  find  symbol  phaseInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  phaseInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	phaseInitialized  =  false;	  stateInitialized    =    false;    	non-compiled	[CE]  cannot  find  symbol  phaseInitialized	55	None	replace
110	[BUG]  [BUGGY]  stepSize  =  false;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepSize  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepSize  =  false;	  stateInitialized    =    false;    	non-compiled	[CE]  incompatible  types	55	None	replace
111	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	13	None	replace
112	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incompatible  types	13	None	replace
113	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
114	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
115	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
116	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	34	None	add
117	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	46	1	add
119	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	46	1	add
120	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }	  	non-compiled	[CE]  ';'  expected	46	None	add
121	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  if(isFirstStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  if(isFirstStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    if(isFirstStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	46	None	add
122	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	79	1	replace
123	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	79	1	replace
124	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	79	1	replace
125	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(-1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	79	1	replace
126	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	79	1	replace
127	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  else  {  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  NullPointerException  	79	1	replace
128	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  IllegalArgumentException  	9	1	replace
129	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  IllegalArgumentException  	9	1	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  statesInitialized  =  true;  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        statesInitialized    =    true;    statesInitialized  =  true;  statesInitialized  =  true;	  	compilable	  [FE]  AssertionError  	21	1	add
131	[BUG]  [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  statesInitialized  =  true;  statesInitialized  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  statesInitialized  =  true;  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        statesInitialized    =    true;    statesInitialized  =  true;  statesInitialized  =  true;	  	compilable	  [FE]  AssertionError  	21	1	add
132	[BUG]  [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  statesInitialized  =  true;  statesInitialized  =  true;  [CE]  cannot  find  symbol  stateStates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  statesInitialized  =  true;  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        statesInitialized    =    true;    stateStates  =  new  ArrayList  <  EventState>();  statesInitialized  =  true;  statesInitialized  =  true;	  	non-compiled	[CE]  cannot  find  symbol  stateStates	21	None	add
133	[BUG]  [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateStatesInitialized  =  true;  statesInitialized  =  true;  [CE]  cannot  find  symbol  stateStatesInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateStatesInitialized  =  true;  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        statesInitialized    =    true;    stateStatesInitialized  =  true;  statesInitialized  =  true;	  	non-compiled	[CE]  cannot  find  symbol  stateStatesInitialized	21	None	add
134	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	70	1	add
135	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	70	1	add
136	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
137	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
138	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	70	None	add
139	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  This.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  This  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  This.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    This.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  cannot  find  symbol  This	70	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  assessments  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	88	1	replace
141	[BUG]  [BUGGY]  Incrementor  assessments  =  new  Incrementor();  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  assessments  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	88	1	replace
142	[BUG]  [BUGGY]  INCrementor  evaluations  =  new  Incrementor();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  INCrementor  evaluations  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	INCrementor  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    INCrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
143	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(eventsStates);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(eventsStates);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(eventsStates);	  Incrementor    evaluations    =    getEventsStates(null);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
144	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(null,  null);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(null,  null);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(null,  null);	  Incrementor    evaluations    =    getEventsStates(null);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
145	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(null,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(null,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(null,  stepSize);	  Incrementor    evaluations    =    getEventsStates(null);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
146	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  true;  [CE]  cannot  find  symbol  ISLastStep  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  true;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    ISLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  ISLastStep	4	None	replace
147	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  false;  [CE]  cannot  find  symbol  ISLastStep  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  false;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    ISLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  ISLastStep	4	None	replace
148	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	99	1	add
149	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	99	1	add
150	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	99	1	add
151	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	99	1	add
152	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
153	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  This  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  cannot  find  symbol  This	99	None	add
154	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
155	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
156	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isFirstStep)  {  eventsStates  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  isFirstStep  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isFirstStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.emptyList();  if(isFirstStep)  {  eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	100	None	replace
157	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.EMPTYList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	isLastStep  =  false;	  statesInitialized    =    true;    if(isLastStep)    {    statesInitialized    =    true;    }    	compilable	  [FE]  AssertionError  	25	1	replace
159	[BUG]  [BUGGY]  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	isLastStep  =  false;	  statesInitialized    =    true;    if(isLastStep)    {    statesInitialized    =    true;    }    	compilable	  [FE]  AssertionError  	25	1	replace
160	[BUG]  [BUGGY]  This.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  This.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	This.eventsStates  =  Collections.emptyList();	          this.eventsStates    =    Collections.emptyList();    This.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  This	69	None	replace
161	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepSize,  this.stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepSize,  this.stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(this.stepSize,  this.stepStart);	  Incrementor    evaluations    =    new    Incrementor(this.stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	93	None	replace
162	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepSize,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(this.stepSize,  stepStart);	  Incrementor    evaluations    =    new    Incrementor(this.stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	93	None	replace
163	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepSize,  this.stepStart);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(stepSize,  this.stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(stepSize,  this.stepStart);	  Incrementor    evaluations    =    new    Incrementor(this.stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	93	None	replace
164	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepStart,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(this.stepStart,  stepSize);	  Incrementor    evaluations    =    new    Incrementor(this.stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	93	None	replace
165	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    if(isLastStep)  {  statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }	  	compilable	  [FE]  AssertionError  	24	1	add
167	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    statesInitialized  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }	  	compilable	  [FE]  AssertionError  	24	1	add
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  isLastStep  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    isLastStep  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }	  	compilable	  [FE]  AssertionError  	24	1	add
169	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  isLastStep  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  isLastStep  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    isLastStep  =  true;  if(isLastStep)  {  statesInitialized  =  true;  }	  	compilable	  [FE]  AssertionError  	24	1	add
170	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  if(isFirstStep)  {  statesInitialized  =  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  if(isFirstStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    if(isLastStep)  {  statesInitialized  =  true;  if(isFirstStep)  {  statesInitialized  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
171	[BUG]  [BUGGY]  statesInitialized  =  new  LinkedList  <  EventState>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  LinkedList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  LinkedList  <  EventState>();	  statesInitialized    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
172	[BUG]  [BUGGY]  statesInitialized  =  new  LinkedHashSet  <  EventState>();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  LinkedHashSet  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  LinkedHashSet  <  EventState>();	  statesInitialized    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
173	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	97	1	add
174	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	97	1	add
175	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	97	None	add
176	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	97	None	add
177	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  these.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  these  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  these.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    these.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  these	97	None	add
178	[BUG]  [BUGGY]  stepInitialized  =  false;  [CE]  cannot  find  symbol  stepInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepInitialized  =  false;	  stepInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  stepInitialized	101	None	replace
179	[BUG]  [BUGGY]  stepInitialization  =  true;  [CE]  cannot  find  symbol  stepInitialization  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepInitialization  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepInitialization  =  true;	  stepInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  stepInitialization	101	None	replace
180	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepStart);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,double)  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepStart);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,double)	94	None	replace
181	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  this.eventsStates);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Collection<EventState>)  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  this.eventsStates);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  this.eventsStates);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Collection<EventState>)	94	None	replace
182	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepSize);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,double)  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  stepSize);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<EventState>,double)	94	None	replace
183	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(stepHandlers,  this.eventsStates);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Collection<EventState>)  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(stepHandlers,  this.eventsStates);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.synchronizedList(stepHandlers,  this.eventsStates);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,Collection<EventState>)	94	None	replace
184	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  true;  [CE]  cannot  find  symbol  hasLastStep  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  true;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	5	None	replace
185	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  false;  [CE]  cannot  find  symbol  hasLastStep  [FE]                  NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  false;	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	5	None	replace
186	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol  This	14	None	replace
187	[BUG]  [BUGGY]  stepSize  =  null;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepSize  =  null;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepSize  =  null;	  stepSize    =    true;    	non-compiled	[CE]  incompatible  types	56	None	replace
188	[BUG]  [BUGGY]  stepSize  =  new  double[stepStart];  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepSize  =  new  double[stepStart];  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepSize  =  new  double[stepStart];	  stepSize    =    true;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }	  Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	45	1	replace
190	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }	  Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	45	1	replace
191	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	36	1	add
192	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	36	1	add
193	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
194	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
195	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates!=  null)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
196	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	36	None	add
197	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-2);    }    	compilable	  [FE]  NullPointerException  	19	1	replace
198	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-2);    }    	compilable	  [FE]  NullPointerException  	19	1	replace
199	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-2);    }    	compilable	  [FE]  NullPointerException  	19	1	replace
200	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-2);    }    	compilable	  [FE]  NullPointerException  	19	1	replace
201	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-2);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
202	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
203	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	110	1	replace
205	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	110	1	replace
206	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(-1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
207	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(-1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
208	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
209	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  else  {  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
210	[BUG]  [BUGGY]  stateInitialized  =  false;  statesInitialized  =  false;  [CE]  cannot  find  symbol  stateInitialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stateInitialized  =  false;  statesInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stateInitialized  =  false;  statesInitialized  =  false;	  statesInitialized    =    true;    statesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	22	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  false;  statesInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	isLastStep  =  false;  statesInitialized  =  false;	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
212	[BUG]  [BUGGY]  isLastStep  =  false;  statesInitialized  =  false;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  false;  statesInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	isLastStep  =  false;  statesInitialized  =  false;	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
213	[BUG]  [BUGGY]  this.eventsStates  =  Collections.newLinkedList();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.newLinkedList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.newLinkedList();	  this.eventsStates    =    Lists.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
214	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	78	None	add
215	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	78	None	add
216	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	78	None	add
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	26	1	add
218	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	26	1	add
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(isLastStep)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    if(isLastStep)  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	26	1	add
220	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(isLastStep)  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(isLastStep)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    if(isLastStep)  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	26	1	add
221	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(statesInitialized)  {  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(statesInitialized)  {  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    if(statesInitialized)  {  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
222	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(statesInitialized)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    if(statesInitialized)  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	26	1	add
223	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(statesInitialized)  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  if(statesInitialized)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    if(statesInitialized)  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	26	1	add
224	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	26	1	add
225	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	26	1	add
226	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(0);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(0);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
227	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
228	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(2);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(2);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
229	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0);  Incrementor  evaluations  =  new  Incrementor(-1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor(0);    Incrementor  evaluations  =  new  Incrementor(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
230	[BUG]  [BUGGY]  statesInitialized  =  new  Integer(stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  Integer(stepSize);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  Integer(stepSize);	  statesInitialized    =    new    Integer(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	64	None	replace
231	[BUG]  [BUGGY]  statesInitialized  =  new  Integer(1);  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  Integer(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  Integer(1);	  statesInitialized    =    new    Integer(0);    	non-compiled	[CE]  incompatible  types	64	None	replace
232	[BUG]  [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  [CE]  unexpected  type  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	null  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  unexpected  type	68	None	replace
233	[BUG]  [BUGGY]  this.reventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  reventsStates  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.reventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.reventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  reventsStates	68	None	replace
234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(5);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates  =  new  ArrayList  <  EventState>(5);	  this.eventsStates    =    new    ArrayList    <    EventState>(4);    	compilable	  [FE]  AssertionError  	107	1	replace
235	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(5);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(5);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>(5);	  this.eventsStates    =    new    ArrayList    <    EventState>(4);    	compilable	  [FE]  AssertionError  	107	1	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates  =  new  ArrayList  <  EventState>(1);	  this.eventsStates    =    new    ArrayList    <    EventState>(4);    	compilable	  [FE]  AssertionError  	107	1	replace
237	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>(1);	  this.eventsStates    =    new    ArrayList    <    EventState>(4);    	compilable	  [FE]  AssertionError  	107	1	replace
238	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStatesInitialized();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStatesInitialized();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStatesInitialized();	  Incrementor    evaluations    =    getEventsInitialized();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
239	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsInitialized(),  stepSize);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsInitialized(),  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsInitialized(),  stepSize);	  Incrementor    evaluations    =    getEventsInitialized();    	non-compiled	[CE]  ';'  expected	57	None	replace
240	[BUG]  [BUGGY]  phaseInitialization  =  true;  [CE]  cannot  find  symbol  phaseInitialization  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  phaseInitialization  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	phaseInitialization  =  true;	  phaseInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  phaseInitialization	89	None	replace
241	[BUG]  [BUGGY]  phaseInitialization  =  false;  [CE]  cannot  find  symbol  phaseInitialization  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  phaseInitialization  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	phaseInitialization  =  false;	  phaseInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  phaseInitialization	89	None	replace
242	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(false,  stepStart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(false,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(false,  stepStart);	  Incrementor    evaluations    =    getEventsStates(false);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
243	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(false,  stepSize);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(false,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(false,  stepSize);	  Incrementor    evaluations    =    getEventsStates(false);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
244	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	6	1	replace
245	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [FE]  ClassCastException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	6	1	replace
246	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
247	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	81	1	replace
249	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	81	1	replace
250	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
251	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	81	1	replace
253	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  AssertionError  	81	1	replace
254	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	95	1	add
255	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	95	1	add
256	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	95	1	add
257	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	95	1	add
258	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
259	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	95	None	add
260	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  This  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	  	non-compiled	[CE]  cannot  find  symbol  This	95	None	add
261	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
262	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
263	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
264	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
265	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
266	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
267	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
268	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()  [CE]  ';'  expected  [FE]            UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    if(eventsStates  ==  Collections.  <  EventState>emptyList())  {  this.eventsStates  =  Collections.  <  EventState>emptyList();  }  else  {  this.eventsStates  =  Collections.  <  EventState>emptyList()	  	non-compiled	[CE]  ';'  expected	30	None	add
269	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	20	1	replace
270	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(0);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	20	1	replace
271	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	20	1	replace
272	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	20	1	replace
273	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(true,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(true,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(true,  stepSize);	  Incrementor    evaluations    =    getEventsStates(true);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
274	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  false;  isLastStep  =  false;	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
276	[BUG]  [BUGGY]  statesInitialized  =  false;  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  isLastStep  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  false;  isLastStep  =  false;	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
277	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	isLastStep  =  true;	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
278	[BUG]  [BUGGY]  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	isLastStep  =  true;	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
279	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
280	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	12	1	add
282	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	12	1	add
283	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	12	None	add
284	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	12	None	add
285	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	44	None	add
286	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Integer  evaluations  =  new  Incrementor();  isLastStep  =  false;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Integer  evaluations  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Integer  evaluations  =  new  Incrementor();  isLastStep  =  false;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	44	None	add
287	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Integrator  evaluations  =  new  Incrementor();  isLastStep  =  false;  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Integrator  evaluations  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Integrator  evaluations  =  new  Incrementor();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
288	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  INCrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  INCrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    INCrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
289	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;	  	compilable	  [FE]  NullPointerException  	44	1	add
290	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  false;	  	compilable	  [FE]  NullPointerException  	44	1	add
291	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEvents(name,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEvents(name,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEvents(name,  stepSize);	  Incrementor    evaluations    =    getEvents(name);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
292	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEvents(name,  stepStart);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEvents(name,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEvents(name,  stepStart);	  Incrementor    evaluations    =    getEvents(name);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
293	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEvents(name,  isLastStep);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEvents(name,  isLastStep);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEvents(name,  isLastStep);	  Incrementor    evaluations    =    getEvents(name);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
294	[BUG]  [BUGGY]  this.eventsStates  =  Collections.newHashSet();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.newHashSet();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.newHashSet();	  this.eventsStates    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
295	[BUG]  [BUGGY]  stateStatesInitialized  =  true;  [CE]  cannot  find  symbol  stateStatesInitialized  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stateStatesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stateStatesInitialized  =  true;	  statesInitialized    =    true;    stateStatesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  stateStatesInitialized	23	None	replace
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	isLastStep  =  true;  isLastStep  =  true;	  statesInitialized    =    true;    stateStatesInitialized    =    true;    	compilable	  [FE]  AssertionError  	23	1	replace
297	[BUG]  [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	isLastStep  =  true;  isLastStep  =  true;	  statesInitialized    =    true;    stateStatesInitialized    =    true;    	compilable	  [FE]  AssertionError  	23	1	replace
298	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  true;  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  true;  isLastStep  =  true;	  statesInitialized    =    true;    stateStatesInitialized    =    true;    	compilable	  [FE]  AssertionError  	23	1	replace
299	[BUG]  [BUGGY]  statesInitialized  =  true;  isLastStep  =  true;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  true;  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  true;  isLastStep  =  true;	  statesInitialized    =    true;    stateStatesInitialized    =    true;    	compilable	  [FE]  AssertionError  	23	1	replace
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(4);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    new    ArrayList    <    EventState>(4);    this.eventsStates  =  new  ArrayList  <  EventState>(4);	  	compilable	  [FE]  AssertionError  	106	1	add
301	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(4);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>(4);    this.eventsStates  =  new  ArrayList  <  EventState>(4);	  	compilable	  [FE]  AssertionError  	106	1	add
302	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  This.eventsStates  =  new  ArrayList  <  EventState>(4);  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  This.eventsStates  =  new  ArrayList  <  EventState>(4);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>(4);    This.eventsStates  =  new  ArrayList  <  EventState>(4);	  	non-compiled	[CE]  cannot  find  symbol  This	106	None	add
303	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  these.eventsStates  =  new  ArrayList  <  EventState>(4);  [CE]  cannot  find  symbol  these  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  these.eventsStates  =  new  ArrayList  <  EventState>(4);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>(4);    these.eventsStates  =  new  ArrayList  <  EventState>(4);	  	non-compiled	[CE]  cannot  find  symbol  these	106	None	add
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(5);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    new    ArrayList    <    EventState>(4);    this.eventsStates  =  new  ArrayList  <  EventState>(5);	  	compilable	  [FE]  AssertionError  	106	1	add
305	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(5);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(5);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>(4);    this.eventsStates  =  new  ArrayList  <  EventState>(5);	  	compilable	  [FE]  AssertionError  	106	1	add
306	[BUG]  [BUGGY]  int  evaluations  =  new  Incrementor();  isLastStep  =  false;  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  int  evaluations  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	int  evaluations  =  new  Incrementor();  isLastStep  =  false;	  Integer    evaluations    =    new    Incrementor();    isLastStep    =    false;    	non-compiled	[CE]  incompatible  types	48	None	replace
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	8	1	add
308	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	8	1	add
309	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	8	None	add
310	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  '('  or  '['  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  '('  or  '['  expected	8	None	add
311	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>(;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>(;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>(;	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
312	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	32	1	add
313	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	32	1	add
314	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
315	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	32	None	add
316	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
317	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setSize(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setSize(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setSize(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
318	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
319	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setSizeEvaluations(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setSizeEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setSizeEvaluations(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
320	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStandardEvents(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStandardEvents(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStandardEvents(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
321	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
322	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
323	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
324	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
325	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    If(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  ';'  expected	49	None	add
326	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
327	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
328	[BUG]  [BUGGY]  int  evaluations  =  new  Incrementor();  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  int  evaluations  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	int  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Integer    evaluations    =    new    Incrementor();    	non-compiled	[CE]  incompatible  types	85	None	replace
329	[BUG]  [BUGGY]  Iterator  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Iterator  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Iterator  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incompatible  types	66	None	replace
330	[BUG]  [BUGGY]  statesInitialized  =  new  LinkedList  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  LinkedList  <  Incrementor>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  LinkedList  <  Incrementor>();	  statesInitialized    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
331	[BUG]  [BUGGY]  statesInitialized  =  new  LinkedHashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  LinkedHashSet  <  Incrementor>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  LinkedHashSet  <  Incrementor>();	  statesInitialized    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
332	[BUG]  [BUGGY]  statesInitialized  =  new  ArrayList  <  String,  EventState>();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  ArrayList  <  String,  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  ArrayList  <  String,  EventState>();	  statesInitialized    =    new    HashMap    <    String,    EventState>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	103	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
334	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
335	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
336	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	67	1	replace
337	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	84	None	replace
338	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  INCrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
339	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(null,  stepStart);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(null,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(null,  stepStart);	  Incrementor    evaluations    =    getEventsStates(null);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
340	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(this);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(this);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(this);	  Incrementor    evaluations    =    getEventsStates(null);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
341	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  stepSize);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,double)  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepHandlers,  stepSize);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>,double)	94	None	replace
342	[BUG]  [BUGGY]  progressInitialized  =  false;  [CE]  cannot  find  symbol  progressInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  progressInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	progressInitialized  =  false;	  stateInitialized    =    false;    	non-compiled	[CE]  cannot  find  symbol  progressInitialized	55	None	replace
343	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  EventState>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.stepHandlers  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incompatible  types	13	None	replace
344	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	17	None	replace
345	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
346	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  else  {  return  null;  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  else  {  return  null;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  }  else  {  return  null;  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	17	None	replace
347	[BUG]  [BUGGY]  statesInitialized  =  false;  stateStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  stateStates  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  stateStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  false;  stateStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  stateStates	108	None	replace
348	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
349	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
350	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
351	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
352	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  isLastStep  =  false;  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
353	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  isLastStep  =  false;  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
354	[BUG]  [BUGGY]  statesInitialized  =  new  java.util.ArrayList  <  Incrementor>();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  java.util.ArrayList  <  Incrementor>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  java.util.ArrayList  <  Incrementor>();	  statesInitialized    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  incompatible  types	92	None	replace
355	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  expansionable);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(name,  expansionable);	  Incrementor    evaluations    =    getEventsStates(name);    	non-compiled	[CE]  cannot  find  symbol  expansionable	105	None	replace
356	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  assessments  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	add
357	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Integer  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Integer  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Integer  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	add
358	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    Incrementor  assessments  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        Incrementor    assessments    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  Incrementor  appraisals  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	87	None	add
359	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
360	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	36	None	add
361	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	36	None	add
362	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setStates(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setStates(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor  evaluations  =  new  Incrementor();  setStates(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
363	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setStandardEvents(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setStandardEvents(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor  evaluations  =  new  Incrementor();  setStandardEvents(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
364	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setEventsStates(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setEventsStates(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor  evaluations  =  new  Incrementor();  setEventsStates(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
365	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
366	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;	  	compilable	  [FE]  NullPointerException  	80	1	add
367	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;	  	compilable	  [FE]  NullPointerException  	80	1	add
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(3);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    new    ArrayList    <    EventState>(4);    this.eventsStates  =  new  ArrayList  <  EventState>(3);	  	compilable	  [FE]  AssertionError  	106	1	add
369	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(3);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(4);  this.eventsStates  =  new  ArrayList  <  EventState>(3);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    new    ArrayList    <    EventState>(4);    this.eventsStates  =  new  ArrayList  <  EventState>(3);	  	compilable	  [FE]  AssertionError  	106	1	add
370	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepSize  +  stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepSize  +  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>(stepSize  +  stepStart);	  this.eventsStates    =    new    ArrayList    <    EventState>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	7	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  }	  statesInitialized    =    true;    if(isLastStep)    {    statesInitialized    =    true;    }    	compilable	  [FE]  AssertionError  	25	1	replace
372	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  }	  statesInitialized    =    true;    if(isLastStep)    {    statesInitialized    =    true;    }    	compilable	  [FE]  AssertionError  	25	1	replace
373	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
374	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(-1);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setSize(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setSize(-1);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
375	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEventStates(-1);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEventStates(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setEventStates(-1);	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	88	1	replace
377	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	88	1	replace
378	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	88	1	replace
379	[BUG]  [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	88	1	replace
380	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  IllegalArgumentException  	88	1	replace
381	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  Incrementor  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	compilable	  [FE]  IllegalArgumentException  	88	1	replace
382	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeList  <  EventsState>();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  TreeList  <  EventsState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  TreeList  <  EventsState>();	  this.eventsStates    =    new    TreeSet    <    EventsState>();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
383	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEvents(null,  stepStart);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEvents(null,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEvents(null,  stepStart);	  Incrementor    evaluations    =    getEvents(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
384	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEvents(null,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEvents(null,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEvents(null,  stepSize);	  Incrementor    evaluations    =    getEvents(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep  &&  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  isLastStep  &&  isLastStep;	  statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	91	1	replace
386	[BUG]  [BUGGY]  statesInitialized  =  isLastStep  &&  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep  &&  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  isLastStep  &&  isLastStep;	  statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	91	1	replace
387	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized(true);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
388	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  else  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  else  {  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  else  {	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized(true);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
389	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	34	1	add
390	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	34	1	add
391	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
392	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
393	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsInitialization();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsInitialization();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsInitialization();	  Incrementor    evaluations    =    getEventsInitialized();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
394	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	68	None	replace
395	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	68	None	replace
396	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
397	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
398	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
399	[BUG]  [BUGGY]  StatesInitialized  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  StatesInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatesInitialized  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatesInitialized  =  new  ArrayList  <  EventState>();	  statesInitialized    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  StatesInitialized	62	None	replace
400	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isFirstStep)  {  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  isFirstStep  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isFirstStep)  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  if(isFirstStep)  {  setMaxEvaluations(-1);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	18	None	replace
401	[BUG]  [BUGGY]  statesInitialized  =  new  Integer(stepStart);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  Integer(stepStart);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  Integer(stepStart);	  statesInitialized    =    new    Integer(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	64	None	replace
402	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  stepsStates  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  stepsStates	32	None	add
403	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  stepStates  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.stepStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  stepStates	32	None	add
404	[BUG]  [BUGGY]  StatefulODE  =  isLastStep;  [CE]  cannot  find  symbol  StatefulODE  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulODE  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulODE  =  isLastStep;	  StatefulODE    =    true;    	non-compiled	[CE]  cannot  find  symbol  StatefulODE	61	None	replace
405	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  expandable);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(String,ExpandableStatefulODE)	54	None	replace
406	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expansionable);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  expansionable);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  cannot  find  symbol  expansionable	54	None	replace
407	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  stateInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [CE]  cannot  find  symbol  stateInitialized  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  stateInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    stateInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();	  	non-compiled	[CE]  cannot  find  symbol  stateInitialized	78	None	add
408	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	78	None	add
409	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	78	None	add
410	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	71	1	replace
411	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	71	1	replace
412	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	10	1	add
413	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	10	1	add
414	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMinEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
415	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(-1);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setEvents(-1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  setEvents(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
416	[BUG]  [BUGGY]  StatefulStatefulODE  =  true,  isLastStep;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulStatefulODE  =  true,  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulStatefulODE  =  true,  isLastStep;	  StatefulStatefulODE    =    true;    	non-compiled	[CE]  ';'  expected	102	None	replace
417	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST.newArrayList();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST.newArrayList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.EMPTY_LIST.newArrayList();	  this.eventsStates    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
418	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  This  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  This.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    This.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	30	None	add
419	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Arrays.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  Arrays  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Arrays.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    Arrays.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  cannot  find  symbol  Arrays	30	None	add
420	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.    <    EventState>emptyList();    Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
421	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    Collections.  <  EventState>emptyList();  this.eventsStates  =  Collections.  <  EventState>emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	30	1	add
422	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  AssertionError  	104	1	replace
423	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    List    <    EventState>();    	compilable	  [FE]  AssertionError  	104	1	replace
424	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	9	None	replace
425	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	9	None	replace
426	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	9	None	replace
427	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList()	  	non-compiled	[CE]  ';'  expected	99	None	add
428	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	99	1	add
429	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	99	1	add
430	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	95	1	add
431	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	95	1	add
432	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(double)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(this.stepSize);	  Incrementor    evaluations    =    new    Incrementor(this.stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double)	93	None	replace
433	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
434	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
435	[BUG]  [BUGGY]  this.eventsStates  =  Collections.newArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.newArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.newArrayList  <  EventState>();	  this.eventsStates    =    Lists.newArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
436	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	110	1	replace
437	[BUG]  [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	110	1	replace
438	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();This.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();This.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();This.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	97	None	add
439	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(3);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates  =  new  ArrayList  <  EventState>(3);	  this.eventsStates    =    new    ArrayList    <    EventState>(4);    	compilable	  [FE]  AssertionError  	107	1	replace
440	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(3);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(3);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>(3);	  this.eventsStates    =    new    ArrayList    <    EventState>(4);    	compilable	  [FE]  AssertionError  	107	1	replace
441	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  ISLastStep  =  true;  }  [CE]  cannot  find  symbol  ISLastStep  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  ISLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  ISLastStep  =  true;  }	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    ISLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  ISLastStep	4	None	replace
442	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
443	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  incompatible  types	14	None	replace
444	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  incompatible  types	14	None	replace
445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  if(isLastStep)  {  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  false;  if(isLastStep)  {  isLastStep  =  false;  }	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
446	[BUG]  [BUGGY]  statesInitialized  =  false;  if(isLastStep)  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  if(isLastStep)  {  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  false;  if(isLastStep)  {  isLastStep  =  false;  }	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
447	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  if(!isLastStep)  {  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  false;  if(!isLastStep)  {  isLastStep  =  false;  }	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
448	[BUG]  [BUGGY]  statesInitialized  =  false;  if(!isLastStep)  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  if(!isLastStep)  {  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  false;  if(!isLastStep)  {  isLastStep  =  false;  }	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
449	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	26	1	add
450	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	26	1	add
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	26	1	add
452	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	26	1	add
453	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  isLastStep  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized    =    isLastStep;    isLastStep  =  isLastStep;	  	compilable	  [FE]  AssertionError  	90	1	add
454	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  isLastStep  =  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  isLastStep  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    isLastStep  =  isLastStep;	  	compilable	  [FE]  AssertionError  	90	1	add
455	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized    =    isLastStep;    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	90	1	add
456	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  evaluations  =  new  Incrementor();  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	90	1	add
457	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized    =    isLastStep;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	90	1	add
458	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	90	1	add
459	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  isLastStep  =  expandable.isLastStep();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  Incrementor  isLastStep  =  expandable.isLastStep();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    Incrementor  isLastStep  =  expandable.isLastStep();	  	non-compiled	[CE]  cannot  find  symbol	90	None	add
460	[BUG]  [BUGGY]  phaseInitializer  =  true;  [CE]  cannot  find  symbol  phaseInitializer  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  phaseInitializer  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	phaseInitializer  =  true;	  phaseInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  phaseInitializer	89	None	replace
461	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isFirstStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [CE]  cannot  find  symbol  isFirstStep  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isFirstStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isFirstStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	49	None	add
462	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
463	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  setMaxEvaluations(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  setMaxEvaluations(-1);  }	  	compilable	  [FE]  NullPointerException  	49	1	add
464	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  not  a  statement	8	None	add
465	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.exprStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  exprStates  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.exprStates  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.exprStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  exprStates	8	None	add
466	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
467	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
468	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluates  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Incrementor  evaluates  =  new  Incrementor();  isLastStep  =  false;	  	compilable	  [FE]  NullPointerException  	44	1	add
469	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluates  =  new  Incrementor();  isLastStep  =  false;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluates  =  new  Incrementor();  isLastStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Incrementor  evaluates  =  new  Incrementor();  isLastStep  =  false;	  	compilable	  [FE]  NullPointerException  	44	1	add
470	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  false;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Incrementor  evaluations  =  new  Incrementor();  isFirstStep  =  false;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	44	None	add
471	[BUG]  [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor  assessments  =  new  Incrementor();  isLastStep  =  true;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                Incrementor        evaluations        =        new        Incrementor();        isLastStep        =        true;        Incrementor    assessments    =    new    Incrementor();    isLastStep    =    true;    Incrementor  evaluations  =  new  Incrementor();	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
472	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	79	1	replace
473	[BUG]  [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    	compilable	  [FE]  AssertionError  	79	1	replace
474	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  This	66	None	replace
475	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  These.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  cannot  find  symbol  These  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  These.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  These.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  These	66	None	replace
476	[BUG]  [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  [CE]  cannot  find  symbol  setStatesInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  setStatesInitialized	83	None	replace
477	[BUG]  [BUGGY]  if(hasErrors)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  [CE]  cannot  find  symbol  hasErrors  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(hasErrors)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(hasErrors)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasErrors	83	None	replace
478	[BUG]  [BUGGY]  statesInitialized  =  false;  stateStatesInitialized  =  true;  [CE]  cannot  find  symbol  stateStatesInitialized  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  stateStatesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  false;  stateStatesInitialized  =  true;	  statesInitialized    =    true;    stateStatesInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  stateStatesInitialized	23	None	replace
479	[BUG]  [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  stateStates  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        statesInitialized    =    true;    stateStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  stateStates	21	None	add
480	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	21	1	add
481	[BUG]  [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	21	1	add
482	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	21	1	add
483	[BUG]  [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	21	1	add
484	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepSize  =  Double.NaN;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	stepSize  =  Double.NaN;	  stepSize    =    true;    	compilable	  [FE]  AssertionError  	56	1	replace
485	[BUG]  [BUGGY]  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepSize  =  Double.NaN;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepSize  =  Double.NaN;	  stepSize    =    true;    	compilable	  [FE]  AssertionError  	56	1	replace
486	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    Collections.EMPTY_LIST;  this.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  not  a  statement	28	None	add
487	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	24	1	add
488	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    Incrementor  evaluations  =  new  Incrementor();	  	compilable	  [FE]  NullPointerException  	24	1	add
489	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	24	1	add
490	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	compilable	  [FE]  NullPointerException  	24	1	add
491	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	24	1	add
492	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	24	1	add
493	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  stateInitialized  =  isLastStep;  [CE]  cannot  find  symbol  stateInitialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  stateInitialized  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    stateInitialized  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  stateInitialized	90	None	add
494	[BUG]  [BUGGY]  statesInitialized  =  isLastStep;  isLastStep;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  isLastStep;  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized    =    isLastStep;    isLastStep;	  	non-compiled	[CE]  not  a  statement	90	None	add
495	[BUG]  [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateInitialized  =  true;  statesInitialized  =  true;  [CE]  cannot  find  symbol  stateInitialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    statesInitialized  =  true;  stateInitialized  =  true;  statesInitialized  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        statesInitialized    =    true;    stateInitialized  =  true;  statesInitialized  =  true;	  	non-compiled	[CE]  cannot  find  symbol  stateInitialized	21	None	add
496	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
497	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	  	compilable	  [FE]  UnsupportedOperationException  	72	1	add
498	[BUG]  [BUGGY]  StatefulStatefulODE  =  isLastStep;  [CE]  cannot  find  symbol  StatefulStatefulODE  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  StatefulStatefulODE  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	StatefulStatefulODE  =  isLastStep;	  StatefulStatefulODE    =    true;    	non-compiled	[CE]  cannot  find  symbol  StatefulStatefulODE	102	None	replace
499	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  false;  isLastStep  =  true;	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
500	[BUG]  [BUGGY]  statesInitialized  =  false;  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  false;  isLastStep  =  true;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  false;  isLastStep  =  true;	  statesInitialized    =    true;    if(isLastStep)    {    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	27	1	replace
501	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStandardEvaluations(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStandardEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStandardEvaluations(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
502	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  stateInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  stateInitialized  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  stateInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    stateInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol  stateInitialized	80	None	add
503	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setEventStates(-1);  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setEventStates(-1);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setEventStates(-1);	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	80	None	add
504	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	97	1	add
505	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	97	1	add
506	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  true;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  hasLastStep  =  true;  }	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	5	None	replace
507	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  Incrementor  evaluations  =  new  INCrementor();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  Incrementor  evaluations  =  new  INCrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  for(int  i  =  0;  i  <  this.events.size();  ++i)  {  Incrementor  evaluations  =  new  INCrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
508	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
509	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates  ==  null)  {  return;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates  ==  null)  {  return;  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    INCrementor();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
510	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  Event	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	11	None	replace
511	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  >  expected	11	None	replace
512	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.events  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.events  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.events	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  not  a  statement	11	None	replace
513	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  [CE]  '('  or  '['  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  '('  or  '['  expected	11	None	replace
514	[BUG]  [BUGGY]  statesInitialized  =  new  Integer(0,  0);  [CE]  no  suitable  constructor  found  for  Integer(int,int)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  Integer(0,  0);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  Integer(0,  0);	  statesInitialized    =    new    Integer(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(int,int)	64	None	replace
515	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(true,  stepStart);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(true,  stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(true,  stepStart);	  Incrementor    evaluations    =    getEventsStates(true);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
516	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepStart,  this.stepSize);  [CE]  no  suitable  constructor  found  for  Incrementor(double,double)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.stepStart,  this.stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(this.stepStart,  this.stepSize);	  Incrementor    evaluations    =    new    Incrementor(this.stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double)	93	None	replace
517	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  if(eventsStates!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
518	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);  [CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>)  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  no  suitable  method  found  for  synchronizedList(Collection<StepHandler>)	94	None	replace
519	[BUG]  [BUGGY]  statesInitialized  =  new  ArrayList  <  EventState>(eventsStates);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  ArrayList  <  EventState>(eventsStates);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  ArrayList  <  EventState>(eventsStates);	  statesInitialized    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incompatible  types	62	None	replace
520	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
521	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        if(eventsStates    ==    null)    {    this.eventsStates    =    Collections.emptyList();    }    else    {    this.eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	34	None	add
522	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	33	1	replace
523	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	33	1	replace
524	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	33	1	replace
525	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	33	1	replace
526	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	33	1	replace
527	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	33	1	replace
528	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	108	1	replace
529	[BUG]  [BUGGY]  statesInitialized  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  statesInitialized    =    true;    stateStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	108	1	replace
530	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  [CE]  cannot  find  symbol  assessments  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  assessments	88	None	replace
531	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  assessments  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  assessments	88	None	replace
532	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  assessments  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  assessments  =  new  Incrementor();  }  else  {  throw  new  IllegalStateException( " ");  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    assessments    =    new    Incrementor();    	non-compiled	[CE]  cannot  find  symbol  assessments	88	None	replace
533	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	44	None	add
534	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  List  <  EventState>();	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	8	None	add
535	[BUG]  [BUGGY]  stepInitialized  =  isLastStep;  [CE]  cannot  find  symbol  stepInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepInitialized  =  isLastStep;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepInitialized  =  isLastStep;	  stepInitialized    =    true;    	non-compiled	[CE]  cannot  find  symbol  stepInitialized	101	None	replace
536	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  AssertionError  	96	1	replace
537	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  AssertionError  	96	1	replace
538	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	96	1	replace
539	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	compilable	  [FE]  UnsupportedOperationException  	96	1	replace
540	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  isLastStep  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  isLastStep  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)  {  isLastStep  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	78	None	add
541	[BUG]  [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  isLastStep  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  resetEvaluations();  }  [CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  isLastStep  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  resetEvaluations();  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)  {  isLastStep  =  true;  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-2);  resetEvaluations();  }	  	non-compiled	[CE]  variable  evaluations  is  already  defined  in  constructor  AbstractIntegrator(String)	78	None	add
542	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
543	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
544	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  else  {  this.eventsStates  =  Collections.EMPTY_LIST;	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
545	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
546	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }	  	compilable	  [FE]  UnsupportedOperationException  	28	1	add
547	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_  [CE]  ';'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.EMPTY_LIST;    if(this.eventsStates  ==  Collections.EMPTY_LIST)  {  this.eventsStates  =  Collections.EMPTY_LIST;  }  if(isLastStep)  {  this.eventsStates  =  Collections.EMPTY_	  	non-compiled	[CE]  ';'  expected	28	None	add
548	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  0);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	53	None	replace
549	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [CE]  no  suitable  constructor  found  for  Incrementor(int,int)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  1);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(int,int)	53	None	replace
550	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-2);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-2);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-2);    }    	compilable	  [FE]  NullPointerException  	19	1	replace
551	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-2);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-2);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  if(isLastStep)  {  setMaxEvaluations(-2);  }	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    if(isLastStep)    {    setMaxEvaluations(-2);    }    	compilable	  [FE]  NullPointerException  	19	1	replace
552	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setStates(-1);  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  setMaxEvaluations(-1);  }  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setStates(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)    {    Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    }    else    {    setMaxEvaluations(-1);    }    if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  else  {  setStates(-1);  }	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
553	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
554	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
555	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList()  [CE]  ';'  expected  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList()  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  if(isLastStep)  {  eventsStates  =  Collections.emptyList()	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    if(isLastStep)    {    eventsStates    =    Collections.emptyList();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
556	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }  else  {  Set  <  EventState>  statesInitialized  =  new  HashSet  <  EventState>();  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }  else  {  Set  <  EventState>  statesInitialized  =  new  HashSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  false;  }  else  {  Set  <  EventState>  statesInitialized  =  new  HashSet  <  EventState>();	  Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    false;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
557	[BUG]  [BUGGY]  Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
558	[BUG]  [BUGGY]  Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
559	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
560	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>(stepStart,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>(stepStart,  stepSize);	  this.eventsStates    =    new    ArrayList    <    EventState>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	7	None	replace
561	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	13	None	replace
562	[BUG]  [BUGGY]  statesInitialized  =  new  ArrayList  <  Incrementor>(eventsStates);  [CE]  no  suitable  constructor  found  for  ArrayList(Collection<EventState>)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized  =  new  ArrayList  <  Incrementor>(eventsStates);  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized  =  new  ArrayList  <  Incrementor>(eventsStates);	  statesInitialized    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Collection<EventState>)	92	None	replace
563	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepSize  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  double  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepSize  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.stepSize  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  double	32	None	add
564	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
565	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  statesInitialized  =  true;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  statesInitialized    =    true;    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	22	1	replace
566	[BUG]  [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	68	None	replace
567	[BUG]  [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.reventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.reventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.reventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	68	None	replace
568	[BUG]  [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.reventsStates  =  new  ArrayList  <  EventState>();  }  else  {	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.reventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
569	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	10	None	add
570	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  that.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  cannot  find  symbol  that  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  that.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates    =    Collections.    <    EventState>emptyList();    that.eventsStates  =  Collections.  <  EventState>emptyList();	  	non-compiled	[CE]  cannot  find  symbol  that	30	None	add
571	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	73	1	replace
572	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	73	1	replace
573	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	73	1	replace
574	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  UnsupportedOperationException  	73	1	replace
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	73	1	replace
576	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	compilable	  [FE]  AssertionError  	73	1	replace
577	[BUG]  [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  else  {  setStatesInitialized(false);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  else  {  setStatesInitialized(false);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setStatesInitialized(true);  }  else  {  setStatesInitialized(false);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setStatesInitialized(true);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
578	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Integer  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  isLastStep  =  true;  }  Integer  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    isLastStep    =    true;    }    Integer  statesInitialized  =  true;  if(isLastStep)  {  isLastStep  =  true;  }	  	non-compiled	[CE]  incompatible  types	26	None	add
579	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(this.name);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(this.name);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(this.name);	  Incrementor    evaluations    =    getEventsStates(name);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
580	[BUG]  [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  state);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  getEventsStates(name,  state);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  getEventsStates(name,  state);	  Incrementor    evaluations    =    getEventsStates(name);    	non-compiled	[CE]  cannot  find  symbol  state	105	None	replace
581	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newArrayList  <  EventState>(stepStart);  [CE]  cannot  find  symbol  Lists  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Lists.newArrayList  <  EventState>(stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Lists.newArrayList  <  EventState>(stepStart);	  this.eventsStates    =    Lists.newArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  Lists	65	None	replace
582	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(false,  true);  [CE]  no  suitable  constructor  found  for  Incrementor(boolean,boolean)  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor(false,  true);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor(false,  true);	          Incrementor    evaluations    =    new    Incrementor();    Incrementor    evaluations    =    new    Incrementor(true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(boolean,boolean)	111	None	replace
583	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
584	[BUG]  [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
585	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
586	[BUG]  [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  statesInitialized  =  true;  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(1);  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1);    	compilable	  [FE]  NullPointerException  	81	1	replace
587	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(!isLastStep)  {  statesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	110	1	replace
588	[BUG]  [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(!isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(!isLastStep)  {  statesInitialized  =  true;  }	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  AssertionError  	110	1	replace
589	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  false;	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
590	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  false;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  false;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	Incrementor  evaluations  =  new  Incrementor();  statesInitialized  =  false;	  statesInitialized    =    true;    Incrementor    evaluations    =    new    Incrementor();    statesInitialized    =    true;    	compilable	  [FE]  NullPointerException  	110	1	replace
591	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	12	None	add
592	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	12	None	add
593	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    if(isLastStep)  {  statesInitialized  =  true;  }	  	compilable	  [FE]  AssertionError  	24	1	add
594	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    if(isLastStep)  {  statesInitialized  =  true;  }	  	compilable	  [FE]  AssertionError  	24	1	add
595	[BUG]  [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  if(isLastStep)  {  stateInitialized  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  statesInitialized    =    true;    if(isLastStep)  {  statesInitialized  =  true;  }  if(isLastStep)  {  statesInitialized  =  true;  if(isLastStep)  {  stateInitialized  =  true;  }  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	statesInitialized        =        true;        if(isLastStep)    {    statesInitialized    =    true;    }    if(isLastStep)  {  statesInitialized  =  true;  if(isLastStep)  {  stateInitialized  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
596	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	9	1	replace
597	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	9	1	replace
598	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	9	1	replace
599	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  AssertionError  	9	1	replace
600	[BUG]  [BUGGY]  if(this.stepSize!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(this.stepSize!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(this.stepSize!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	9	None	replace
601	[BUG]  [BUGGY]  this.eventsStates  =  Collections.unmodifiableList();  [CE]  method  unmodifiableList  in  class  Collections  cannot  be  applied  to  given  types;  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  this.eventsStates  =  Collections.unmodifiableList();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	this.eventsStates  =  Collections.unmodifiableList();	          this.eventsStates    =    Collections.emptyList();    if(!isLastStep)    {    this.eventsStates    =    Collections.emptyList();    }    	non-compiled	[CE]  method  unmodifiableList  in  class  Collections  cannot  be  applied  to  given  types;	71	None	replace
602	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepSize  =  0;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	add	stepSize  =  0;	  stepSize    =    true;    	compilable	  [FE]  AssertionError  	56	1	replace
603	[BUG]  [BUGGY]  stepSize  =  0;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  stepSize  =  0;  [BUGGY]      evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	stepSize  =  0;	  stepSize    =    true;    	compilable	  [FE]  AssertionError  	56	1	replace
604	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  ISLastStep  =  true;  }  [CE]  cannot  find  symbol  ISLastStep  [FE]              NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  ISLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  isLastStep  =  true;  }  else  {  ISLastStep  =  true;  }	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    ISLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  ISLastStep	4	None	replace
605	[BUG]  [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  true;  }  [CE]  cannot  find  symbol  ISLastStep  [FE]                NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();      [BUGGY]  if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  true;  }  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	91	91	1	replace	if(isLastStep)  {  Incrementor  evaluations  =  new  Incrementor();  ISLastStep  =  true;  }	          Incrementor    evaluations    =    new    Incrementor();    isLastStep    =    true;    Incrementor    evaluations    =    new    Incrementor();    ISLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  ISLastStep	4	None	replace
