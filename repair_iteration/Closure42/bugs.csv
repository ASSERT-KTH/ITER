bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return Token.EQ; [FE] AssertionFailedError [CONTEXT] switch (token) { case com.google.javascript.rhino.head.Token.RETURN: return Token.RETURN; case com.google.javascript.rhino.head.Token.BITOR: return Token.BITOR; case com.google.javascript.rhino.head.Token.BITXOR: return Token.BITXOR; case com.google.javascript.rhino.head.Token.BITAND: return Token.BITAND; case com.google.javascript.rhino.head.Token.EQ: [BUGGY] return Token.EQ; [BUGGY] case com.google.javascript.rhino.head.Token.NE: return Token.NE; case com.google.javascript.rhino.head.Token.LT: return Token.LT; case com.google.javascript.rhino.head.Token.LE: return Token.LE; case com.google.javascript.rhino.head.Token.GT: return Token.GT; case com.google.javascript.rhino.head.Token.GE: return Token.GE; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	1.0	1112	1112	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] switch (token) { case com.google.javascript.rhino.head.Token.RETURN: return Token.RETURN; case com.google.javascript.rhino.head.Token.BITOR: return Token.BITOR; case com.google.javascript.rhino.head.Token.BITXOR: return Token.BITXOR; case com.google.javascript.rhino.head.Token.BITAND: return Token.BITAND; case com.google.javascript.rhino.head.Token.EQ: [BUGGY] [BUGGY] return Token.EQ; case com.google.javascript.rhino.head.Token.NE: return Token.NE; case com.google.javascript.rhino.head.Token.LT: return Token.LT; case com.google.javascript.rhino.head.Token.LE: return Token.LE; case com.google.javascript.rhino.head.Token.GT: return Token.GT; case com.google.javascript.rhino.head.Token.GE: return Token.GE; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	1.0	1112	1112	1	add	
3	[BUG] [BUGGY] return Token.THIS; [FE] AssertionFailedError [CONTEXT] return Token.CALL; case com.google.javascript.rhino.head.Token.NAME: return Token.NAME; case com.google.javascript.rhino.head.Token.NUMBER: return Token.NUMBER; case com.google.javascript.rhino.head.Token.STRING: return Token.STRING; case com.google.javascript.rhino.head.Token.NULL: return Token.NULL; case com.google.javascript.rhino.head.Token.THIS: [BUGGY] return Token.THIS; [BUGGY] case com.google.javascript.rhino.head.Token.FALSE: return Token.FALSE; case com.google.javascript.rhino.head.Token.TRUE: return Token.TRUE; case com.google.javascript.rhino.head.Token.SHEQ: return Token.SHEQ; case com.google.javascript.rhino.head.Token.SHNE: return Token.SHNE; case com.google.javascript.rhino.head.Token.REGEXP: return Token.REGEXP; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	1.0	1168	1168	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return Token.CALL; case com.google.javascript.rhino.head.Token.NAME: return Token.NAME; case com.google.javascript.rhino.head.Token.NUMBER: return Token.NUMBER; case com.google.javascript.rhino.head.Token.STRING: return Token.STRING; case com.google.javascript.rhino.head.Token.NULL: return Token.NULL; case com.google.javascript.rhino.head.Token.THIS: [BUGGY] [BUGGY] return Token.THIS; case com.google.javascript.rhino.head.Token.FALSE: return Token.FALSE; case com.google.javascript.rhino.head.Token.TRUE: return Token.TRUE; case com.google.javascript.rhino.head.Token.SHEQ: return Token.SHEQ; case com.google.javascript.rhino.head.Token.SHNE: return Token.SHNE; case com.google.javascript.rhino.head.Token.REGEXP: return Token.REGEXP; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	1.0	1168	1168	1	add	
5	[BUG] [BUGGY] return new Node(type, child1, child2, child3).clonePropsFrom(templateNode); [FE] AssertionFailedError [CONTEXT] private Node newNode(int type, Node child1, Node child2, Node child3) { [BUGGY] return new Node(type, child1, child2, child3).clonePropsFrom(templateNode); [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] newNode [RETURN_TYPE] Node  int type Node child1 Node child2 Node child3 [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child child1 child2 child3 cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node newNode(int type, Node child1, Node child2, Node child3) { [BUGGY] [BUGGY] return new Node(type, child1, child2, child3).clonePropsFrom(templateNode); } [CLASS] IRFactory TransformDispatcher [METHOD] newNode [RETURN_TYPE] Node  int type Node child1 Node child2 Node child3 [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child child1 child2 child3 cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int type  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	1297	1297	1	add	
7	[BUG] [BUGGY] Node irNode = transform(node); [FE] AssertionFailedError [CONTEXT] private Node transformBlock(AstNode node) { [BUGGY] Node irNode = transform(node); [BUGGY] if (!irNode.isBlock()) { if (irNode.isEmpty()) { irNode.setType(Token.BLOCK); irNode.setWasEmptyNode(true); } else { Node newBlock = newNode(Token.BLOCK, irNode); newBlock.setLineno(irNode.getLineno()); newBlock.setCharno(irNode.getCharno()); maybeSetLengthFrom(newBlock, node); irNode = newBlock; [CLASS] IRFactory TransformDispatcher [METHOD] transformBlock [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo rootNodeJsDoc AstNode node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	211	211	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transformBlock(AstNode node) { [BUGGY] [BUGGY] Node irNode = transform(node); if (!irNode.isBlock()) { if (irNode.isEmpty()) { irNode.setType(Token.BLOCK); irNode.setWasEmptyNode(true); } else { Node newBlock = newNode(Token.BLOCK, irNode); newBlock.setLineno(irNode.getLineno()); newBlock.setCharno(irNode.getCharno()); maybeSetLengthFrom(newBlock, node); irNode = newBlock; [CLASS] IRFactory TransformDispatcher [METHOD] transformBlock [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo rootNodeJsDoc AstNode node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	211	211	1	add	
9	[BUG] [BUGGY] if (!irNode.isBlock()) { [FE] AssertionFailedError [CONTEXT] private Node transformBlock(AstNode node) { Node irNode = transform(node); [BUGGY] if (!irNode.isBlock()) { [BUGGY] if (irNode.isEmpty()) { irNode.setType(Token.BLOCK); irNode.setWasEmptyNode(true); } else { Node newBlock = newNode(Token.BLOCK, irNode); newBlock.setLineno(irNode.getLineno()); newBlock.setCharno(irNode.getCharno()); maybeSetLengthFrom(newBlock, node); irNode = newBlock; } [CLASS] IRFactory TransformDispatcher [METHOD] transformBlock [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo rootNodeJsDoc AstNode node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	212	212	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transformBlock(AstNode node) { Node irNode = transform(node); [BUGGY] [BUGGY] if (!irNode.isBlock()) { if (irNode.isEmpty()) { irNode.setType(Token.BLOCK); irNode.setWasEmptyNode(true); } else { Node newBlock = newNode(Token.BLOCK, irNode); newBlock.setLineno(irNode.getLineno()); newBlock.setCharno(irNode.getCharno()); maybeSetLengthFrom(newBlock, node); irNode = newBlock; } [CLASS] IRFactory TransformDispatcher [METHOD] transformBlock [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo rootNodeJsDoc AstNode node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	212	212	1	add	
11	[BUG] [BUGGY] return irNode; [FE] AssertionFailedError [CONTEXT] irNode.setType(Token.BLOCK); irNode.setWasEmptyNode(true); } else { Node newBlock = newNode(Token.BLOCK, irNode); newBlock.setLineno(irNode.getLineno()); newBlock.setCharno(irNode.getCharno()); maybeSetLengthFrom(newBlock, node); irNode = newBlock; } } [BUGGY] return irNode; [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] transformBlock [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo rootNodeJsDoc AstNode node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] irNode.setType(Token.BLOCK); irNode.setWasEmptyNode(true); } else { Node newBlock = newNode(Token.BLOCK, irNode); newBlock.setLineno(irNode.getLineno()); newBlock.setCharno(irNode.getCharno()); maybeSetLengthFrom(newBlock, node); irNode = newBlock; } } [BUGGY] [BUGGY] return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformBlock [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo rootNodeJsDoc AstNode node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	add	
13	[BUG] [BUGGY] return Token.ASSIGN; [FE] AssertionFailedError [CONTEXT] case com.google.javascript.rhino.head.Token.OBJECTLIT: return Token.OBJECTLIT; case com.google.javascript.rhino.head.Token.TRY: return Token.TRY;  case com.google.javascript.rhino.head.Token.LP: return Token.PARAM_LIST; case com.google.javascript.rhino.head.Token.COMMA: return Token.COMMA; case com.google.javascript.rhino.head.Token.ASSIGN: [BUGGY] return Token.ASSIGN; [BUGGY] case com.google.javascript.rhino.head.Token.ASSIGN_BITOR: return Token.ASSIGN_BITOR; case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR: return Token.ASSIGN_BITXOR; case com.google.javascript.rhino.head.Token.ASSIGN_BITAND: return Token.ASSIGN_BITAND; case com.google.javascript.rhino.head.Token.ASSIGN_LSH: return Token.ASSIGN_LSH; case com.google.javascript.rhino.head.Token.ASSIGN_RSH: return Token.ASSIGN_RSH; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2773500981126146	1197	1197	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case com.google.javascript.rhino.head.Token.OBJECTLIT: return Token.OBJECTLIT; case com.google.javascript.rhino.head.Token.TRY: return Token.TRY;  case com.google.javascript.rhino.head.Token.LP: return Token.PARAM_LIST; case com.google.javascript.rhino.head.Token.COMMA: return Token.COMMA; case com.google.javascript.rhino.head.Token.ASSIGN: [BUGGY] [BUGGY] return Token.ASSIGN; case com.google.javascript.rhino.head.Token.ASSIGN_BITOR: return Token.ASSIGN_BITOR; case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR: return Token.ASSIGN_BITXOR; case com.google.javascript.rhino.head.Token.ASSIGN_BITAND: return Token.ASSIGN_BITAND; case com.google.javascript.rhino.head.Token.ASSIGN_LSH: return Token.ASSIGN_LSH; case com.google.javascript.rhino.head.Token.ASSIGN_RSH: return Token.ASSIGN_RSH; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2773500981126146	1197	1197	1	add	
15	[BUG] [BUGGY] return position - lineIndex - 1; [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { int lineIndex = sourceString.lastIndexOf('\n', position); if (lineIndex == -1) { return position; } else {  [BUGGY] return position - lineIndex - 1; [BUGGY] } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int lineIndex position  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.25	371	371	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { int lineIndex = sourceString.lastIndexOf('\n', position); if (lineIndex == -1) { return position; } else {  [BUGGY] [BUGGY] return position - lineIndex - 1; } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int lineIndex position  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.25	371	371	1	add	
17	[BUG] [BUGGY] Node irNode = transformDispatcher.processName(node, true); [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { [BUGGY] Node irNode = transformDispatcher.processName(node, true); [BUGGY] JSDocInfo jsDocInfo = handleJsDoc(node, irNode); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	282	282	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { [BUGGY] [BUGGY] Node irNode = transformDispatcher.processName(node, true); JSDocInfo jsDocInfo = handleJsDoc(node, irNode); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	282	282	1	add	
19	[BUG] [BUGGY] JSDocInfo jsDocInfo = handleJsDoc(node, irNode); [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); [BUGGY] JSDocInfo jsDocInfo = handleJsDoc(node, irNode); [BUGGY] if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	283	283	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); [BUGGY] [BUGGY] JSDocInfo jsDocInfo = handleJsDoc(node, irNode); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	283	283	1	add	
21	[BUG] [BUGGY] if (jsDocInfo != null) { [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); JSDocInfo jsDocInfo = handleJsDoc(node, irNode); [BUGGY] if (jsDocInfo != null) { [BUGGY] irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); JSDocInfo jsDocInfo = handleJsDoc(node, irNode); [BUGGY] [BUGGY] if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	add	
23	[BUG] [BUGGY] setSourceInfo(irNode, node); [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); JSDocInfo jsDocInfo = handleJsDoc(node, irNode); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } [BUGGY] setSourceInfo(irNode, node); [BUGGY] return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	287	287	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); JSDocInfo jsDocInfo = handleJsDoc(node, irNode); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } [BUGGY] [BUGGY] setSourceInfo(irNode, node); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	287	287	1	add	
25	[BUG] [BUGGY] return irNode; [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); JSDocInfo jsDocInfo = handleJsDoc(node, irNode); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); [BUGGY] return irNode; [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transformNameAsString(Name node) { Node irNode = transformDispatcher.processName(node, true); JSDocInfo jsDocInfo = handleJsDoc(node, irNode); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); } setSourceInfo(irNode, node); [BUGGY] [BUGGY] return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformNameAsString [RETURN_TYPE] Node  Name node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc Name node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	288	288	1	add	
27	[BUG] [BUGGY] return Token.BLOCK; [FE] AssertionFailedError [CONTEXT] return Token.VAR; case com.google.javascript.rhino.head.Token.WITH: return Token.WITH; case com.google.javascript.rhino.head.Token.CATCH: return Token.CATCH; case com.google.javascript.rhino.head.Token.VOID: return Token.VOID; case com.google.javascript.rhino.head.Token.EMPTY: return Token.EMPTY; case com.google.javascript.rhino.head.Token.BLOCK: [BUGGY] return Token.BLOCK; [BUGGY] case com.google.javascript.rhino.head.Token.LABEL: return Token.LABEL; case com.google.javascript.rhino.head.Token.EXPR_VOID: case com.google.javascript.rhino.head.Token.EXPR_RESULT: return Token.EXPR_RESULT; case com.google.javascript.rhino.head.Token.SCRIPT: return Token.SCRIPT; case com.google.javascript.rhino.head.Token.GET: return Token.GETTER_DEF; case com.google.javascript.rhino.head.Token.SET: [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return Token.VAR; case com.google.javascript.rhino.head.Token.WITH: return Token.WITH; case com.google.javascript.rhino.head.Token.CATCH: return Token.CATCH; case com.google.javascript.rhino.head.Token.VOID: return Token.VOID; case com.google.javascript.rhino.head.Token.EMPTY: return Token.EMPTY; case com.google.javascript.rhino.head.Token.BLOCK: [BUGGY] [BUGGY] return Token.BLOCK; case com.google.javascript.rhino.head.Token.LABEL: return Token.LABEL; case com.google.javascript.rhino.head.Token.EXPR_VOID: case com.google.javascript.rhino.head.Token.EXPR_RESULT: return Token.EXPR_RESULT; case com.google.javascript.rhino.head.Token.SCRIPT: return Token.SCRIPT; case com.google.javascript.rhino.head.Token.GET: return Token.GETTER_DEF; case com.google.javascript.rhino.head.Token.SET: [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS directives parsedComments reservedKeywords boolean Config config Node assign block bodyNode c child cur flagsNode fnNode initalizer irNode key labelName leftChild literalStringNode lp n newBlock newName newNode node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment directive flags identifier msg sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc int token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	add	
