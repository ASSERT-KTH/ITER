bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  newBlock;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  newBlock;  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  newBlock;	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  return  irNode.cloneTree();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  irNode.cloneTree();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  irNode.cloneTree();	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  else  if(irNode.getType()  ==  Token.NAME)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  newBlock;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  else  if(irNode.getType()  ==  Token.NAME)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  newBlock;  }  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	else  if(irNode.getType()  ==  Token.NAME)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  newBlock;  }	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  else  if(irNode.getType()  ==  Token.VAR)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  newBlock;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  else  if(irNode.getType()  ==  Token.VAR)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  newBlock;  }  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	else  if(irNode.getType()  ==  Token.VAR)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.EXPR_RESULT)  {  return  newBlock;  }	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT;  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT;  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT;	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  else  if(irNode.getType()  ==  Token.VAR)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.FUNCTION)  {  return  newBlock;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  else  if(irNode.getType()  ==  Token.VAR)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.FUNCTION)  {  return  newBlock;  }  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	else  if(irNode.getType()  ==  Token.VAR)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.FUNCTION)  {  return  newBlock;  }	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  else  if(irNode.getType()  ==  Token.NAME)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.FUNCTION)  {  return  newBlock;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  else  if(irNode.getType()  ==  Token.NAME)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.FUNCTION)  {  return  newBlock;  }  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	else  if(irNode.getType()  ==  Token.NAME)  {  return  newBlock;  }  else  if(irNode.getType()  ==  Token.FUNCTION)  {  return  newBlock;  }	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]    [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	  	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  return  node;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  node;  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  node;	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESERVED;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESERVED;  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  irNode.getType()  ==  Token.EXPR_RESERVED;	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.BLOCK;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  irNode.getType()  ==  Token.BLOCK;  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  irNode.getType()  ==  Token.BLOCK;	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  return  irNode.getFirstChild();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  irNode.getFirstChild();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  irNode.getFirstChild();	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  return  irNode.getParent();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  irNode.getParent();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  irNode.getParent();	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  return  irNode.removeFirstChild();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  irNode.setType(Token.BLOCK);  irNode.setWasEmptyNode(true);  }  else  {  Node  newBlock  =  newNode(Token.BLOCK,  irNode);  newBlock.setLineno(irNode.getLineno());  newBlock.setCharno(irNode.getCharno());  maybeSetLengthFrom(newBlock,  node);  irNode  =  newBlock;  }  }  [BUGGY]  return  irNode.removeFirstChild();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformBlock  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  rootNodeJsDoc  AstNode  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5	224	224	1	replace	return  irNode.removeFirstChild();	return  irNode;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
