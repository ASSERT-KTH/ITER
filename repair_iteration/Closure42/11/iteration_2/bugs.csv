bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isExtern())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isExtern())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isExtern())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isInterface())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isInterface())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isInterface())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isLocal())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isLocal())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isLocal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunction())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunction())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isFunction())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  irNode.setJSDocInfo(jsDocInfo);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  irNode.setJSDocInfo(jsDocInfo);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	irNode.setJSDocInfo(jsDocInfo);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  JsDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(irNode,  true);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processNameAsString(irNode,  true);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processName(irNode,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  irNode  =  transformDispatcher.processName(irNode,  true);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processName(irNode,  true);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(irNode,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(irNode,  false);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processNameAsString(irNode,  false);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
28	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
31	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
32	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
33	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode!=  null)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode  ==  null)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode!=  null)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo!=  null)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||  irNode  ==  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode  ==  null)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||  irNode!=  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode!=  null)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
51	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
52	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.hasSourceFile())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.hasSourceFile())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.hasSourceFile())  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
55	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getJSDocInfo()!=  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getJSDocInfo()!=  null)  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
56	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
57	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(irNode!=  null  &&  irNode!=  null)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
59	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processName(irNode,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  irNode  =  transformDispatcher.processName(irNode,  false);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processName(irNode,  false);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
60	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isInternal())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isInternal())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isInternal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
62	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
64	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNone())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNone())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isNone())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
66	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
67	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  >=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  >=  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  >=  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
68	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isReferenceName())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isReferenceName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isReferenceName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
71	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
73	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
74	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
75	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
76	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
79	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
80	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isSimpleName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isSimpleName())  {	  if(jsDocInfo    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
82	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
83	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
87	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
88	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
89	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
90	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {	  if(jsDocInfo!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
92	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
93	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getString()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getString()))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getString()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
94	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
95	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
96	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if    (jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
97	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  jsDocInfo.setSourceFile(node);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(node);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
98	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getSourceFile();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getSourceFile();  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getSourceFile();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
99	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getParent();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getParent();  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getParent();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
100	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  true);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(node,  true);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
101	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  true);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  true);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
102	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  false);  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  false);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
104	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
105	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
106	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
107	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
108	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
110	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
111	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
112	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);    [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [BUGGY]    irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
