bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isInterface())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isInterface())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isInterface())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
3	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
4	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
5	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.VAR)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.VAR)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
6	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
7	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
8	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
9	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getChildCount()  >  1)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getChildCount()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getChildCount()  >  1)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
10	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
11	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(node,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(node,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processNameAsString(node,  false);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
12	[BUG]  [BUGGY]  Node  irNode  =  transformerDispatcher.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformerDispatcher.processNameAsString(irNode,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformerDispatcher.processNameAsString(irNode,  true);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
13	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(irNode,  false,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(irNode,  false,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processNameAsString(irNode,  false,  jsDocInfo);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
14	[BUG]  [BUGGY]  Node  irNode  =  node.processNameAsString(irNode,  false);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  node.processNameAsString(irNode,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  node.processNameAsString(irNode,  false);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
15	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isFunctionName())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isFunctionName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isFunctionName())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
16	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
17	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
18	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
19	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
20	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
21	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()!=  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.getType()!=  Token.STRING)  {	  if(jsDocInfo    ==    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isName())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
24	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  ||  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
25	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
26	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  if(irNode!=  null  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  irNode.getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
28	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
29	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getString().equals( "name "))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getString().equals( "name "))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getString().equals( "name "))  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
30	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
31	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
32	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
33	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isLocal())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isLocal())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isLocal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isGlobal())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isGlobal())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isGlobal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isLocal())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isLocal())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isLocal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isStatic())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isStatic())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isStatic())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnable(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnable(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canEnable(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
38	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
39	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
40	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnableToString(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnableToString(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canEnableToString(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
41	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setSourceFile(irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(irNode);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
42	[BUG]  [BUGGY]  jsDocInfo.setJSDocInfo(jsDocInfo);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setJSDocInfo(jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setJSDocInfo(jsDocInfo);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
43	[BUG]  [BUGGY]  jsDocInfo.setStaticSourceFile(irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setStaticSourceFile(irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setStaticSourceFile(irNode);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
44	[BUG]  [BUGGY]  jsDocInfo.setName(irNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setName(irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setName(irNode);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
45	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(sourceFile);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setSourceFile(sourceFile);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(sourceFile);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
46	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
47	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getJSDocInfo().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getJSDocInfo().length()  ==  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getJSDocInfo().length()  ==  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
48	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
49	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  >=  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().length()  >=  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
50	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getJSDocInfo().length()  ==  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
51	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getJSDocInfo().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getJSDocInfo().length()  ==  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getJSDocInfo().length()  ==  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
52	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(jsDocInfo,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(jsDocInfo,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(jsDocInfo,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
53	[BUG]  [BUGGY]  Node  irNode  =  fileOverviewInfo.processName(irNode,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileOverviewInfo.processName(irNode,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileOverviewInfo.processName(irNode,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
54	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(node,  false);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
55	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnable(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnable(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canEnable(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
56	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
57	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  node,  fileLevelJsDocBuilder,  jsDocInfo);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  templateNode,  fileLevelJsDocBuilder,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  templateNode,  fileLevelJsDocBuilder,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  irNode,  templateNode,  fileLevelJsDocBuilder,  jsDocInfo);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  jsDocInfo,  fileLevelJsDocBuilder,  irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  jsDocInfo,  fileLevelJsDocBuilder,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  jsDocInfo,  fileLevelJsDocBuilder,  irNode);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
61	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  node);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  node);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileOverviewInfo,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileOverviewInfo,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  irNode,  fileOverviewInfo,  jsDocInfo);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  sourceFile);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  sourceFile);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  sourceFile);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
64	[BUG]  [BUGGY]  if(irNode!=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
66	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
67	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
68	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
69	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processName(node,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformDispatcher.processName(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processName(node,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
70	[BUG]  [BUGGY]  Node  irNode  =  node.processName(fileLevelJsDocBuilder,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  node.processName(fileLevelJsDocBuilder,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  node.processName(fileLevelJsDocBuilder,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
71	[BUG]  [BUGGY]  Node  irNode  =  transformerDispatcher.processName(node,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformerDispatcher.processName(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformerDispatcher.processName(node,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
72	[BUG]  [BUGGY]  Node  irNode  =  node.processName(node,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  node.processName(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  node.processName(node,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
73	[BUG]  [BUGGY]  Node  irNode  =  fileOverviewInfo.processName(node,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileOverviewInfo.processName(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileOverviewInfo.processName(node,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
74	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null)  {	  if(jsDocInfo!=    null    ||    irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
75	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getJSDocInfo()!=  null)  {	  if(jsDocInfo!=    null    ||    irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
76	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getJSDocInfo()!=  null)  {	  if(jsDocInfo!=    null    ||    irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
77	[BUG]  [BUGGY]  if(irNode!=  null  ||  jsDocInfo.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  jsDocInfo.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  jsDocInfo.getJSDocInfo()!=  null)  {	  if(jsDocInfo!=    null    ||    irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
78	[BUG]  [BUGGY]  if(irNode!=  null  ||  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  irNode.getJSDocInfo()!=  null)  {	  if(jsDocInfo!=    null    ||    irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
79	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getJSDocInfo()  ==  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getJSDocInfo()  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getJSDocInfo()  ==  null)  {	  if(jsDocInfo!=    null    ||    irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
80	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
81	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
82	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH)||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH)||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH)||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
83	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH  ||  irNode.getType()  ==  Token.NAME))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH  ||  irNode.getType()  ==  Token.NAME))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH  ||  irNode.getType()  ==  Token.NAME))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
84	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
85	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
86	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
87	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
88	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.getType()!=  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  jsDocInfo.getType()!=  Token.STRING)  {	  if(jsDocInfo!=    null    ||    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
89	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
90	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
91	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
92	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
93	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
94	[BUG]  [BUGGY]  Node  irNode  =  transformerDispatcher.processName(irNode,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformerDispatcher.processName(irNode,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformerDispatcher.processName(irNode,  false);	  Node    irNode    =    transformDispatcher.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
95	[BUG]  [BUGGY]  Node  irNode  =  node.processName(irNode,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  node.processName(irNode,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  node.processName(irNode,  true);	  Node    irNode    =    transformDispatcher.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
96	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processName(node,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformDispatcher.processName(node,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processName(node,  false);	  Node    irNode    =    transformDispatcher.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
97	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
98	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
99	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
100	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
101	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
102	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(jsDocInfo);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(jsDocInfo);  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(jsDocInfo);  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
103	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
104	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(null);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(null);  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(null);  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
105	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(node);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(node);  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  irNode.setJSDocInfo(node);  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
106	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
107	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||  irNode.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||  irNode.hasJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||  irNode.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
108	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.isJSDocName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.isJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.isJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
109	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  jsDocInfo.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  jsDocInfo.hasJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  jsDocInfo.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
110	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
111	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.isExtern())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.isExtern())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.isExtern())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
112	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
113	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
114	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
115	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
116	[BUG]  [BUGGY]  if(irNode!=  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
117	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
118	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
119	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
120	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isInternal())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isInternal())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isInternal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInternal())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
121	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isExternal())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isExternal())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isExternal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInternal())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
122	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isInternal())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isInternal())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isInternal())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInternal())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
123	[BUG]  [BUGGY]  if(irNode!=  null  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  irNode.getType()  ==  Token.STRING)  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
124	[BUG]  [BUGGY]  if(irNode  ==  null  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  ||  irNode.getType()  ==  Token.STRING)  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
125	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
126	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
127	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
128	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
129	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
130	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
131	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
132	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
133	[BUG]  [BUGGY]  if(irNode  ==  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo    ==    null    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
134	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()!=  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getType()!=  Token.STRING)  {	  if(jsDocInfo    ==    null    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
135	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
136	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
137	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
138	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
139	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
140	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
141	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SOURCENAME_AS_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SOURCENAME_AS_STRING_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SOURCENAME_AS_STRING_AS_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FALSE_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
142	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode  ==  null)  {	  if(jsDocInfo!=    null    &&    irNode    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
143	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo  ==  null)  {	  if(jsDocInfo!=    null    &&    irNode    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
144	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
145	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
146	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
147	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
148	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
149	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
150	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
151	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
152	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
153	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
154	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
155	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
156	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
157	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  false,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  false,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  false,  jsDocInfo);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
158	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(jsDocInfo,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(jsDocInfo,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(jsDocInfo,  false);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
159	[BUG]  [BUGGY]  Node  irNode  =  irNode.processName(fileLevelJsDocBuilder,  false);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  irNode.processName(fileLevelJsDocBuilder,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  irNode.processName(fileLevelJsDocBuilder,  false);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
160	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isConstructor())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isConstructor())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isConstructor())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
161	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isConstructor())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isConstructor())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isConstructor())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
162	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
163	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
164	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.hasChildren())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
165	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
166	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
167	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
168	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getChildCount()  >  1)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getChildCount()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getChildCount()  >  1)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
169	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
170	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
171	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
172	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
173	[BUG]  [BUGGY]  if(irNode  ==  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  ||  jsDocInfo.getType()  ==  Token.NAME)  {	  if(jsDocInfo    ==    null    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
174	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()!=  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getType()!=  Token.NAME)  {	  if(jsDocInfo    ==    null    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
175	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
176	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
177	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
178	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
179	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
180	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(node,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processNameAsString(node,  true);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
181	[BUG]  [BUGGY]  Node  irNode  =  transformerDispatcher.processNameAsString(irNode,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformerDispatcher.processNameAsString(irNode,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformerDispatcher.processNameAsString(irNode,  false);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
182	[BUG]  [BUGGY]  Node  irNode  =  transformerDispatcher.processNameAsString(node,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformerDispatcher.processNameAsString(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformerDispatcher.processNameAsString(node,  true);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
183	[BUG]  [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(jsDocInfo,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformDispatcher.processNameAsString(jsDocInfo,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformDispatcher.processNameAsString(jsDocInfo,  true);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
184	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  node))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  node))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  node))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,    irNode))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
185	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,    irNode))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
186	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAME,  irNode))  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAME,  irNode))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAME,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,    irNode))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
187	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,    irNode))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
188	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
189	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
190	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
191	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
192	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
193	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
194	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isJSDoc())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isJSDoc())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isJSDoc())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
195	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isJSDoc())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isJSDoc())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isJSDoc())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
196	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
197	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
198	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isFunction())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isFunction())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isFunction())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isFunction())    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
199	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isFunction())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isFunction())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isFunction())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isFunction())    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
200	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
201	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  ||  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  ||  jsDocInfo.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
202	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
203	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
204	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
205	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
206	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
207	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
208	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
209	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.hasChildren())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
210	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
211	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
212	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
213	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
214	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
215	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
216	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
217	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
218	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SOURCENAME_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SOURCENAME_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SOURCENAME_AS_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
219	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isReferenceName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isReferenceName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
220	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSourceName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSourceName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSourceName())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
221	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isNone())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isNone())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isNone())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isNone())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
222	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isNone())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isNone())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isNone())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isNone())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
223	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSynthetic())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSynthetic())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSynthetic())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isNone())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
224	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNode())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNode())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isNode())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isNone())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
225	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo    ==    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
226	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.isSimpleName())  {	  if(jsDocInfo!=    null    &&    irNode.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
227	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.isSimpleName())  {	  if(jsDocInfo!=    null    &&    irNode.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
228	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.isSimpleName())  {	  if(jsDocInfo!=    null    &&    irNode.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
229	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
230	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!irNode.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!irNode.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!irNode.isSimpleName())  {	  if(jsDocInfo!=    null    &&    irNode.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
231	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getString()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getString()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getString()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
232	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getSourceFile()))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getSourceFile()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getSourceFile()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
233	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(jsDocInfo.getString()))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(jsDocInfo.getString()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(jsDocInfo.getString()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
234	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||!NodeUtil.isName(jsDocInfo.getString()))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||!NodeUtil.isName(jsDocInfo.getString()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||!NodeUtil.isName(jsDocInfo.getString()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
235	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getLocalPart()))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getLocalPart()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getLocalPart()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
236	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
237	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getLastChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
238	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
239	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
240	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
241	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
242	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  jsDocInfo.isSimpleName())  {	  if(jsDocInfo!=    null    ||    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
243	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverview();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverview();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverview();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
244	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getParent()  :  null;  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getParent()  :  null;	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
245	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewInfo();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewInfo();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewInfo();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
246	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getLineno();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getLineno();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getLineno();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
247	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  irNode.getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  irNode.getParent();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  irNode.getParent();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
248	[BUG]  [BUGGY]  if(irNode!=  null  ||  jsDocInfo!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  jsDocInfo!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  jsDocInfo!=  null)  {	  if(irNode!=    null    &&    jsDocInfo!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
249	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getLastChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getLastChild()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getLastChild()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getFirstChild()    ==    node)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
250	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getFirstChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getFirstChild()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  ||  irNode.getFirstChild()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getFirstChild()    ==    node)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
251	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getFirstChild()    ==    node)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
252	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getFirstChild()    ==    node)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
253	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  irNode.getSourceFile();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  irNode.getSourceFile();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  irNode.getSourceFile();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
254	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getSourceFile()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getSourceFile()  :  null;  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getSourceFile()  :  null;	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
255	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getResourceFile();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getResourceFile();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getResourceFile();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
256	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
257	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
258	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
259	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
260	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
261	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
262	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
263	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
264	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getChildCount()  >  1)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getChildCount()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getChildCount()  >  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
265	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  <  1)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  <  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  <  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
266	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  2)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  2)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  2)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
267	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  3)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  3)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  3)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
268	[BUG]  [BUGGY]  Node  irNode  =  transformerDispatcher.processName(node,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformerDispatcher.processName(node,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformerDispatcher.processName(node,  false);	  Node    irNode    =    transformDispatcher.processName(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
269	[BUG]  [BUGGY]  Node  irNode  =  transformerDispatcher.processName(irNode,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  transformerDispatcher.processName(irNode,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  transformerDispatcher.processName(irNode,  true);	  Node    irNode    =    transformDispatcher.processName(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
270	[BUG]  [BUGGY]  Node  irNode  =  node.processName(irNode,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  node.processName(irNode,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  node.processName(irNode,  false);	  Node    irNode    =    transformDispatcher.processName(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
271	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode  ==  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode  ==  null)  {	  if(jsDocInfo!=    null    ||    irNode    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
272	[BUG]  [BUGGY]  if(irNode!=  null  ||  jsDocInfo  ==  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  jsDocInfo  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  jsDocInfo  ==  null)  {	  if(jsDocInfo!=    null    ||    irNode    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
273	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
274	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
275	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_COMMENT_WARNING))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_COMMENT_WARNING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_COMMENT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
276	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
277	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()!=  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.getType()!=  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    >=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
278	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()!=  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()!=  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    >=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
279	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
280	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
281	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING)||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING)||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING)||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
282	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
283	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
284	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
285	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
286	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
287	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
288	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode!=  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
289	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode  ==  null  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
290	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
291	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
292	[BUG]  [BUGGY]  if(irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
293	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
294	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >=  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >=  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
295	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
296	[BUG]  [BUGGY]  if(irNode!=  null  ||  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  ||  irNode!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  ||  irNode!=  null)  {	  if(irNode!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
297	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode  ==  null)  {	  if(irNode!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
298	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isFunctionName())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isFunctionName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isFunctionName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
299	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
300	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isExtern())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isExtern())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isExtern())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
301	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isConstructor())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isConstructor())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isConstructor())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
302	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  ||  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  ||  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  ||  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
303	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
304	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
305	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
306	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAME_AS_STRING))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
307	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(irNode,  node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(irNode,  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  handleJsDoc(irNode,  node);	  JSDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
308	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  transformDispatcher.handleJsDoc(node,  irNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JSDocInfo  jsDocInfo  =  transformDispatcher.handleJsDoc(node,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  transformDispatcher.handleJsDoc(node,  irNode);	  JSDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
309	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  getJsDocInfo(node,  irNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JSDocInfo  jsDocInfo  =  getJsDocInfo(node,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  getJsDocInfo(node,  irNode);	  JSDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
310	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  getJsDocInfo(irNode,  node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JSDocInfo  jsDocInfo  =  getJsDocInfo(irNode,  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  getJsDocInfo(irNode,  node);	  JSDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
311	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode,  irNode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode,  irNode);	  JSDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
312	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
313	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
314	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NODE))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NODE))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NODE))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
315	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  handleJsDoc(irNode,  node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  handleJsDoc(irNode,  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  handleJsDoc(irNode,  node);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
316	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  transformDispatcher.handleJsDoc(node,  irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  transformDispatcher.handleJsDoc(node,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  transformDispatcher.handleJsDoc(node,  irNode);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
317	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  handleJSDoc(irNode,  node);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  handleJSDoc(irNode,  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  handleJSDoc(irNode,  node);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
318	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  getJsDocInfo(node,  irNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  getJsDocInfo(node,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  getJsDocInfo(node,  irNode);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
319	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  getJsDocInfo(irNode,  node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  getJsDocInfo(irNode,  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  getJsDocInfo(irNode,  node);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
320	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
321	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
322	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
323	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
324	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
325	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
326	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
327	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
328	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >=  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >=  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
329	[BUG]  [BUGGY]  if(irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
330	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  <=  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  <=  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  <=  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
331	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
332	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
333	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING)||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING)||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING)||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
334	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.hasSourceFile())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.hasSourceFile())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.hasSourceFile())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.hasSourceFile())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
335	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.hasSourceFile())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.hasSourceFile())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.hasSourceFile())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.hasSourceFile())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
336	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.hasSourceFile())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.hasSourceFile())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.hasSourceFile())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.hasSourceFile())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
337	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.hasName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.hasName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.hasName())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.hasSourceFile())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
338	[BUG]  [BUGGY]  if(irNode  ==  null  ||  jsDocInfo!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  ||  jsDocInfo!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  ||  jsDocInfo!=  null)  {	  if(jsDocInfo    ==    null    ||    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
339	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
340	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
341	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
342	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
343	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  jsDocInfo.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  jsDocInfo.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  jsDocInfo.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
344	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
345	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isExtern())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isExtern())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isExtern())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
346	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isExtern())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isExtern())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isExtern())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
347	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileParent();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileParent();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileParent();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
348	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewScope();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewScope();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewScope();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
349	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
350	[BUG]  [BUGGY]  if(irNode  ==  null  &&  jsDocInfo!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  jsDocInfo!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  jsDocInfo!=  null)  {	  if(irNode!=    null    &&    jsDocInfo!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
351	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canBeEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canBeEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canBeEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
352	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode!=  null)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
353	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
354	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
355	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
356	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getNext()  ==  node)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getNext()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getNext()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getFirstChild()    ==    node)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
357	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
358	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
359	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
360	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_WARNING))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_WARNING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
361	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().isSimpleName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().isSimpleName())  {	  if(jsDocInfo!=    null    &&    irNode.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
362	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(irNode,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JSDocInfo  jsDocInfo  =  handleJsDoc(irNode,  null);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  handleJsDoc(irNode,  null);	  JSDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
363	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
364	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  handleJsDoc(irNode,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  handleJsDoc(irNode,  null);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  handleJsDoc(irNode,  null);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
365	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  handleJSDoc(node,  irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  handleJSDoc(node,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  handleJSDoc(node,  irNode);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
366	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isDeclaration())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isDeclaration())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isDeclaration())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
367	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
368	[BUG]  [BUGGY]  if(irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
369	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getChildCount()  >  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getChildCount()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
370	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()  ==  null)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
371	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSourceFile())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSourceFile())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSourceFile())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
372	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSource())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSource())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSource())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
373	[BUG]  [BUGGY]  if(irNode  ==  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  jsDocInfo.getType()  ==  Token.NAME)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
374	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isInterface())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isInterface())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isInterface())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
375	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSourceFile())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSourceFile())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSourceFile())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.hasSourceFile())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
376	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  null);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(node,  null);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
377	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.transformName(node,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.transformName(node,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.transformName(node,  false);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
378	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
379	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
380	[BUG]  [BUGGY]  if(irNode  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo    ==    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
381	[BUG]  [BUGGY]  if(irNode  ==  null  ||  jsDocInfo  ==  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  ||  jsDocInfo  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  ||  jsDocInfo  ==  null)  {	  if(jsDocInfo    ==    null    ||    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
382	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canBeEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.canBeEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.canBeEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
383	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
384	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode!=  null)  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
385	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
386	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode!=  null)  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
387	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  node!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  node!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  node!=  null)  {	  if(irNode!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
388	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode!=  null)  {	  if(irNode!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
389	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NAME))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NAME))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NAME))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
390	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  jsDocInfo);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
391	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewName();  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo.getFileOverviewName();	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
392	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
393	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
394	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.isJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
395	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(rootNodeJsDocHolder,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(rootNodeJsDocHolder,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(rootNodeJsDocHolder,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
396	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAMES_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAMES_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.FIELD_NAMES_AS_STRING))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
397	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
398	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
399	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
400	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setSourceFile(rootNodeJsDocBuilder);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(rootNodeJsDocBuilder);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
401	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(new  File(irNode));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setSourceFile(new  File(irNode));  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(new  File(irNode));	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
402	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(new  File(irNode,  node));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setSourceFile(new  File(irNode,  node));  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(new  File(irNode,  node));	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
403	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(new  File(irNode),  node);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setSourceFile(new  File(irNode),  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(new  File(irNode),  node);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
404	[BUG]  [BUGGY]  irNode.setSourceFile(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  irNode.setSourceFile(rootNodeJsDocBuilder);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	irNode.setSourceFile(rootNodeJsDocBuilder);	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
405	[BUG]  [BUGGY]  irNode.setSourceFile(jsDocInfo);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  irNode.setSourceFile(jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	irNode.setSourceFile(jsDocInfo);	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
406	[BUG]  [BUGGY]  irNode.setSourceName(jsDocInfo);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  irNode.setSourceName(jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	irNode.setSourceName(jsDocInfo);	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
407	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.hasChildren())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.isSimpleName()  &&  jsDocInfo.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
408	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  irNode!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  irNode!=  null)  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
409	[BUG]  [BUGGY]  if(irNode  ==  null  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo    ==    null    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
410	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  >=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||  jsDocInfo.getType()  >=  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||  jsDocInfo.getType()  >=  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    >=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
411	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NAME,  irNode))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NAME,  irNode))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NAME,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,    irNode))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
412	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING,  irNode))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING,  irNode))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,    irNode))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
413	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.exists())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.exists())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.exists())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
414	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDocIncluded())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDocIncluded())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDocIncluded())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
415	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getSourceName()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getSourceName()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getSourceName()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
416	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getLocalName()))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getLocalName()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isName(jsDocInfo.getLocalName()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
417	[BUG]  [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode  ==  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode  ==  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
418	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
419	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getJSDocInfo()!=  null)  {	  if(jsDocInfo!=    null    ||    irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
420	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getJSDocInfo()!=  null)  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
421	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
422	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&  irNode.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
423	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSourceFile())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSourceFile())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSourceFile())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
424	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo    ==    null    ||    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
425	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_COMMENT_WARNING))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_COMMENT_WARNING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_COMMENT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
426	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.WRITE_COMMENT_WARNING))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.WRITE_COMMENT_WARNING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.WRITE_COMMENT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
427	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.SUSPICIOUS_COMMENT_WARNING))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
428	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
429	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
430	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
431	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getFirstChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getFirstChild()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDoc()  &&  irNode.getFirstChild()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isJSDoc())    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
432	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.VAR)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
433	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.CATCH)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.CATCH)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getType()  ==  Token.CATCH)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
434	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    ||    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
435	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getFirstChild()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getFirstChild()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getFirstChild()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
436	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getChildCount()  ==  2)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getChildCount()  ==  2)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getChildCount()  ==  2)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
437	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
438	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
439	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
440	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
441	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ES5_STRICT_RESERVED_KEYWORDS))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ES5_STRICT_RESERVED_KEYWORDS))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ES5_STRICT_RESERVED_KEYWORDS))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
442	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ES5_STRICT_RESERVED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ES5_STRICT_RESERVED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ES5_STRICT_RESERVED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
443	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isExtern())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isExtern())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.isExtern())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasJSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
444	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
445	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isString()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isString()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isString()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
446	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo  ==  null?  jsDocInfo.getSourceFile()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo  ==  null?  jsDocInfo.getSourceFile()  :  null;  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo  ==  null?  jsDocInfo.getSourceFile()  :  null;	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
447	[BUG]  [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSynthetic())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  ||!jsDocInfo.isSynthetic())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  ||!jsDocInfo.isSynthetic())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isExtern())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
448	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
449	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
450	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getLastChild().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getLastChild().getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
451	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
452	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY)||  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY)||  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY)||  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_ARRAY))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
453	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(jsDocInfo    ==    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
454	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isString())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isNone())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
455	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNone()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNone()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isNone()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isNone())    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
456	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isString()  ||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isString()  ||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isString()  ||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
457	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
458	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
459	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  node)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
460	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo  ==  null?  jsDocInfo.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo  ==  null?  jsDocInfo.getParent()  :  null;  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo  ==  null?  jsDocInfo.getParent()  :  null;	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
461	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getFileParent()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getFileParent()  :  null;  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  fileLevelJsDocBuilder  =  jsDocInfo!=  null?  jsDocInfo.getFileParent()  :  null;	  Node    fileLevelJsDocBuilder    =    jsDocInfo.getParent();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
462	[BUG]  [BUGGY]  jsDocInfo.setName(node);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setName(node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setName(node);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
463	[BUG]  [BUGGY]  jsDocInfo.setNameAsString(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setNameAsString(node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setNameAsString(node);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
464	[BUG]  [BUGGY]  jsDocInfo.setSourceFile(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setSourceFile(fileOverviewInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setSourceFile(fileOverviewInfo);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
465	[BUG]  [BUGGY]  jsDocInfo.setFileName(node);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  jsDocInfo.setFileName(node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	jsDocInfo.setFileName(node);	  jsDocInfo.setSourceFile(node);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
466	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode!=  null)  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
467	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  irNode.isJSDocInfo())  {	  if(irNode!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
468	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo()!=  null)  {	  if(irNode!=    null    &&    irNode!=    null)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
469	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null  &&  irNode.getJSDocInfo().length()  ==  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
470	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null  &&  irNode.getJSDocInfo().length()  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null  &&  irNode.getJSDocInfo().length()  >  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo()!=  null  &&  irNode.getJSDocInfo().length()  >  0)  {	  if(jsDocInfo!=    null    &&    irNode.getJSDocInfo().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
471	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.hasSourceFile())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.hasSourceFile())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.hasSourceFile())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.hasSourceFile())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
472	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
473	[BUG]  [BUGGY]  Node  irNode  =  node.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  node.processNameAsString(irNode,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  node.processNameAsString(irNode,  true);	  Node    irNode    =    transformDispatcher.processNameAsString(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
474	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.isSimpleName())  {	  if(jsDocInfo    ==    null    &&    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
475	[BUG]  [BUGGY]  JSDocInfo  jsDocInfo  =  handleJSDoc(irNode,  node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JSDocInfo  jsDocInfo  =  handleJSDoc(irNode,  node);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JSDocInfo  jsDocInfo  =  handleJSDoc(irNode,  node);	  JSDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
476	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isReferenced())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isReferenced())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isReferenced())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInternal())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
477	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isInternal()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isInternal()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isInternal()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInternal())    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
478	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NULL_OBJECT))  {	  if(jsDocInfo    ==    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
479	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.STRING)  {	  if(jsDocInfo    ==    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
480	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild()  ==  Node.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
481	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getString().equals( "string "))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getString().equals( "string "))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
482	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
483	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isString()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
484	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  ||  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  ||  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  ||  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
485	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  &&  irNode  ==  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  &&  irNode  ==  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  &&  irNode  ==  null)  {	  if(jsDocInfo!=    null    ||    irNode    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
486	[BUG]  [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  >=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  >=  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  ==  null  &&  jsDocInfo.getType()  >=  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    >=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
487	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.VISIBILITY_MISMATCH))    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
488	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
489	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
490	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
491	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimplename())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimplename())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimplename())  {	  if(jsDocInfo    ==    null    &&!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
492	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ALIASING_COMMENT_WARNING,  irNode))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ALIASING_COMMENT_WARNING,  irNode))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ALIASING_COMMENT_WARNING,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME,    irNode))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
493	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  null);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	NodeTraversal.traverse(compiler,  irNode,  fileLevelJsDocBuilder,  jsDocInfo,  null);	  NodeTraversal.traverse(compiler,    irNode,    fileLevelJsDocBuilder,    jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
494	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING))  {	  if(jsDocInfo    ==    null    &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
495	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ALIASING_COMMENT_WARNING))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ALIASING_COMMENT_WARNING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.ALIASING_COMMENT_WARNING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
496	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||  jsDocInfo.getType()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||  jsDocInfo.getType()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  ||  jsDocInfo.getType()  ==  Token.SCRIPT)  {	  if(irNode!=    null    &&    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
497	[BUG]  [BUGGY]  JsDocInfo  jsDocInfo  =  fileOverviewInfo(node,  irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  JsDocInfo  jsDocInfo  =  fileOverviewInfo(node,  irNode);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	JsDocInfo  jsDocInfo  =  fileOverviewInfo(node,  irNode);	  JsDocInfo    jsDocInfo    =    handleJsDoc(node,    irNode);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
498	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo!=  null)  {	  if(jsDocInfo!=    null    &&    irNode    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
499	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNamedString())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNamedString())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isNamedString())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
500	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
501	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
502	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.isSimpleName())  {	  if(irNode!=    null    &&    jsDocInfo!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
503	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING)  {	  if(irNode!=    null    &&    jsDocInfo!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
504	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&!irNode.hasJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&!irNode.hasJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo!=  null  &&!irNode.hasJSDocInfo())  {	  if(irNode!=    null    &&    jsDocInfo!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
505	[BUG]  [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.isExtern())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.isExtern())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  jsDocInfo!=  null  &&  jsDocInfo.isExtern())  {	  if(irNode!=    null    &&    jsDocInfo!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
506	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  ||  irNode.getFirstChild().getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    ||    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
507	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
508	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  ||!jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  ||!jsDocInfo.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  ||!jsDocInfo.isSimpleName())  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
509	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getFirstChild()  ==  Token.SCRIPT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getFirstChild()  ==  Token.SCRIPT)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  ||  irNode.getFirstChild()  ==  Token.SCRIPT)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    ||    irNode.getType()    ==    Token.SCRIPT)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
510	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELDS_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELDS_NAMES))  {	  if(jsDocInfo    ==    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
511	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getFirstChild()  ==  node)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getFirstChild()  ==  node)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isString()  &&  irNode.getFirstChild()  ==  node)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.getFirstChild()    ==    node)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
512	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.VAR)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.VAR)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
513	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING,  irNode))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING,  irNode))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING,  irNode))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
514	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_AS_STRING))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_AS_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_AS_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.AUTO_STRING_AS_STRING))    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
515	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
516	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
517	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isFunctionName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isFunctionName())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
518	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.hasEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.hasEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.hasEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
519	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.exists(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.exists(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.exists(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
520	[BUG]  [BUGGY]  Node  irNode  =  irNode.processName(node,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  irNode.processName(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  irNode.processName(node,  true);	  Node    irNode    =    transformDispatcher.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
521	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isImmutableValue(jsDocInfo.getString()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isImmutableValue(jsDocInfo.getString()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isImmutableValue(jsDocInfo.getString()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
522	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isJSDocInfo(jsDocInfo.getString()))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isJSDocInfo(jsDocInfo.getString()))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!NodeUtil.isJSDocInfo(jsDocInfo.getString()))  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&!NodeUtil.isName(jsDocInfo.getString()))    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
523	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  ||  jsDocInfo.getType()  ==  Token.STRING)  {	  if(jsDocInfo    ==    null    ||    jsDocInfo.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
524	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNamespace())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isNamespace())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isNamespace())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
525	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isReferenceName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isReferenceName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isReferenceName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
526	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.NAME);  irNode.setJSDocInfo(jsDocInfo);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.NAME);  irNode.setJSDocInfo(jsDocInfo);  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.NAME);  irNode.setJSDocInfo(jsDocInfo);  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
527	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.VAR);  irNode.setJSDocInfo(jsDocInfo);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.VAR);  irNode.setJSDocInfo(jsDocInfo);  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.VAR);  irNode.setJSDocInfo(jsDocInfo);  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
528	[BUG]  [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.BLOCK);  irNode.setJSDocInfo(jsDocInfo);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.BLOCK);  irNode.setJSDocInfo(jsDocInfo);  }  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  else  {  Preconditions.checkState(irNode.getType()  ==  Token.BLOCK);  irNode.setJSDocInfo(jsDocInfo);  }	  irNode.setJSDocInfo(jsDocInfo);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
529	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
530	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().hasChildren())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().hasChildren())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
531	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getString().equals( "string "))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getString().equals( "string "))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
532	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getLastChild().getString().equals( "STRING "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getLastChild().getString().equals( "STRING "))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)&&  irNode.getLastChild().getString().equals( "STRING "))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
533	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.exists(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.exists(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.exists(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.canEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
534	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode!=  null  &&  irNode.getJSDocInfo().getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&    irNode!=    null    &&    irNode.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
535	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  ||  jsDocInfo!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  ||  jsDocInfo!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  ||  jsDocInfo!=  null)  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
536	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()!=  null)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.STRING  ||  irNode.getJSDocInfo()!=  null)  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
537	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(jsDocInfo    ==    null    ||!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
538	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processNameAsString(node,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processNameAsString(node,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processNameAsString(node,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
539	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  true,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(node,  true,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(node,  true,  jsDocInfo);	  Node    irNode    =    fileLevelJsDocBuilder.processName(node,    true);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
540	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.isJSDocInfo())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.isJSDocInfo())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.isSimpleName()  &&  irNode.isJSDocInfo())  {	  if(jsDocInfo!=    null    &&    irNode.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
541	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isSimpleName())  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
542	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!irNode.hasJSDocName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!irNode.hasJSDocName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  jsDocInfo.getType()  ==  Token.STRING  &&!irNode.hasJSDocName())  {	  if(jsDocInfo!=    null    &&    jsDocInfo.getType()    ==    Token.STRING    &&    irNode.hasJSDocName())    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
543	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().equals(jsDocInfo))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().equals(jsDocInfo))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().equals(jsDocInfo))  {	  if(irNode!=    null    &&    irNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
544	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
545	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.hasChildren()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.hasChildren()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.hasChildren()  &&  irNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&    jsDocInfo.isSimpleName()    &&    irNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
546	[BUG]  [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    ||!jsDocInfo.isEnabled(Feature.FLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
547	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.STRING  &&  irNode.getJSDocInfo().length()  >  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.STRING    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
548	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
549	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.FUNCTION)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
550	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.NAME)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isConstructor()  &&  irNode.getType()  ==  Token.NAME)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isConstructor())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
551	[BUG]  [BUGGY]  if(jsDocInfo  >=  null  &&  jsDocInfo.isSimpleName())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo  >=  null  &&  jsDocInfo.isSimpleName())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo  >=  null  &&  jsDocInfo.isSimpleName())  {	  if(jsDocInfo!=    null    ||    jsDocInfo.isSimpleName())    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
552	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_NAME))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_NAME))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.SCRIPT_NAME))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
553	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME)||  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME)||  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.FIELD_NAME)||  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
554	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getString().equals( "string "))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  irNode.getString().equals( "string "))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.QUOTE_FIELD_NAMES)||    irNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
555	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processNameAsString(irNode,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processNameAsString(irNode,  true);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processNameAsString(irNode,  true);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
556	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  true,  jsDocInfo);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  true,  jsDocInfo);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  true,  jsDocInfo);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
557	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  null);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  fileLevelJsDocBuilder.processName(irNode,  null);	  Node    irNode    =    fileLevelJsDocBuilder.processName(irNode,    true);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
558	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunction()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isFunction()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isFunction()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isFunction())    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
559	[BUG]  [BUGGY]  Node  irNode  =  irNode.processName(node,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  Node  irNode  =  irNode.processName(node,  false);  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	Node  irNode  =  irNode.processName(node,  false);	  Node    irNode    =    transformDispatcher.processName(irNode,    false);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
560	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLUSH_PASSED_TO_STRING))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLUSH_PASSED_TO_STRING))  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isEnabled(Feature.AUTO_CLUSH_PASSED_TO_STRING))  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isEnabled(Feature.CLUSH_PASSED_TO_STRING))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
561	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  <=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  <=  0)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  <=  0)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
562	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  1)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  1)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&  irNode.getType()  ==  Token.NAME  &&  irNode.getJSDocInfo().length()  >  1)  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.getJSDocInfo().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
563	[BUG]  [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasChildren())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(irNode!=  null  &&  irNode.getType()  ==  Token.NAME  &&!irNode.hasChildren())  {	  if(jsDocInfo!=    null    &&    irNode.getType()    ==    Token.NAME    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
564	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isName()  &&  irNode.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isName()  &&  irNode.getType()  ==  Token.STRING)  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isName()  &&  irNode.getType()  ==  Token.STRING)  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isName())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
565	[BUG]  [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().hasChildren())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  transformNameAsString(Name  node)  {  Node  irNode  =  transformDispatcher.processName(node,  true);  JSDocInfo  jsDocInfo  =  handleJsDoc(node,  irNode);      [BUGGY]  if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().hasChildren())  {  [BUGGY]      irNode.setJSDocInfo(jsDocInfo);  }  setSourceInfo(irNode,  node);  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformNameAsString  [RETURN_TYPE]  Node  Name  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  parsedComments  reservedKeywords  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  Name  node  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.22360679774997896	284	284	1	replace	if(jsDocInfo!=  null  &&!jsDocInfo.isSimpleName()  &&  irNode.getFirstChild().hasChildren())  {	  if(jsDocInfo!=    null    &&!jsDocInfo.isSimpleName()    &&    irNode.hasChildren())    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
