bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK  +  1;	  result    =    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
2	[BUG]  [BUGGY]  result  =  Integer.toString(Token.BLOCK,  token)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Integer.toString(Token.BLOCK,  token)+  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Integer.toString(Token.BLOCK,  token)+  1;	  result    =    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
3	[BUG]  [BUGGY]  result  =  Token.BLOCK  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  /  1;	  result    =    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
4	[BUG]  [BUGGY]  result  =  Integer.toString(Token.BLOCK)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Integer.toString(Token.BLOCK)+  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Integer.toString(Token.BLOCK)+  1;	  result    =    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  result  =  Token.BLOCK  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  +  2;	  result    =    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
6	[BUG]  [BUGGY]  result  =  Token.BLOCK  &  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  &  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  &  Token.BLOCK;	  return    Token.BLOCK    &    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  return    Token.BLOCK    &    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.STRING))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  ||  token.equals(Token.OBJECTLIT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.OBJECTLIT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.OBJECTLIT))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  ||  token.equals(Token.CALL))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.CALL))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.CALL))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
14	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
15	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
16	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
17	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  BLOCK:  return  Token.BLOCK;	  case    java.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
18	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK;	  case    java.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
19	[BUG]  [BUGGY]  case  Byte.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Byte.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Byte.BLOCK:  return  Token.BLOCK;	  case    java.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
20	[BUG]  [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  case    java.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
21	[BUG]  [BUGGY]  result  =  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;	  result    =    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  -  Token.BLOCK;	  result    =    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK  -  1;	  result    =    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK;	  result    =    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
26	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
27	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BOOLEAN;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
28	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
29	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.NAME;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
30	[BUG]  [BUGGY]  result  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
31	[BUG]  [BUGGY]  result  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
32	[BUG]  [BUGGY]  result  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
33	[BUG]  [BUGGY]  result  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
34	[BUG]  [BUGGY]  result  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
35	[BUG]  [BUGGY]  result  ||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
36	[BUG]  [BUGGY]  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
37	[BUG]  [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
38	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
39	[BUG]  [BUGGY]  if(Token.NAME!=  Token.STRING)  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.STRING)  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.STRING)  {  return  Token.STRING;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
40	[BUG]  [BUGGY]  Token.NAME:  return  Token.NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.NAME:  return  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.NAME:  return  Token.NAME;	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
41	[BUG]  [BUGGY]  if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
42	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
43	[BUG]  [BUGGY]  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
44	[BUG]  [BUGGY]  if(token!=  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
45	[BUG]  [BUGGY]  result  |=  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
46	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  ==  Token.EMPTY)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
47	[BUG]  [BUGGY]  if(Token.BLOCK.equals(name)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(name)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(name)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
48	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
49	[BUG]  [BUGGY]  result.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
50	[BUG]  [BUGGY]  if(Token.BLOCK.equals(name)||  Token.NAME.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(name)||  Token.NAME.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(name)||  Token.NAME.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
51	[BUG]  [BUGGY]  case  Token.OBJECTLIT:  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.OBJECTLIT:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.OBJECTLIT:	  case    Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
52	[BUG]  [BUGGY]  case  Token.OBJECTBLOCK:  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.OBJECTBLOCK:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.OBJECTBLOCK:	  case    Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
53	[BUG]  [BUGGY]  case  Token.FLOAT:  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.FLOAT:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.FLOAT:	  case    Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
54	[BUG]  [BUGGY]  ||  Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
55	[BUG]  [BUGGY]  if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
56	[BUG]  [BUGGY]  Token.BLOCK  =  new  BLOCK(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  new  BLOCK(Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  new  BLOCK(Token.BLOCK);	  if(Token.BLOCK!=    BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
57	[BUG]  [BUGGY]  result.equals(Token.STRING))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.STRING))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.STRING))  {  return  Token.BLOCK;  }	  result.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
58	[BUG]  [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
59	[BUG]  [BUGGY]  result.equals(Token.TEXT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.TEXT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.TEXT))  {  return  Token.BLOCK;  }	  result.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
60	[BUG]  [BUGGY]  result.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETELEM))  {  return  Token.BLOCK;  }	  result.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
61	[BUG]  [BUGGY]  result.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETPROP))  {  return  Token.BLOCK;  }	  result.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
62	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  -  1;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
63	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_TYPE  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_TYPE  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_TYPE  -  1;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
64	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  2;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_NAME  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_NAME  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_NAME  -  1;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
67	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  2;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
68	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)return  Token.BLOCK  +  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
69	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
70	[BUG]  [BUGGY]  ||  token.equals( "   "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals( "   "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals( "   "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
71	[BUG]  [BUGGY]  result.equals(token)||  token.equals( "   "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(token)||  token.equals( "   "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(token)||  token.equals( "   "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
72	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  token.equals( "_ "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  token.equals( "_ "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  token.equals( "_ "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
73	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  token.equals( "n "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  token.equals( "n "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  token.equals( "n "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
74	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
77	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_TYPE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_TYPE;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_TYPE;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
80	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF  -  1;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
81	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF  +  1;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
82	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  ||  Token.BLOCK_DEF;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  ||  Token.BLOCK_DEF;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF  ||  Token.BLOCK_DEF;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
83	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_TYPE;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_TYPE;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_TYPE;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
84	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
85	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
86	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
87	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
88	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
89	[BUG]  [BUGGY]  if(Token.NAME!=  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.NAME  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
90	[BUG]  [BUGGY]  result  =  Token.BLOCK.equals(token)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK.equals(token)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK.equals(token)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
92	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
93	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.GETTER_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.GETTER_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.GETTER_RESULT))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
94	[BUG]  [BUGGY]  result.equals(Token.STRING))  {  return  result;  }  else  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.STRING))  {  return  result;  }  else  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.STRING))  {  return  result;  }  else  {  return  Token.STRING;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
95	[BUG]  [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.EXPR_RESULT))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
96	[BUG]  [BUGGY]  result.equals(Token.FUNCTION))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.FUNCTION))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.FUNCTION))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
97	[BUG]  [BUGGY]  result.equals(Token.GETTER))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETTER))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETTER))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
98	[BUG]  [BUGGY]  result.equals(Token.NAME))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.NAME))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.NAME))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
99	[BUG]  [BUGGY]  result.equals(Token.CATCH))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.CATCH))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.CATCH))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
100	[BUG]  [BUGGY]  Token.BLOCK.equals(key))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(key))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(key))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
101	[BUG]  [BUGGY]  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
102	[BUG]  [BUGGY]  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
103	[BUG]  [BUGGY]  Token.BLOCK.equals(constructType(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(constructType(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(constructType(token))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
104	[BUG]  [BUGGY]  Token.BLOCK.equals(convertTokenType(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(convertTokenType(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(convertTokenType(token))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
105	[BUG]  [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
106	[BUG]  [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
107	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
108	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
109	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
110	[BUG]  [BUGGY]  result.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  return  Token.STRING;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
111	[BUG]  [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
112	[BUG]  [BUGGY]  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
113	[BUG]  [BUGGY]  result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
114	[BUG]  [BUGGY]  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
115	[BUG]  [BUGGY]  result.equals(Token.FOR))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.FOR))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.FOR))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
116	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK    |    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
117	[BUG]  [BUGGY]  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  |  Token.BLOCK;	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK    |    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
118	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK    |    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
119	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK    |    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
120	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK  |  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK    |    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
121	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
122	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
123	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
124	[BUG]  [BUGGY]  result:  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
125	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.BOOLEAN;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
126	[BUG]  [BUGGY]  case  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK  :  Token.BLOCK;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
127	[BUG]  [BUGGY]  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
128	[BUG]  [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.STRING))  {  return  Token.STRING;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
129	[BUG]  [BUGGY]  ||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
130	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
131	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
132	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
133	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
134	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
135	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
136	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  break;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK;  break;	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
137	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
138	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
139	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
140	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
141	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
142	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
143	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
144	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
145	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
146	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK    ==    Token.BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
147	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
148	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
149	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
150	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
151	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
152	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  :  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  :  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  :  Token.CATCH;	  return    Token.BLOCK?    Token.BLOCK    :    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
153	[BUG]  [BUGGY]  result:  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;	  return    Token.BLOCK?    Token.BLOCK    :    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
154	[BUG]  [BUGGY]  if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
155	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
156	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  return  Token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
157	[BUG]  [BUGGY]  if(token.bLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.bLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.bLOCK!=  Token.BLOCK)return  Token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
158	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  2;	  result:    return    Token.BLOCK    +    token;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
159	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  token  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  token  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  token  -  1;	  result:    return    Token.BLOCK    +    token;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
160	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  token  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  token  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  token  +  1;	  result:    return    Token.BLOCK    +    token;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
161	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  TOKEN_TYPE;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  TOKEN_TYPE;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  TOKEN_TYPE;	  result:    return    Token.BLOCK    +    token;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
162	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.NAME;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &  Token.NAME;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
163	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
164	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
165	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  -  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  -  1;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
166	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.NAME;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  Token.NAME;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
167	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
168	[BUG]  [BUGGY]  ||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
169	[BUG]  [BUGGY]  if(Token.OBJECTLIT.equals(token))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.OBJECTLIT.equals(token))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.OBJECTLIT.equals(token))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
170	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT)||  token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
171	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT)||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
172	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
173	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.STRING))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.STRING))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.STRING))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
174	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
175	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BOOLEAN))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BOOLEAN))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BOOLEAN))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
176	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
177	[BUG]  [BUGGY]  result  =  token  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token  -  1;	  result    =    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
178	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  -  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  -  2;	  result    =    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
179	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
180	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
181	[BUG]  [BUGGY]  |  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
182	[BUG]  [BUGGY]  ||  token.equals(TOKEN))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(TOKEN))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(TOKEN))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
183	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
184	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)?  Token.BLOCK  :  Token.BLOCK;	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
185	[BUG]  [BUGGY]  Token.BLOCK  =  Token.BLOCK.equals(token);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  Token.BLOCK.equals(token);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  Token.BLOCK.equals(token);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
186	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK,  c);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK,  c);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK,  c);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
187	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK,  true);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK,  true);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
188	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
189	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
190	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
191	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
192	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
193	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
194	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_TYPE)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.EXPR_TYPE)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.EXPR_TYPE)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
195	[BUG]  [BUGGY]  result:  return  Token.BLOCK  &  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  &  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  &  Token.EXPR_RESULT;	  result:    return    Token.BLOCK    |    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
196	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.EXPR_RESULT  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.EXPR_RESULT  +  1;	  result:    return    Token.BLOCK    |    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
197	[BUG]  [BUGGY]  result:  return  Token.BLOCK  -  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  -  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  -  Token.EXPR_RESULT;	  result:    return    Token.BLOCK    |    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
198	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  Token.EXPR_RESULT;	  result:    return    Token.BLOCK    |    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
199	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.EXPR_RESULT  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.EXPR_RESULT  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.EXPR_RESULT  -  1;	  result:    return    Token.BLOCK    |    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
200	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME  |  2;	  return    Token.BLOCK    |    Token.NAME    |    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
201	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.NAME  |  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.NAME  |  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.NAME  |  1;	  return    Token.BLOCK    |    Token.NAME    |    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
202	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.NAME  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME  -  1;	  return    Token.BLOCK    |    Token.NAME    |    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
203	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME  &  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.NAME  &  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME  &  1;	  return    Token.BLOCK    |    Token.NAME    |    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
204	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.NAME  |  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.NAME  |  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.NAME  |  1;	  return    Token.BLOCK    |    Token.NAME    |    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
205	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
206	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
207	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
208	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.FUNCTION))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.FUNCTION))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.FUNCTION))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
209	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
210	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.END))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.END))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.END))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
211	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK;	  if(Token.BLOCK    ==    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
212	[BUG]  [BUGGY]  if(token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  1;	  if(Token.BLOCK    ==    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
213	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  2;	  if(Token.BLOCK    ==    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
214	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK)return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)return  Token.BLOCK  +  1;	  if(Token.BLOCK    ==    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
215	[BUG]  [BUGGY]  result  =  Token.BLOCK  &  Token.NAME;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  &  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  &  Token.NAME;	  return    Token.BLOCK    &    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
216	[BUG]  [BUGGY]  result:  return  Token.BLOCK  &  Token.NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  &  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  &  Token.NAME;	  return    Token.BLOCK    &    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
217	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
218	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
219	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
220	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
221	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
222	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
223	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
224	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
225	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
226	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.NAME;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.NAME;	  result    =    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
227	[BUG]  [BUGGY]  result  =  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Integer.MIN_VALUE;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Integer.MIN_VALUE;	  result    =    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
228	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;	  Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
229	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  +  2;	  Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
230	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  /  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  /  1;	  Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
231	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  -  1;	  Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
232	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  token;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  token;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  +  token;	  Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
233	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
234	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
235	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
236	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
237	[BUG]  [BUGGY]  ||  token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
238	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.BOOLEAN;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
239	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BOOLEAN  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BOOLEAN  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BOOLEAN  :  Token.BLOCK;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
240	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BOOLEAN;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
241	[BUG]  [BUGGY]  result.equals(Token.STRING))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.STRING))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.STRING))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
242	[BUG]  [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.EXPR_RESULT))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
243	[BUG]  [BUGGY]  result.equals(Token.GETTER))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETTER))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETTER))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
244	[BUG]  [BUGGY]  result.equals(Token.CATCH))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.CATCH))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.CATCH))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
245	[BUG]  [BUGGY]  result.equals(Token.FOR))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.FOR))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.FOR))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
246	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
247	[BUG]  [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
248	[BUG]  [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
249	[BUG]  [BUGGY]  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
250	[BUG]  [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  return  Token.STRING;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
251	[BUG]  [BUGGY]  ||  token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
252	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.CATCH;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
253	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_TYPE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_TYPE;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_TYPE;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
254	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.NAME;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.NAME;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
255	[BUG]  [BUGGY]  result.equals(Token.BLOCK)&&  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)&&  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)&&  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
256	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
257	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
258	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.GETTER_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.GETTER_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.GETTER_RESULT))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
259	[BUG]  [BUGGY]  result:  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
260	[BUG]  [BUGGY]  result:  return  Token.NAME  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.NAME  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.NAME  |  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
261	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  Token.NAME;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  Token.NAME;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
262	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME,  token;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME,  token;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.NAME,  token;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
263	[BUG]  [BUGGY]  result  =  Token.BLOCK  &  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  &  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  &  Token.CATCH;	  result    =    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
264	[BUG]  [BUGGY]  result  =  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;	  result    =    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
265	[BUG]  [BUGGY]  result  =  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  |  Token.CATCH;	  result    =    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
266	[BUG]  [BUGGY]  result  =  Token.BLOCK  /  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  /  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  /  Token.CATCH;	  result    =    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
267	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  -  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  -  Token.CATCH;	  result    =    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
268	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
269	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
270	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
271	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
272	[BUG]  [BUGGY]  if(token!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
273	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
274	[BUG]  [BUGGY]  if(token!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }	  if(token!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
275	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
276	[BUG]  [BUGGY]  if(token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
277	[BUG]  [BUGGY]  result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
278	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
279	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
280	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
281	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
282	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
283	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
284	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
285	[BUG]  [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
286	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
287	[BUG]  [BUGGY]  ||  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
288	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  Token.EXPR_RESULT  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  Token.EXPR_RESULT  ==  Token.BLOCK;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
289	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
290	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT!=  Token.BLOCK;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
291	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT);	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
292	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
293	[BUG]  [BUGGY]  if(token.equals(Token.SET)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.SET)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.SET)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.SET))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
294	[BUG]  [BUGGY]  result.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.SET))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
295	[BUG]  [BUGGY]  ||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
296	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
297	[BUG]  [BUGGY]  result.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
298	[BUG]  [BUGGY]  if(token.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
299	[BUG]  [BUGGY]  if(token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
300	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  token.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
301	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.make(Token.BLOCK,  token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
302	[BUG]  [BUGGY]  result.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
303	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
304	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
305	[BUG]  [BUGGY]  if(!token.equals(Token.BLOCK))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(!token.equals(Token.BLOCK))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(!token.equals(Token.BLOCK))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
306	[BUG]  [BUGGY]  if(Token.NAME.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
307	[BUG]  [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.NAME))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.NAME))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
308	[BUG]  [BUGGY]  case  BLOCK:  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  BLOCK:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  BLOCK:	  case    javascript.rhino.head.Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
309	[BUG]  [BUGGY]  case  Boolean.BLOCK:  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Boolean.BLOCK:	  case    javascript.rhino.head.Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
310	[BUG]  [BUGGY]  case  javascript.rhino.head.Token.BLACK:  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  javascript.rhino.head.Token.BLACK:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  javascript.rhino.head.Token.BLACK:	  case    javascript.rhino.head.Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
311	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
312	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  >>  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
313	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  Token.BLOCK!=  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
314	[BUG]  [BUGGY]  ||  Token.BLOCK  >=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  >=  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
315	[BUG]  [BUGGY]  ||  Token.BLOCK  [Delete]  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  [Delete]  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  [Delete]  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
316	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.CATCH;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
317	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
318	[BUG]  [BUGGY]  ||  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
319	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
320	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
321	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
322	[BUG]  [BUGGY]  ||  token!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
323	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
324	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
325	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  +  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  +  2;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
326	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
327	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.STRING)  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.STRING)  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.STRING)  {  return  Token.STRING;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
328	[BUG]  [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
329	[BUG]  [BUGGY]  if(token!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
330	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
331	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.NUMBER;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.NUMBER;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.NUMBER;	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
332	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.TRY)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.TRY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.TRY)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
333	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK,  true);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK,  true);	  Token.BLOCK:    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
334	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK  |  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK  |  Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK  |  Token.BLOCK);	  Token.BLOCK:    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
335	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK,  c);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK,  c);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK,  c);	  Token.BLOCK:    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
336	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK);	  Token.BLOCK:    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
337	[BUG]  [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STRING;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STRING;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STRING;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
338	[BUG]  [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STRICT_RESERVED_KEYWORDS;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STRICT_RESERVED_KEYWORDS;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STRICT_RESERVED_KEYWORDS;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
339	[BUG]  [BUGGY]  case  BLOCK:  return  Token.STRICT_RESERVED_KEYWORDS;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.STRICT_RESERVED_KEYWORDS;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  BLOCK:  return  Token.STRICT_RESERVED_KEYWORDS;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
340	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.STRICT_RESERVED_KEYWORDS;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.STRICT_RESERVED_KEYWORDS;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.STRICT_RESERVED_KEYWORDS;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
341	[BUG]  [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STANDARD;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STANDARD;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.STANDARD;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
342	[BUG]  [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK  +  1;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
343	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.EXPR_RESULT;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
344	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT  ||  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT  ||  Token.EXPR_RESULT;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
345	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
346	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  Token.EXPR_RESULT;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
347	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EMPTY;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EMPTY;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.EMPTY;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
348	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  2;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
349	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  /  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  /  1;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
350	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  3;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  3;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  3;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
351	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
352	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
353	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
354	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
355	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
356	[BUG]  [BUGGY]  result  |=  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  Token.BLOCK  |  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
357	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.BLOCK  |  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
358	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.CATCH;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
359	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
360	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  &  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  &  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  &  Token.BLOCK;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
361	[BUG]  [BUGGY]  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
362	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  :  Token.NAME;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  :  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  :  Token.NAME;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
363	[BUG]  [BUGGY]  result:  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  Token.BLOCK?  Token.BLOCK  :  Token.NAME;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
364	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
365	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME,  token;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME,  token;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.NAME,  token;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
366	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME  +  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.NAME  +  1;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
367	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.STRING;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.STRING;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.STRING;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
368	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
369	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.NAME  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME  :  Token.BLOCK;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
370	[BUG]  [BUGGY]  return  Token.NAME?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.NAME?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.NAME?  Token.BLOCK  :  Token.BLOCK;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
371	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.NAME  :  Token.BOOLEAN;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
372	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.STRING;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.STRING;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.NAME  :  Token.STRING;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
373	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  ||  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLOCK  ||  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  ==  Token.BLOCK  ||  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
374	[BUG]  [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token!=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
375	[BUG]  [BUGGY]  ||(token!=  Token.BLOCK  ||  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token!=  Token.BLOCK  ||  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token!=  Token.BLOCK  ||  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
376	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  ==  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
377	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  ==  Token.BLOCK  &&  token!=  Token.NAME))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
378	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.STRING))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.STRING))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  ==  Token.BLOCK  &&  token!=  Token.STRING))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
379	[BUG]  [BUGGY]  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
380	[BUG]  [BUGGY]  if(token!=  Token.STRING)  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.STRING)  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.STRING)  {  return  Token.STRING;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
381	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
382	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
383	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
384	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  Token.CATCH;	  return    Token.BLOCK    -    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
385	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  Token.BLOCK;	  return    Token.BLOCK    -    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
386	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  /  Token.CATCH;	  return    Token.BLOCK    -    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
387	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
388	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
389	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
390	[BUG]  [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
391	[BUG]  [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
392	[BUG]  [BUGGY]  if(Token.NAME.equals(token))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME.equals(token))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME.equals(token))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
393	[BUG]  [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.CALL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.CALL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME)||  token.equals(Token.CALL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
394	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
395	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  null)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
396	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK  +  2;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK  +  2;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK  +  2;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
397	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
398	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.make(Token.BLOCK,  token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
399	[BUG]  [BUGGY]  result.equals(token)||  result.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(token)||  result.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(token)||  result.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
400	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
401	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)&&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)&&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)&&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
402	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
403	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
404	[BUG]  [BUGGY]  if(token  ==  Token.CATCH)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.CATCH)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.CATCH)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
405	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
406	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK;  break;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK;  break;	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
407	[BUG]  [BUGGY]  result  =  Token.BLOCK.equals(token)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK.equals(token)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK.equals(token)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
408	[BUG]  [BUGGY]  result  =  token.equals(Token.EXPR_RESULT)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.EXPR_RESULT)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.EXPR_RESULT)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
409	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
410	[BUG]  [BUGGY]  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  &&  Token.EXPR_RESULT  +  1;	  result:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
411	[BUG]  [BUGGY]  result:  token.BLOCK  |  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  token.BLOCK  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  token.BLOCK  |  Token.EXPR_RESULT;	  result:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
412	[BUG]  [BUGGY]  result:  Token.BLOCK  |  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  Token.BLOCK  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  Token.BLOCK  |  Token.EXPR_RESULT;	  result:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
413	[BUG]  [BUGGY]  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT  ||  token;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT  ||  token;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  &&  Token.EXPR_RESULT  ||  token;	  result:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
414	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)  {  return  Token.FUNCTION;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
415	[BUG]  [BUGGY]  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
416	[BUG]  [BUGGY]  if(token  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
417	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.FUNCTION;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
418	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
419	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
420	[BUG]  [BUGGY]  ||  token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
421	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
422	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
423	[BUG]  [BUGGY]  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
424	[BUG]  [BUGGY]  if(token!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
425	[BUG]  [BUGGY]  if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
426	[BUG]  [BUGGY]  if(token!=  Token.STRING)  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.STRING)  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.STRING)  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
427	[BUG]  [BUGGY]  ||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
428	[BUG]  [BUGGY]  result.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
429	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
430	[BUG]  [BUGGY]  if(token.equals( " "))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals( " "))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals( " "))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
431	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.BLOCK  +  1;	  result:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
432	[BUG]  [BUGGY]  result:  return  Token.BLOCK  /  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  /  1;	  result:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
433	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
434	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
435	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
436	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
437	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
438	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
439	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
440	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
441	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BOOLEAN)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.BOOLEAN)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.BOOLEAN)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
442	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
443	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
444	[BUG]  [BUGGY]  Token.BLOCK.equals(name)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(name)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(name)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
445	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
446	[BUG]  [BUGGY]  if(Token.BLOCK.equals(name)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(name)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(name)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
447	[BUG]  [BUGGY]  result.equals(token)||  result.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(token)||  result.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(token)||  result.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
448	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  Token.BLOCK.equals(type))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  Token.BLOCK.equals(type))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  Token.BLOCK.equals(type))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
449	[BUG]  [BUGGY]  if(token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
450	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
451	[BUG]  [BUGGY]  ||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
452	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.SETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
453	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
454	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_TYPE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
455	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.EXPR_TYPE)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_TYPE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
456	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  Token.NAME;	  return    Token.BLOCK    -    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
457	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  Token.NAME;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  -  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  -  Token.NAME;	  return    Token.BLOCK    -    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
458	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.NAME  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.NAME  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  Token.NAME  +  1;	  return    Token.BLOCK    -    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
459	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  Token.BOOLEAN;	  return    Token.BLOCK    -    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
460	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
461	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
462	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
463	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
464	[BUG]  [BUGGY]  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
465	[BUG]  [BUGGY]  result.equals(Token.STRING))  {  return  Token.STRING;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.STRING))  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.STRING))  {  return  Token.STRING;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
466	[BUG]  [BUGGY]  Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
467	[BUG]  [BUGGY]  result.equals(Token.FOR))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.FOR))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.FOR))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
468	[BUG]  [BUGGY]  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.NAME))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
469	[BUG]  [BUGGY]  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
470	[BUG]  [BUGGY]  result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETTER))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETTER))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
471	[BUG]  [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
472	[BUG]  [BUGGY]  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
473	[BUG]  [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
474	[BUG]  [BUGGY]  ||  token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.SET))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
475	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.BLOCK  -  1;	  result:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
476	[BUG]  [BUGGY]  result:  token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  token.BLOCK  -  1;	  result:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
477	[BUG]  [BUGGY]  result:  return  Token.BLOCK  -  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  -  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  -  2;	  result:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
478	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
479	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
480	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
481	[BUG]  [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
482	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
483	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
484	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
485	[BUG]  [BUGGY]  ||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
486	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
487	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT)||  token.equals(Token.BLOCK))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
488	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
489	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT)||  token.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
490	[BUG]  [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  result;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  result;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.OBJECTLIT))  {  return  result;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
491	[BUG]  [BUGGY]  if(Token.STRING!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.STRING!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.STRING!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.STRING)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
492	[BUG]  [BUGGY]  ||  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.STRING)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.STRING)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
493	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.STRING  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.STRING  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.STRING  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.STRING)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
494	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.STRING)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.STRING)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
495	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.STRING  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.STRING  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.STRING  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.STRING)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
496	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
497	[BUG]  [BUGGY]  AssertionFailedError.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.BLOCK:  return  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
498	[BUG]  [BUGGY]  Node.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Node.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Node.BLOCK:  return  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
499	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.BLOCK  -  1;	  return    Token.BLOCK    |    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
500	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  /  Token.BLOCK  -  1;	  return    Token.BLOCK    |    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
501	[BUG]  [BUGGY]  result.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.STRING))  {  return  Token.STRING;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
502	[BUG]  [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
503	[BUG]  [BUGGY]  result.equals(Token.FOR))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.FOR))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.FOR))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
504	[BUG]  [BUGGY]  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
505	[BUG]  [BUGGY]  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
506	[BUG]  [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  case    javascript.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
507	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
508	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
509	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
510	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
511	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  else  {  return  Token.BLOCK;  }	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
512	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token))  {  return  Token.BLOCK  /  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
513	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  /  Token.BLOCK;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
514	[BUG]  [BUGGY]  case  Token.BLOCK  -  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK  -  Token.BLOCK;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
515	[BUG]  [BUGGY]  return  Token.BLOCK  -  token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  token.BLOCK;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
516	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  |  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
517	[BUG]  [BUGGY]  case  Token.BOOLEAN:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BOOLEAN:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BOOLEAN:  return  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
518	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  -  1;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
519	[BUG]  [BUGGY]  result:  return  Token.BLOCK  &  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  &  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  &  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
520	[BUG]  [BUGGY]  result:  return  Token.BLOCK  -  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  -  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
521	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
522	[BUG]  [BUGGY]  result:  return  Token.BLOCK  /  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  /  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  /  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
523	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
524	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
525	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
526	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null  ||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
527	[BUG]  [BUGGY]  result:  return  Token.BLOCK  &  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  &  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  &  Token.CATCH;	  result:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
528	[BUG]  [BUGGY]  result:  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;	  result:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
529	[BUG]  [BUGGY]  result:  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
530	[BUG]  [BUGGY]  result:  return  Token.BLOCK  -  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  -  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  -  Token.CATCH;	  result:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
531	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  Token.CATCH;	  result:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
532	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
533	[BUG]  [BUGGY]  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
534	[BUG]  [BUGGY]  |  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
535	[BUG]  [BUGGY]  ||  token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
536	[BUG]  [BUGGY]  ||  Token.BLOCK  >=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  >=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
537	[BUG]  [BUGGY]  ||  Token.CATCH!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.CATCH!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.CATCH!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
538	[BUG]  [BUGGY]  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
539	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
540	[BUG]  [BUGGY]  if(token!=  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
541	[BUG]  [BUGGY]  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  :  Token.BLOCK;	  Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
542	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token));  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.make(Token.BLOCK,  token));	  Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
543	[BUG]  [BUGGY]  AssertionFailedError.create(Token.BLOCK,  token));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.create(Token.BLOCK,  token));  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.create(Token.BLOCK,  token));	  Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
544	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
545	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
546	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.EXPR_RESULT;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
547	[BUG]  [BUGGY]  result:  return  Token.EXPR_BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.EXPR_BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.EXPR_BLOCK;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
548	[BUG]  [BUGGY]  result:  return  Token.EXPR_RESULT  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.EXPR_RESULT  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.EXPR_RESULT  |  Token.BLOCK;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
549	[BUG]  [BUGGY]  result:  return  Token.EXPR_RESULT  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.EXPR_RESULT  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.EXPR_RESULT  +  1;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
550	[BUG]  [BUGGY]  result:  return  Token.BLOCK_RESULT;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK_RESULT;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
551	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)return  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
552	[BUG]  [BUGGY]  if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.BLOCK!=  Token.BLOCK)return  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
553	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  return  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
554	[BUG]  [BUGGY]  if(tokenType!=  Token.BLOCK)return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(tokenType!=  Token.BLOCK)return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(tokenType!=  Token.BLOCK)return  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
555	[BUG]  [BUGGY]  AssertionFailedError.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
556	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
557	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.FUNCTION))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.FUNCTION))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.FUNCTION))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
558	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
559	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
560	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
561	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
562	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
563	[BUG]  [BUGGY]  if(Token.BLOCK!=  BLOCK  ||  Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  BLOCK  ||  Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  BLOCK  ||  Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
564	[BUG]  [BUGGY]  if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  2;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  2;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  BLOCK)  {  return  Token.BLOCK  +  2;  }	  if(Token.BLOCK!=    BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
565	[BUG]  [BUGGY]  ||  Token.BLOCK!=  0)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  0)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  0)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
566	[BUG]  [BUGGY]  ||  BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
567	[BUG]  [BUGGY]  case  Token.BOOLEAN:  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BOOLEAN:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BOOLEAN:	  case    Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
568	[BUG]  [BUGGY]  case  Token.BIGDECIMAL:  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BIGDECIMAL:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BIGDECIMAL:	  case    Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
569	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BOOLEAN;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
570	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.END;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.END;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.END;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
571	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)+  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)+  1;	  Token.BLOCK:    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
572	[BUG]  [BUGGY]  if(token.equals( " ")||  token.equals( "   "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals( " ")||  token.equals( "   "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals( " ")||  token.equals( "   "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
573	[BUG]  [BUGGY]  Token.BLOCK.equals(token)||  token.equals( "* "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)||  token.equals( "* "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)||  token.equals( "* "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
574	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
575	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
576	[BUG]  [BUGGY]  return  Token.BLOCK  /  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  /  2;	  return    Token.BLOCK    -    2;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
577	[BUG]  [BUGGY]  result:  return  Token.BLOCK_DEF;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK_DEF;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK_DEF;	  result:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
578	[BUG]  [BUGGY]  result:  return  Token.BLOCK  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  -  1  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  -  1  +  1;	  result:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
579	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
580	[BUG]  [BUGGY]  |  Token.EXPR_RESULT  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.EXPR_RESULT  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.EXPR_RESULT  ==  Token.BLOCK;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
581	[BUG]  [BUGGY]  ||  Token.BLOCK:  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK:  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK:  Token.EXPR_RESULT;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
582	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  +  1;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
583	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_TYPE  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_TYPE  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EXPR_TYPE  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_TYPE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
584	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_TYPE  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_TYPE  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EXPR_TYPE  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_TYPE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
585	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  Token.BLOCK;	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
586	[BUG]  [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.OBJECTLIT))  {  return  Token.BLOCK;  }	  result.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
587	[BUG]  [BUGGY]  token.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(token))  {  return  Token.BLOCK;  }	  result.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
588	[BUG]  [BUGGY]  &&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
589	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_NAME;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_NAME;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
590	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_DECEMBER;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_DECEMBER;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_DECEMBER;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
591	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_SIGNATURE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_SIGNATURE;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK_DEF  |  Token.BLOCK_SIGNATURE;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
592	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.BOOLEAN;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.BOOLEAN;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.BLOCK)  {  return  Token.BOOLEAN;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
593	[BUG]  [BUGGY]  if(token!=  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
594	[BUG]  [BUGGY]  Token.OBJECTLIT:  return  Token.OBJECTLIT;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.OBJECTLIT:  return  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.OBJECTLIT:  return  Token.OBJECTLIT;	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
595	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1L;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1L;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  1L;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
596	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  1  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
597	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN?  Token.BLOCK  :  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
598	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  +  1;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
599	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  |  ES5_STRICT_RESERVED_KEYWORDS;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  |  ES5_STRICT_RESERVED_KEYWORDS;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK  |  ES5_STRICT_RESERVED_KEYWORDS;	  result    =    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
600	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  |  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK  |  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK  |  1;	  result    =    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
601	[BUG]  [BUGGY]  ||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
602	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
603	[BUG]  [BUGGY]  Token.BLOCK  =  token.equalsIgnoreCase(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equalsIgnoreCase(Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equalsIgnoreCase(Token.BLOCK);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
604	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)+  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)+  1;	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
605	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  1L;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  1L;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME  |  1L;	  return    Token.BLOCK    |    Token.NAME    |    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
606	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  1  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.NAME  |  1  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.NAME  |  1  +  1;	  return    Token.BLOCK    |    Token.NAME    |    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
607	[BUG]  [BUGGY]  case  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
608	[BUG]  [BUGGY]  case  com.google.javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  com.google.javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  com.google.javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK;	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
609	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
610	[BUG]  [BUGGY]  ||  Token.NUMBER  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NUMBER  ==  Token.BLOCK;	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
611	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  BLOCK;	  result:    return    Token.BLOCK    +    token;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
612	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  DEFAULT_TYPE;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  DEFAULT_TYPE;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  DEFAULT_TYPE;	  result:    return    Token.BLOCK    +    token;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
613	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(TOKEN_BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(TOKEN_BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  Token.BLOCK.equals(TOKEN_BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
614	[BUG]  [BUGGY]  if(Token.BLOCK.equals(TOKEN)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(TOKEN)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(TOKEN)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
615	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
616	[BUG]  [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.OBJECTLIT))  {  return  Token.OBJECTLIT;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
617	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.BLOCK);	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
618	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BOOLEAN;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BOOLEAN;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  Token.BOOLEAN;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
619	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.BLOCK  -  1;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
620	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.BOOLEAN;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
621	[BUG]  [BUGGY]  Token.BLOCK:  token.equalsIgnoreCase(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equalsIgnoreCase(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equalsIgnoreCase(token))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
622	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  /  1;	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
623	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  /  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  /  2;	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
624	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
625	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(token))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
626	[BUG]  [BUGGY]  case  rhino.head.Token.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  rhino.head.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  rhino.head.Token.BLOCK:  return  Token.BLOCK;	  case    javascript.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
627	[BUG]  [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  javascript.rhino.head.Token.BLOCK:  return  Token.BLOCK  +  1;	  case    javascript.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
628	[BUG]  [BUGGY]  ||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
629	[BUG]  [BUGGY]  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
630	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  -  1;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
631	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(key))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(key))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(key))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
632	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(t))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(t))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(t))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
633	[BUG]  [BUGGY]  ||  token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
634	[BUG]  [BUGGY]  result.equals(Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK);	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
635	[BUG]  [BUGGY]  result.equals(Token.GETELEM))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.GETELEM))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.GETELEM))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
636	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
637	[BUG]  [BUGGY]  token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
638	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
639	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
640	[BUG]  [BUGGY]  ||  Token.NAME  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NAME  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NAME  ==  Token.BLOCK;	  if(Token.BLOCK    ==    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
641	[BUG]  [BUGGY]  if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
642	[BUG]  [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
643	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME  ==  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME  ==  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
644	[BUG]  [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
645	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
646	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
647	[BUG]  [BUGGY]  if(Token.BLOCK!=  token)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  token)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  token)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
648	[BUG]  [BUGGY]  Token.BLOCK  :  return  Token.BLOCK_DEF;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  :  return  Token.BLOCK_DEF;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  :  return  Token.BLOCK_DEF;	  Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
649	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
650	[BUG]  [BUGGY]  if(token!=  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
651	[BUG]  [BUGGY]  if(token.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
652	[BUG]  [BUGGY]  Token.BLOCK.equals(this.token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(this.token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(this.token))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
653	[BUG]  [BUGGY]  Token.BLOCK.equals(cur))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(cur))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(cur))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
654	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
655	[BUG]  [BUGGY]  if(token.equals( " "))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals( " "))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals( " "))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
656	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  |  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK    |    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
657	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  -  1  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  -  1  +  1;	  result    =    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
658	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  1L;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  -  1L;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  -  1L;	  result    =    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
659	[BUG]  [BUGGY]  if(token!=  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
660	[BUG]  [BUGGY]  if(Token.OBJECTLIT.equals(token))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.OBJECTLIT.equals(token))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.OBJECTLIT.equals(token))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
661	[BUG]  [BUGGY]  return  Token.OBJECTLIT;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.OBJECTLIT;	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
662	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
663	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  >=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token  >=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  >=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
664	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
665	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
666	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
667	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
668	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  2;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  2;  }	  if(Token.BLOCK    ==    Token.BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
669	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  +  1;	  if(Token.BLOCK    ==    Token.BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
670	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
671	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.EXPR_RESULT;  }	  if(token!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
672	[BUG]  [BUGGY]  ||(token!=  Token.EXPR_RESULT  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token!=  Token.EXPR_RESULT  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token!=  Token.EXPR_RESULT  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
673	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  0;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  0;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
674	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  4;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  4;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  4;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
675	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
676	[BUG]  [BUGGY]  ||  token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
677	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
678	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.EXPR_RESULT)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
679	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
680	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
681	[BUG]  [BUGGY]  Token.BLOCK.equals(token)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
682	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
683	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BOOLEAN;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
684	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)|  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)|  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)|  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
685	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
686	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_TYPE)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.EXPR_TYPE)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.EXPR_TYPE)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
687	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
688	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
689	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  2;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  2;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  2;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
690	[BUG]  [BUGGY]  result  =  return  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  return  Token.BLOCK  |  Token.CATCH;	  result    =    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
691	[BUG]  [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  +  1;	  case    java.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
692	[BUG]  [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  java.rhino.head.Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;	  case    java.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
693	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.BOOLEAN;	  result:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
694	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
695	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
696	[BUG]  [BUGGY]  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
697	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
698	[BUG]  [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.OBJECTLIT))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.OBJECTLIT))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
699	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
700	[BUG]  [BUGGY]  Return  Token.BLOCK  -  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Return  Token.BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Return  Token.BLOCK  -  Token.BLOCK;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
701	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
702	[BUG]  [BUGGY]  ||(token  >=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token  >=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  >=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
703	[BUG]  [BUGGY]  ||(token  ==  Token.BLACK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLACK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  ==  Token.BLACK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
704	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
705	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BOOLEAN)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BOOLEAN)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BOOLEAN)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
706	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
707	[BUG]  [BUGGY]  ||  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
708	[BUG]  [BUGGY]  ||  token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
709	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  >>  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
710	[BUG]  [BUGGY]  result  =  Token.BLOCK  +  1L;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  +  1L;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  +  1L;	  result    =    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
711	[BUG]  [BUGGY]  result  =  Token.BLOCK  +  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  +  3;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  +  3;	  result    =    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
712	[BUG]  [BUGGY]  if(Token.BLOCK.equals(name)||  Token.CATCH.equals(name))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(name)||  Token.CATCH.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(name)||  Token.CATCH.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
713	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
714	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
715	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  if(token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  if(token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  if(token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
716	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  3;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  +  3;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
717	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)token.BLOCK  +  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
718	[BUG]  [BUGGY]  if(token!=  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
719	[BUG]  [BUGGY]  if(token  ==  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.GETTER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
720	[BUG]  [BUGGY]  if(token.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETPROP))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
721	[BUG]  [BUGGY]  if(token.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
722	[BUG]  [BUGGY]  ||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.LONG))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
723	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
724	[BUG]  [BUGGY]  result.equals(Token.RETURN))  {  return  Token.RETURN;  }  else  {  return  Token.RETURN;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.RETURN))  {  return  Token.RETURN;  }  else  {  return  Token.RETURN;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.RETURN))  {  return  Token.RETURN;  }  else  {  return  Token.RETURN;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
725	[BUG]  [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
726	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.BLOCK_RESULT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.BLOCK_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.EXPR_RESULT:  return  Token.BLOCK_RESULT;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
727	[BUG]  [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.EXPR_RESULT:  return  Token.EXPR_RESULT;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
728	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
729	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
730	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.ABSTRACT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.ABSTRACT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.ABSTRACT;	  return    Token.BLOCK?    Token.BLOCK    :    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
731	[BUG]  [BUGGY]  if(token!=  Token.SET)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.SET)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.SET)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.SET))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
732	[BUG]  [BUGGY]  if(token.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETELEM))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.SET))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
733	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.EXPR_RESULT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.EXPR_RESULT;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
734	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.NAME  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.NAME  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.NAME  +  1;	  return    Token.BLOCK    &    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
735	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.OBJECTLIT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.OBJECTLIT;	  return    Token.BLOCK    &    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
736	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
737	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
738	[BUG]  [BUGGY]  result  =  token.equalsIgnoreCase(Token.BLOCK)&&  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equalsIgnoreCase(Token.BLOCK)&&  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equalsIgnoreCase(Token.BLOCK)&&  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
739	[BUG]  [BUGGY]  Token.BLOCK  =  token.equalsIgnoreCase(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equalsIgnoreCase(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equalsIgnoreCase(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
740	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
741	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(token)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(token)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(token)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
742	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  3;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)return  Token.BLOCK  +  3;	  if(Token.BLOCK    ==    Token.BLOCK)return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
743	[BUG]  [BUGGY]  ||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
744	[BUG]  [BUGGY]  token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)&&  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
745	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
746	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
747	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.OBJECTLIT;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.OBJECTLIT;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
748	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.NAME);	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
749	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  3;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  3;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  +  3;	  Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
750	[BUG]  [BUGGY]  result:  return  Token.BLOCK  -  Token.NAME;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  -  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  -  Token.NAME;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
751	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME  |  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME  |  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.NAME  |  1;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
752	[BUG]  [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  |  Token.NAME  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  |  Token.NAME  +  1;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
753	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)return  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)return  Token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
754	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  2;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  -  2;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
755	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK    -    1;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
756	[BUG]  [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
757	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  /  Token.NAME;	  return    Token.BLOCK    -    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
758	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.OBJECTLIT;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  -  Token.OBJECTLIT;	  return    Token.BLOCK    -    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
759	[BUG]  [BUGGY]  case  Token.BLOCK  &  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK  &  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK  &  Token.BLOCK;	  return    Token.BLOCK    &    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
760	[BUG]  [BUGGY]  if(token!=  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
761	[BUG]  [BUGGY]  if(Token.LABEL!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.LABEL!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.LABEL!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
762	[BUG]  [BUGGY]  if(Token.LABEL  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.LABEL  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.LABEL  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
763	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
764	[BUG]  [BUGGY]  return  Token.NUMBER;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.NUMBER;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.NUMBER;	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
765	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK)  {  return  Token.NUMBER;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.BLOCK)  {  return  Token.NUMBER;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.BLOCK)  {  return  Token.NUMBER;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
766	[BUG]  [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.NUMBER;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.NUMBER;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.NUMBER;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
767	[BUG]  [BUGGY]  Token.NUMBER:  return  Token.NUMBER;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.NUMBER:  return  Token.NUMBER;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.NUMBER:  return  Token.NUMBER;	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
768	[BUG]  [BUGGY]  ||  Token.BLOCK!=  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  return  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
769	[BUG]  [BUGGY]  ||  Token.BLOCK!=  token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
770	[BUG]  [BUGGY]  ||  BLOCK!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  BLOCK!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  BLOCK!=  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
771	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BOOLEAN  |  Token.BLOCK;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
772	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BOOLEAN  +  1;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
773	[BUG]  [BUGGY]  return  Token.BOOLEAN  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BOOLEAN  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BOOLEAN  |  Token.BLOCK;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
774	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  |  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  |  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BOOLEAN  |  1;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
775	[BUG]  [BUGGY]  if(token!=  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
776	[BUG]  [BUGGY]  if(token  ==  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
777	[BUG]  [BUGGY]  if(Token.LABEL!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.LABEL!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.LABEL!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
778	[BUG]  [BUGGY]  if(Token.LABEL  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.LABEL  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.LABEL  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
779	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.LABEL;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.LABEL;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token!=  Token.BLOCK)  {  return  Token.LABEL;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
780	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK_NAME;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK_NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK_NAME;	  result    =    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
781	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK_FACTOR;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.BLOCK_FACTOR;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.BLOCK_FACTOR;	  result    =    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
782	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
783	[BUG]  [BUGGY]  return  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.FUNCTION;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.FUNCTION;	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
784	[BUG]  [BUGGY]  Token.FUNCTION:  return  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.FUNCTION:  return  Token.FUNCTION;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.FUNCTION:  return  Token.FUNCTION;	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
785	[BUG]  [BUGGY]  if(token  ==  Token.FUNCTION  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.FUNCTION  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.FUNCTION  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
786	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.FUNCTION;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
787	[BUG]  [BUGGY]  if(BLOCK!=  Token.BLOCK)return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(BLOCK!=  Token.BLOCK)return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(BLOCK!=  Token.BLOCK)return  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
788	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
789	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK)return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)return  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
790	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.NAME  :  Token.BLOCK  +  1;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
791	[BUG]  [BUGGY]  return  Token.BLOCK:  Token.NAME;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK:  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK:  Token.NAME;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
792	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
793	[BUG]  [BUGGY]  ||  BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
794	[BUG]  [BUGGY]  ||  token.equals( "BLOCK "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals( "BLOCK "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals( "BLOCK "))  {  return  Token.BLOCK;  }	  ||    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
795	[BUG]  [BUGGY]  ||  token.equals(SyntaxToken.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(SyntaxToken.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(SyntaxToken.BLOCK))  {  return  Token.BLOCK;  }	  ||    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
796	[BUG]  [BUGGY]  result  =  token.equalsIgnoreCase(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equalsIgnoreCase(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equalsIgnoreCase(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
797	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
798	[BUG]  [BUGGY]  case  ES5_RESERVED_KEYWORDS:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  ES5_RESERVED_KEYWORDS:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  ES5_RESERVED_KEYWORDS:  return  Token.BLOCK;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
799	[BUG]  [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLACK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLACK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLACK;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
800	[BUG]  [BUGGY]  Case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Case  ES5_STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
801	[BUG]  [BUGGY]  case  Token.LABEL:  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.LABEL:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.LABEL:	  case    Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
802	[BUG]  [BUGGY]  case  Token.BLACK:  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLACK:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLACK:	  case    Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
803	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  NUMBER)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  NUMBER)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
804	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
805	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  &&  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  &&  Token.EXPR_RESULT;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
806	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN?  Token.BLOCK  :  Token.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN?  Token.BLOCK  :  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN?  Token.BLOCK  :  Token.BOOLEAN;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
807	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
808	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  <  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  <  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  <  return  Token.BLOCK;	  Token.BLOCK    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
809	[BUG]  [BUGGY]  Token.BLOCK:  token.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
810	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.EXPR_RESULT;	  case    Token.BLOCK:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
811	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT);	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
812	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT,  Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT,  Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT,  Token.EMPTY))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
813	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT,  Object.class))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT,  Object.class))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)&&  token.equals(Token.EXPR_RESULT,  Object.class))  {  return  Token.BLOCK;  }	  result    =    token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
814	[BUG]  [BUGGY]  result  =  tokens.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  tokens.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  tokens.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
815	[BUG]  [BUGGY]  result  ||  token.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.BLOCK))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
816	[BUG]  [BUGGY]  result  |=  Token.BLOCK.equals(result))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  Token.BLOCK.equals(result))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  Token.BLOCK.equals(result))  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
817	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
818	[BUG]  [BUGGY]  if(Token.BLOCK  ==  BLOCK)  {  return  Token.BLOCK  +  1;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  BLOCK)  {  return  Token.BLOCK  +  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  BLOCK)  {  return  Token.BLOCK  +  1;  }	  if(Token.BLOCK!=    BLOCK)    {    return    Token.BLOCK    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
819	[BUG]  [BUGGY]  Result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
820	[BUG]  [BUGGY]  result.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
821	[BUG]  [BUGGY]  result.equals(Token.BLOCK));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK));  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK));	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
822	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
823	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
824	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
825	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
826	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
827	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BATCH;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.BATCH;	  return    Token.BLOCK?    Token.BLOCK    :    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
828	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
829	[BUG]  [BUGGY]  result:  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;	  result:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
830	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
831	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT?  Token.BLOCK  :  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT?  Token.BLOCK  :  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT?  Token.BLOCK  :  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  Token.BLOCK:    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
832	[BUG]  [BUGGY]  Token.BLOCK  ||  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  ||  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  ||  Token.BLOCK;	  Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
833	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH  |  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH  |  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
834	[BUG]  [BUGGY]  Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
835	[BUG]  [BUGGY]  if(result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(result.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
836	[BUG]  [BUGGY]  result.equals(Token.STRING))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.STRING))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.STRING))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
837	[BUG]  [BUGGY]  if(Token.SET.equals(token))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.SET.equals(token))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.SET.equals(token))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.SET))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
838	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  result:  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  result:  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EXPR_RESULT)  {  result:  return  Token.BLOCK;  }	  result:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
839	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null)  {  result:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  }	  result:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
840	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  result:  return  Token.BLOCK  |  Token.EXPR_RESULT;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  result:  return  Token.BLOCK  |  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EXPR_RESULT)  {  result:  return  Token.BLOCK  |  Token.EXPR_RESULT;  }	  result:    return    Token.BLOCK    &&    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
841	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  break;  }	  if(token    ==    Token.BLOCK)    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
842	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  <  1)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  <  1)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  <  1)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
843	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.LABEL)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.LABEL)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.LABEL)  {  return  Token.BLOCK  -  1;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
844	[BUG]  [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK?  Token.BLOCK  :  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  token.equals(Token.BLOCK?  Token.BLOCK  :  Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  token.equals(Token.BLOCK?  Token.BLOCK  :  Token.BLOCK);	  Token.BLOCK:    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
845	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  return  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  return  Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  return  Token.BLOCK);	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
846	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  return  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
847	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  return  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  return  Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  return  Token.BLOCK);	  if(Token.BLOCK!=    Token.BLOCK)return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
848	[BUG]  [BUGGY]  if(token  ==  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.OBJECTLIT)  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
849	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.EXPR_RESULT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.EXPR_RESULT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT)||  token.equals(Token.EXPR_RESULT))  {  return  Token.OBJECTLIT;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
850	[BUG]  [BUGGY]  case  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK?  Token.NAME  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK?  Token.NAME  :  Token.BLOCK;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
851	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.NAME  :  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.NAME  :  Token.CATCH;	  return    Token.BLOCK?    Token.NAME    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
852	[BUG]  [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  token.equals(Token.BLOCK)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
853	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.CATCH))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
854	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
855	[BUG]  [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
856	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  &&  Token.EXPR_RESULT;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
857	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
858	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
859	[BUG]  [BUGGY]  result  ||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  ||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  ||  token.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
860	[BUG]  [BUGGY]  parent.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  parent.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	parent.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
861	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
862	[BUG]  [BUGGY]  if(Token.LABEL  ==  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.LABEL  ==  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.LABEL  ==  Token.LABEL)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
863	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
864	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
865	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
866	[BUG]  [BUGGY]  case  Token.BLOCK  &  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK  &  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK  &  Token.CATCH;	  return    Token.BLOCK    &    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
867	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  &  Token.EXPR_RESULT;	  return    Token.BLOCK    &    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
868	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK  |  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK  |  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK    |    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
869	[BUG]  [BUGGY]  if(Token.BLOCK.equals(parent))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(parent))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(parent))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(name))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
870	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  /  1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  /  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  /  1;  }	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
871	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.BLOCK)return  Token.BLOCK  /  1;	  return    Token.BLOCK    /    1;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
872	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
873	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
874	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  token.equalsIgnoreCase(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
875	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.EXPR_RESULT;	  result    =    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
876	[BUG]  [BUGGY]  result  =  Token.BLOCK?  1  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK?  1  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK?  1  :  Token.BLOCK;	  result    =    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
877	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
878	[BUG]  [BUGGY]  parent.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  parent.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	parent.equals(Token.LABEL))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.LABEL))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
879	[BUG]  [BUGGY]  Token.BLOCK.equals(currToken))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(currToken))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(currToken))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
880	[BUG]  [BUGGY]  Token.BLOCK.equals(text))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(text))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(text))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
881	[BUG]  [BUGGY]  Token.BLOCK.equals(convertToken(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(convertToken(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(convertToken(token))  {  return  Token.BLOCK;  }	  Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
882	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.EXPR_RESULT;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
883	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  &&  token.equals(Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  &&  token.equals(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  &&  token.equals(Token.EXPR_RESULT);	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
884	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.EMPTY;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.EMPTY;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.EMPTY;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
885	[BUG]  [BUGGY]  result  |=  Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  Token.BLOCK.equals(token)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
886	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
887	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
888	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  1)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  1)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  1)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
889	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  2)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  2)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  2)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
890	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
891	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK  >>  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
892	[BUG]  [BUGGY]  ||  Token.FUNCTION  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.FUNCTION  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.FUNCTION  ==  Token.BLOCK;	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
893	[BUG]  [BUGGY]  ||  Token.FUNCTION!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.FUNCTION!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.FUNCTION!=  Token.BLOCK;	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
894	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
895	[BUG]  [BUGGY]  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
896	[BUG]  [BUGGY]  Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(result))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
897	[BUG]  [BUGGY]  result.equals(Token.RETURN))  {  return  Token.RETURN;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.RETURN))  {  return  Token.RETURN;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.RETURN))  {  return  Token.RETURN;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
898	[BUG]  [BUGGY]  ||(token  ==  Token.FUNCTION  &&  token!=  Token.BLOCK))  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.FUNCTION  &&  token!=  Token.BLOCK))  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token  ==  Token.FUNCTION  &&  token!=  Token.BLOCK))  {  return  Token.FUNCTION;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
899	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  ==  Token.FUNCTION)  {  return  Token.FUNCTION;  }	  if(token    ==    Token.FUNCTION)    {    return    Token.FUNCTION;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
900	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
901	[BUG]  [BUGGY]  &&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  &&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	&&  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)&&    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
902	[BUG]  [BUGGY]  case  Token.STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.STRICT_RESERVED_KEYWORDS:  return  Token.BLOCK;	  case    ES5_STRICT_RESERVED_KEYWORDS:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
903	[BUG]  [BUGGY]  result:  return  Token.BLOCK  +  EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK  +  EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK  +  EXPR_RESULT;	  result:    return    Token.BLOCK    +    token;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
904	[BUG]  [BUGGY]  result:  return  Token.EXPR_RESULT?  Token.BLOCK  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.EXPR_RESULT?  Token.BLOCK  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.EXPR_RESULT?  Token.BLOCK  :  Token.BLOCK;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
905	[BUG]  [BUGGY]  result:  return  Token.EXPR_RESULT  &&  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.EXPR_RESULT  &&  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.EXPR_RESULT  &&  Token.BLOCK;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
906	[BUG]  [BUGGY]  case  Token.EXPR_BLOCK:  return  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.EXPR_BLOCK:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.EXPR_BLOCK:  return  Token.EXPR_RESULT;	  result:    return    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
907	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals( "n "))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)||  token.equals( "n "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  token.equals( "n "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
908	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.BLOCK  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
909	[BUG]  [BUGGY]  ||  Token.NAME!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.NAME!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.NAME!=  Token.BLOCK;	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
910	[BUG]  [BUGGY]  Token.NAME:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.NAME:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.NAME:  return  Token.BLOCK;	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
911	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
912	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT);	  result    =    token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
913	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
914	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(parent))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(parent))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(parent))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
915	[BUG]  [BUGGY]  ||(token!=  Token.BLOCK  &&  token  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||(token!=  Token.BLOCK  &&  token  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||(token!=  Token.BLOCK  &&  token  ==  Token.BLOCK))  {  return  Token.BLOCK;  }	  ||(token    ==    Token.BLOCK    &&    token!=    Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
916	[BUG]  [BUGGY]  case  b  =  Token.BLOCK:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  b  =  Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  b  =  Token.BLOCK:  return  Token.BLOCK;	  case    java.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
917	[BUG]  [BUGGY]  Token.BLOCK  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  result    ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
918	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  |  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BOOLEAN  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BOOLEAN  |  Token.EXPR_RESULT;	  return    Token.BLOCK    |    Token.BOOLEAN;    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
919	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
920	[BUG]  [BUGGY]  if(result.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(result.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(result.equals(Token.BLOCK))  {  return  result;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
921	[BUG]  [BUGGY]  result  =  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK))    {    return    result;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
922	[BUG]  [BUGGY]  parent.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  parent.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	parent.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
923	[BUG]  [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.NAME)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.NAME)||  token.equals(Token.CATCH))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
924	[BUG]  [BUGGY]  ||  token.equals(Token.ELEMENT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.ELEMENT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.ELEMENT))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
925	[BUG]  [BUGGY]  ||  token.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.startsWith(Token.BLOCK))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
926	[BUG]  [BUGGY]  |  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
927	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BOOLEAN;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BOOLEAN;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BOOLEAN;  }	  ||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
928	[BUG]  [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
929	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK)&&  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
930	[BUG]  [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  token.equals(Token.BLOCK)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.NAME))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
931	[BUG]  [BUGGY]  case  Token.BLOCK  &  Token.NAME:  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK  &  Token.NAME:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK  &  Token.NAME:	  return    Token.BLOCK    &    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
932	[BUG]  [BUGGY]  case  Token.BLOCK  &  Token.NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK  &  Token.NAME;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK  &  Token.NAME;	  return    Token.BLOCK    &    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
933	[BUG]  [BUGGY]  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
934	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
935	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
936	[BUG]  [BUGGY]  parent.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  parent.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	parent.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
937	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
938	[BUG]  [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.GETTER)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.GETTER)||  token.equals(Token.NAME))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
939	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK?  Token.BLOCK  :  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK?  Token.BLOCK  :  Token.BLOCK);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK?  Token.BLOCK  :  Token.BLOCK);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
940	[BUG]  [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE);	  Token.BLOCK    =    token.equals(Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
941	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.SYNTHETIC;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.SYNTHETIC;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.SYNTHETIC;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
942	[BUG]  [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
943	[BUG]  [BUGGY]  token  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  token  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	token  =  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_TYPE))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_TYPE))    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
944	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  }	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
945	[BUG]  [BUGGY]  Case  Token.BLOCK:  return  Token.BLOCK;  break;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Case  Token.BLOCK:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Case  Token.BLOCK:  return  Token.BLOCK;  break;	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
946	[BUG]  [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  break;	  if(token.equals(Token.BLOCK))    {    case    Token.BLOCK:    return    Token.BLOCK;    break;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
947	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  |  Token.CATCH;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.NAME  |  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
948	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.OBJECT;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.OBJECT;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.OBJECT;	  return    Token.BLOCK?    Token.BLOCK    :    Token.NAME;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
949	[BUG]  [BUGGY]  Token.BLOCK  =  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Token.BLOCK  =  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
950	[BUG]  [BUGGY]  result:  return  Token.BLOCK?  Token.EXPR_RESULT  :  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result:  return  Token.BLOCK?  Token.EXPR_RESULT  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result:  return  Token.BLOCK?  Token.EXPR_RESULT  :  Token.BLOCK;	  result:    return    Token.BLOCK    |    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
951	[BUG]  [BUGGY]  result  |=  Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  Token.BLOCK.equals(token)||  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
952	[BUG]  [BUGGY]  if(Token.BLOCK.equals(token)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK.equals(token)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK.equals(token)&&  token.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK.equals(token)||    token.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
953	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK  -  1;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
954	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.BLOCK  -  1;	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
955	[BUG]  [BUGGY]  Result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  Result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	Result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
956	[BUG]  [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result.equals(Token.BLOCK)||  result.equals(Token.EXPR_RESULT);	  result.equals(Token.BLOCK)||    result.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
957	[BUG]  [BUGGY]  parent.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  parent.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	parent.equals(Token.GETTER))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
958	[BUG]  [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.GETTER;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.BLOCK))  {  return  Token.GETTER;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.BLOCK))  {  return  Token.GETTER;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.GETTER))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
959	[BUG]  [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  |=  token.equals(Token.BLOCK)||  token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EXPR_RESULT))    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
960	[BUG]  [BUGGY]  if(token  ==  Token.LABEL  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.LABEL  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.LABEL  ||  token  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
961	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	|  Token.BLOCK!=  Token.BLOCK;	  ||    Token.BLOCK!=    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
962	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK_DEF;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK_DEF;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK_DEF;	  case    Token.BLOCK:    return    Token.BLOCK_DEF;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
963	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
964	[BUG]  [BUGGY]  case  javascript.rhino.head.Token.BLOCKS:  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  javascript.rhino.head.Token.BLOCKS:  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  javascript.rhino.head.Token.BLOCKS:	  case    javascript.rhino.head.Token.BLOCK:    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
965	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
966	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(child))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(child))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(child))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
967	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(word))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(word))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.BLOCK.equals(word))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
968	[BUG]  [BUGGY]  if(token.equals(Token.LABEL))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL))  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
969	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
970	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(Token.NAME!=  Token.BLOCK)  {  return  Token.NAME;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
971	[BUG]  [BUGGY]  if(token  ==  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.NAME)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(token.equals(Token.NAME))    {    return    Token.NAME;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
972	[BUG]  [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.EXPR_RESULT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.OBJECTLIT)||  token.equals(Token.EXPR_RESULT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.OBJECTLIT)||  token.equals(Token.EXPR_RESULT))  {  return  Token.OBJECTLIT;  }  else  {  return  Token.OBJECTLIT;  }	  if(token.equals(Token.OBJECTLIT))    {    return    Token.OBJECTLIT;    }    else    {    return    Token.OBJECTLIT;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
973	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token  ==  Token.BLOCK  ||  token  >=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK    ||    token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
974	[BUG]  [BUGGY]  ||  token!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  token!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  token!=  Token.BLOCK;	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
975	[BUG]  [BUGGY]  ||  Token.EXPR_TYPE!=  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_TYPE!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	||  Token.EXPR_TYPE!=  Token.BLOCK;	  if(Token.BLOCK!=    Token.EXPR_TYPE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
976	[BUG]  [BUGGY]  case  blk:  return  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  case  blk:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	case  blk:  return  Token.BLOCK;	  case    javascript.rhino.head.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
977	[BUG]  [BUGGY]  result  =  Token.BLOCK  |  Token.CATCH  |  ES5_STRICT_RESERVED_KEYWORDS;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  |  Token.CATCH  |  ES5_STRICT_RESERVED_KEYWORDS;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	result  =  Token.BLOCK  |  Token.CATCH  |  ES5_STRICT_RESERVED_KEYWORDS;	  result    =    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
978	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.SEMI;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.SEMI;  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.SEMI;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
979	[BUG]  [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.VAR;  case  com.google.javascript.rhino.head.Token.WITH:  return  Token.WITH;  case  com.google.javascript.rhino.head.Token.CATCH:  return  Token.CATCH;  case  com.google.javascript.rhino.head.Token.VOID:  return  Token.VOID;  case  com.google.javascript.rhino.head.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.rhino.head.Token.BLOCK:      [BUGGY]  if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.rhino.head.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.rhino.head.Token.EXPR_VOID:  case  com.google.javascript.rhino.head.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.rhino.head.Token.SCRIPT:  return  Token.SCRIPT;  case  com.google.javascript.rhino.head.Token.GET:  return  Token.GETTER_DEF;  case  com.google.javascript.rhino.head.Token.SET:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  ES5_RESERVED_KEYWORDS  ES5_STRICT_RESERVED_KEYWORDS  directives  parsedComments  reservedKeywords  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  initalizer  irNode  key  labelName  leftChild  literalStringNode  lp  n  newBlock  newName  newNode  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  SUSPICIOUS_COMMENT_WARNING  comment  directive  flags  identifier  msg  sourceName  sourceString  value  StaticSourceFile  sourceFile  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  rootNodeJsDoc  int  token  	projects/Closure42/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.20851441405707477	1261	1261	1	replace	if(token.equals(Token.LABEL)||  token.equals(Token.EMPTY))  {  return  Token.BLOCK;  }	  if(token.equals(Token.BLOCK)||    token.equals(Token.EMPTY))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
